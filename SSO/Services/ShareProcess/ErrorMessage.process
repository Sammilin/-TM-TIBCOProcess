<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:TM="java://com.trendmicro.TMBWUtilities" xmlns:pfx="http://www.tibco.com/ns/no_namespace_schema_location/XSD/Parallels2.0/APSService2.xsd">
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/XSD/Parallels2.0/APSService2.xsd" schemaLocation="/XSD/Parallels2.0/APSService2.xsd"/>
    <pd:name>Services/Parallels/ShareProcess/ErrorMessage.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="group">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx:error" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>147</pd:startX>
    <pd:startY>108</pd:startY>
    <pd:returnBindings>
        <root>
            <xsl:choose>
                <xsl:when test="count($Start/group/error) >1">
                    <JSON>
                        <xsl:value-of select="tib:substring-before-last(substring-after($Map-Data/root/ErrorJSON,'{&quot;group&quot;:{'), &quot;}}&quot;)"/>
                    </JSON>
                </xsl:when>
                <xsl:otherwise>
                    <JSON>
                        <xsl:value-of select="concat(TM:stringReplace(tib:substring-before-last(substring-after($Map-Data/root/ErrorJSON,'{&quot;group&quot;:{'), &quot;}}&quot;), '&quot;error&quot;:', '&quot;error&quot;:['), ']')"/>
                    </JSON>
                </xsl:otherwise>
            </xsl:choose>
        </root>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="JSON" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>480</pd:endX>
    <pd:endY>108</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1400150522190</pd:targetNamespace>
    <pd:activity name="Map Data">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>301</pd:x>
        <pd:y>107</pd:y>
        <config>
            <element>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="ErrorJSON" type="xsd:string"/>
                            <xsd:element name="param" type="xsd:string"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <root>
                <ErrorJSON>
                    <xsl:value-of select="TM:parseXMLtoJSON(tib:render-xml($Start/group,1), 0)"/>
                </ErrorJSON>
                <param>
                    <xsl:value-of select="tib:render-xml($Start/group, 1)"/>
                </param>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Map Data</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map Data</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>
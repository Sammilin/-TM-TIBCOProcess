<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="http://www.tibco.com/pe/DeployedVarsType" xmlns:TM="java://com.trendmicro.TMBWUtilities" xmlns:ns5="http://www.tibco.com/pe/EngineTypes" xmlns:pfx="http://www.tibco.com/schemas/PLSService_SVN/XSD/PartnerAPI/Schema.xsd" xmlns:ns2="http://xmlns.tibco.com/bw/activity/xml/render/bytesEnvelope/2003/05" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns1="http://www.tibco.com/schemas/PLSService/XSD/PartnerAPI/Schema.xsd2" xmlns:ns4="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:ns3="http://www.trendmicro.com/ESB/schemas/error" xmlns:pfx5="http://www.tibco.com/ns/no_namespace_schema_location/XSD/LiberalAPI/CreateCustomerCompanyResponse.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx4="http://www.tibco.com/schemas/PLSService/XSD/LiberalAPI/Schema.xsd" xmlns:pfx3="http://www.trendmicro.com/PLS/PartnerAPI/Schemas" xmlns:pfx2="http://www.tibco.com/schemas/PLSService_SVN/XSD/PartnerAPI/Schema.xsd2">
    <xsd:import namespace="http://www.trendmicro.com/PLS/PartnerAPI/Schemas" schemaLocation="/XSD/PartnerAPI/CreateCompanyRequest.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/PLS/PartnerAPI/Schemas" schemaLocation="/XSD/PartnerAPI/CreateCompanyResponse.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/schemas/error" schemaLocation="/XSD/Common/error.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/PLSService/XSD/LiberalAPI/Schema.xsd" schemaLocation="/XSD/LiberalAPI/CreateCustomerCompanyRqRs.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/XSD/LiberalAPI/CreateCustomerCompanyResponse.xsd" schemaLocation="/XSD/LiberalAPI/CreateCustomerCompanyResponse.xsd"/>
    <pd:name>ExternalServices/LiberalAPI/v1.0/CreateCustomerCompany.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="tenantID" type="xsd:string"/>
                    <xsd:element name="BWTraceID" type="xsd:string"/>
                    <xsd:element ref="pfx4:CreateCustomerCompanyRq"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>62</pd:startX>
    <pd:startY>132</pd:startY>
    <pd:returnBindings>
        <CreateCustomerCompanyRs>
            <xsl:for-each select="$Parse-XML/CreateCustomerCompanyRs/Account">
                <Account>
                    <xsl:if test="CompanyID">
                        <CompanyID>
                            <xsl:value-of select="CompanyID"/>
                        </CompanyID>
                    </xsl:if>
                    <xsl:if test="GlobalID">
                        <GlobalID>
                            <xsl:value-of select="GlobalID"/>
                        </GlobalID>
                    </xsl:if>
                    <xsl:if test="LoginName">
                        <LoginName>
                            <xsl:value-of select="LoginName"/>
                        </LoginName>
                    </xsl:if>
                    <xsl:if test="PhoneExtension">
                        <PhoneExtension>
                            <xsl:value-of select="PhoneExtension"/>
                        </PhoneExtension>
                    </xsl:if>
                    <xsl:if test="ContactEmail">
                        <ContactEmail>
                            <xsl:value-of select="ContactEmail"/>
                        </ContactEmail>
                    </xsl:if>
                    <xsl:if test="SSO_Status">
                        <SSO_Status>
                            <xsl:value-of select="SSO_Status"/>
                        </SSO_Status>
                    </xsl:if>
                    <xsl:if test="ModifyTime">
                        <ModifyTime>
                            <xsl:value-of select="ModifyTime"/>
                        </ModifyTime>
                    </xsl:if>
                    <xsl:if test="PhoneNumber">
                        <PhoneNumber>
                            <xsl:value-of select="PhoneNumber"/>
                        </PhoneNumber>
                    </xsl:if>
                    <xsl:if test="Polaris_Status">
                        <Polaris_Status>
                            <xsl:value-of select="Polaris_Status"/>
                        </Polaris_Status>
                    </xsl:if>
                    <xsl:if test="IsViewPrivacy">
                        <IsViewPrivacy>
                            <xsl:value-of select="IsViewPrivacy"/>
                        </IsViewPrivacy>
                    </xsl:if>
                    <xsl:if test="LastName">
                        <LastName>
                            <xsl:value-of select="LastName"/>
                        </LastName>
                    </xsl:if>
                    <xsl:if test="TMuniqueID">
                        <TMuniqueID>
                            <xsl:value-of select="TMuniqueID"/>
                        </TMuniqueID>
                    </xsl:if>
                    <xsl:if test="ModifyBy">
                        <ModifyBy>
                            <xsl:value-of select="ModifyBy"/>
                        </ModifyBy>
                    </xsl:if>
                    <xsl:if test="UserRole">
                        <UserRole>
                            <xsl:value-of select="UserRole"/>
                        </UserRole>
                    </xsl:if>
                    <xsl:if test="ChannelID">
                        <ChannelID>
                            <xsl:value-of select="ChannelID"/>
                        </ChannelID>
                    </xsl:if>
                    <xsl:if test="CreateTime">
                        <CreateTime>
                            <xsl:value-of select="CreateTime"/>
                        </CreateTime>
                    </xsl:if>
                    <xsl:if test="CreateBy">
                        <CreateBy>
                            <xsl:value-of select="CreateBy"/>
                        </CreateBy>
                    </xsl:if>
                    <xsl:if test="FirstName">
                        <FirstName>
                            <xsl:value-of select="FirstName"/>
                        </FirstName>
                    </xsl:if>
                    <xsl:if test="PhoneAreaCode">
                        <PhoneAreaCode>
                            <xsl:value-of select="PhoneAreaCode"/>
                        </PhoneAreaCode>
                    </xsl:if>
                    <xsl:if test="Language">
                        <Language>
                            <xsl:value-of select="Language"/>
                        </Language>
                    </xsl:if>
                    <xsl:if test="TimeZone">
                        <TimeZone>
                            <xsl:value-of select="TimeZone"/>
                        </TimeZone>
                    </xsl:if>
                </Account>
            </xsl:for-each>
            <xsl:for-each select="$Parse-XML/CreateCustomerCompanyRs/Company">
                <Company>
                    <xsl:if test="GC">
                        <GC>
                            <xsl:value-of select="GC"/>
                        </GC>
                    </xsl:if>
                    <xsl:if test="ParentCompanyID">
                        <ParentCompanyID>
                            <xsl:value-of select="ParentCompanyID"/>
                        </ParentCompanyID>
                    </xsl:if>
                    <xsl:if test="CompanyID">
                        <CompanyID>
                            <xsl:value-of select="CompanyID"/>
                        </CompanyID>
                    </xsl:if>
                    <xsl:if test="AddressState">
                        <AddressState>
                            <xsl:value-of select="AddressState"/>
                        </AddressState>
                    </xsl:if>
                    <xsl:if test="AddressCity">
                        <AddressCity>
                            <xsl:value-of select="AddressCity"/>
                        </AddressCity>
                    </xsl:if>
                    <xsl:if test="AddressStreet">
                        <AddressStreet>
                            <xsl:value-of select="AddressStreet"/>
                        </AddressStreet>
                    </xsl:if>
                    <xsl:if test="RoleID">
                        <RoleID>
                            <xsl:value-of select="RoleID"/>
                        </RoleID>
                    </xsl:if>
                    <xsl:if test="ModifyTime">
                        <ModifyTime>
                            <xsl:value-of select="ModifyTime"/>
                        </ModifyTime>
                    </xsl:if>
                    <xsl:if test="Note">
                        <Note>
                            <xsl:value-of select="Note"/>
                        </Note>
                    </xsl:if>
                    <xsl:if test="CreateByCompanyID">
                        <CreateByCompanyID>
                            <xsl:value-of select="CreateByCompanyID"/>
                        </CreateByCompanyID>
                    </xsl:if>
                    <xsl:if test="CompanyName">
                        <CompanyName>
                            <xsl:value-of select="CompanyName"/>
                        </CompanyName>
                    </xsl:if>
                    <xsl:if test="WLRefCompanyID">
                        <WLRefCompanyID>
                            <xsl:value-of select="WLRefCompanyID"/>
                        </WLRefCompanyID>
                    </xsl:if>
                    <xsl:if test="ModifyBy">
                        <ModifyBy>
                            <xsl:value-of select="ModifyBy"/>
                        </ModifyBy>
                    </xsl:if>
                    <xsl:if test="AddressPostalCode">
                        <AddressPostalCode>
                            <xsl:value-of select="AddressPostalCode"/>
                        </AddressPostalCode>
                    </xsl:if>
                    <xsl:if test="Status">
                        <Status>
                            <xsl:value-of select="Status"/>
                        </Status>
                    </xsl:if>
                    <xsl:if test="ChannelID">
                        <ChannelID>
                            <xsl:value-of select="ChannelID"/>
                        </ChannelID>
                    </xsl:if>
                    <xsl:if test="CreateTime">
                        <CreateTime>
                            <xsl:value-of select="CreateTime"/>
                        </CreateTime>
                    </xsl:if>
                    <xsl:if test="CreateBy">
                        <CreateBy>
                            <xsl:value-of select="CreateBy"/>
                        </CreateBy>
                    </xsl:if>
                    <xsl:if test="CountryCode">
                        <CountryCode>
                            <xsl:value-of select="CountryCode"/>
                        </CountryCode>
                    </xsl:if>
                    <xsl:if test="TenantID">
                        <TenantID>
                            <xsl:value-of select="TenantID"/>
                        </TenantID>
                    </xsl:if>
                </Company>
            </xsl:for-each>
        </CreateCustomerCompanyRs>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType ref="pfx5:CreateCustomerCompanyRs"/>
    <pd:endX>609</pd:endX>
    <pd:endY>130</pd:endY>
    <pd:errorSchemas>
        <errorMessage ref="ns3:Error"/>
    </pd:errorSchemas>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1334304367576</pd:targetNamespace>
    <pd:activity name="Map Json Request Body">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>178</pd:x>
        <pd:y>142</pd:y>
        <config>
            <element>
                <xsd:element name="RequestBody" type="xsd:string"/>
            </element>
        </config>
        <pd:inputBindings>
            <RequestBody>
                <xsl:value-of select="tib:substring-before-last(substring-after(TM:parseXMLtoJSON(tib:render-xml($Start/root/pfx4:CreateCustomerCompanyRq),0), ':'), '}')"/>
            </RequestBody>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Call Liberal Process">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>297</pd:x>
        <pd:y>142</pd:y>
        <config>
            <processName>/ExternalServices/LiberalAPI/v1.0/Call LiberalAPI Process.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <tenantID>
                    <xsl:value-of select="$Start/root/tenantID"/>
                </tenantID>
                <BWTraceID>
                    <xsl:value-of select="$Start/root/BWTraceID"/>
                </BWTraceID>
                <LiberalAPIURI>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/ExternalServices/LiberalAPI/v1.0/CreateCustomerCompany/ResourceURI"/>
                </LiberalAPIURI>
                <jsonMessage>
                    <xsl:value-of select="$Map-Json-Request-Body/RequestBody"/>
                </jsonMessage>
                <HttpMethod>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/ExternalServices/LiberalAPI/v1.0/CreateCustomerCompany/HttpMethod"/>
                </HttpMethod>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse XML">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>512</pd:x>
        <pd:y>131</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>false</validateOutput>
            <term ref="pfx5:CreateCustomerCompanyRs"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Map-Data-1/root"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map Data">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>405</pd:x>
        <pd:y>132</pd:y>
        <config>
            <element>
                <xsd:element name="root" type="xsd:string"/>
            </element>
        </config>
        <pd:inputBindings>
            <root>
                <xsl:value-of select="TM:stringReplace(tib:substring-before-last(substring-after($Call-Liberal-Process/root/outputJson, '{&quot;Message&quot;:&quot;'), '&quot;,&quot;Version&quot;:&quot;&quot;}'), '\\\&quot;' ,'\&quot;')"/>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>208</pd:x>
        <pd:y>264</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Generate Error">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>355</pd:x>
        <pd:y>264</pd:y>
        <config>
            <faultName>errorMessage</faultName>
        </config>
        <pd:inputBindings>
            <ns4:ActivityInput>
                <xsl:if test="$_error/ns5:ErrorReport/Msg">
                    <message>
                        <xsl:value-of select="$_error/ns5:ErrorReport/Msg"/>
                    </message>
                </xsl:if>
                <xsl:if test="$_error/ns5:ErrorReport/MsgCode">
                    <messageCode>
                        <xsl:value-of select="$_error/ns5:ErrorReport/MsgCode"/>
                    </messageCode>
                </xsl:if>
                <data>
                    <xsl:choose>
                        <xsl:when test="exists($_error_Call-Liberal-Process/ns3:Error)">
                            <xsl:copy-of select="$_error_Call-Liberal-Process/ns3:Error"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <ns3:Error>
                                <ns3:src>
                                    <xsl:value-of select="$_error/ns5:ErrorReport/ProcessStack"/>
                                </ns3:src>
                                <ns3:error_code>
                                    <xsl:value-of select="$_error/ns5:ErrorReport/MsgCode"/>
                                </ns3:error_code>
                                <ns3:error_message>
                                    <xsl:value-of select="$_error/ns5:ErrorReport/Msg"/>
                                </ns3:error_message>
                                <ns3:stack_trace>
                                    <xsl:value-of select="$_error/ns5:ErrorReport/StackTrace"/>
                                </ns3:stack_trace>
                            </ns3:Error>
                        </xsl:otherwise>
                    </xsl:choose>
                </data>
            </ns4:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map-Data-1">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>457</pd:x>
        <pd:y>223</pd:y>
        <config>
            <element>
                <xsd:element name="root" type="xsd:string"/>
            </element>
        </config>
        <pd:inputBindings>
            <root>
                <xsl:value-of select="concat('&lt;CreateCustomerCompanyRs>', TM:parseJSONtoXML($Map-Data/root, 1),'&lt;/CreateCustomerCompanyRs>')"/>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Map Json Request Body</pd:from>
        <pd:to>Call Liberal Process</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Map Json Request Body</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map Data</pd:from>
        <pd:to>Map-Data-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call Liberal Process</pd:from>
        <pd:to>Map Data</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>Generate Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map-Data-1</pd:from>
        <pd:to>Parse XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>
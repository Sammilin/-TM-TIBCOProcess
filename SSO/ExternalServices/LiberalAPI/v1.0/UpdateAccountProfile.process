<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="http://www.tibco.com/pe/DeployedVarsType" xmlns:TM="java://com.trendmicro.TMBWUtilities" xmlns:pfx="http://www.tibco.com/schemas/PLSService/XSD/LiberalAPI/Schema.xsd2" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns2="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:ns1="http://www.tibco.com/pe/EngineTypes" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx5="http://www.tibco.com/ns/no_namespace_schema_location/XSD/LiberalAPI/UpdateAccountProfileRs.xsd" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx4="http://www.tibco.com/schemas/PLSService/XSD/LiberalAPI/Schema.xsd" xmlns:pfx3="http://www.trendmicro.com/ESB/schemas/error" xmlns:pfx2="http://www.tibco.com/schemas/PLSService/XSD/LiberalAPI/Schema.xsd3">
    <xsd:import namespace="http://www.tibco.com/schemas/PLSService/XSD/LiberalAPI/Schema.xsd" schemaLocation="/XSD/LiberalAPI/CreateSubAccountResponse.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/schemas/error" schemaLocation="/XSD/Common/error.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/PLSService/XSD/LiberalAPI/Schema.xsd2" schemaLocation="/XSD/LiberalAPI/UpdateAccountProfileRq.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/XSD/LiberalAPI/UpdateAccountProfileRs.xsd" schemaLocation="/XSD/LiberalAPI/UpdateAccountProfileRs.xsd"/>
    <pd:name>ExternalServices/LiberalAPI/v1.0/UpdateAccountProfile.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="TenantID" type="xsd:string"/>
                    <xsd:element name="BWTraceID" type="xsd:string"/>
                    <xsd:element ref="pfx:UpdateAccountProfileRq"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>98</pd:startX>
    <pd:startY>70</pd:startY>
    <pd:returnBindings>
        <xsl:for-each select="$Parse-XML/UpdateAccountProfileRs">
            <UpdateAccountProfileRs>
                <xsl:if test="GlobalID">
                    <GlobalID>
                        <xsl:value-of select="GlobalID"/>
                    </GlobalID>
                </xsl:if>
                <xsl:if test="TMuniqueID">
                    <TMuniqueID>
                        <xsl:value-of select="TMuniqueID"/>
                    </TMuniqueID>
                </xsl:if>
                <xsl:if test="LoginName">
                    <LoginName>
                        <xsl:value-of select="LoginName"/>
                    </LoginName>
                </xsl:if>
                <xsl:if test="ContactEmail">
                    <ContactEmail>
                        <xsl:value-of select="ContactEmail"/>
                    </ContactEmail>
                </xsl:if>
                <xsl:if test="FirstName">
                    <FirstName>
                        <xsl:value-of select="FirstName"/>
                    </FirstName>
                </xsl:if>
                <xsl:if test="LastName">
                    <LastName>
                        <xsl:value-of select="LastName"/>
                    </LastName>
                </xsl:if>
                <xsl:if test="TimeZone">
                    <TimeZone>
                        <xsl:value-of select="TimeZone"/>
                    </TimeZone>
                </xsl:if>
                <xsl:if test="Language">
                    <Language>
                        <xsl:value-of select="Language"/>
                    </Language>
                </xsl:if>
                <xsl:if test="PhoneAreaCode">
                    <PhoneAreaCode>
                        <xsl:value-of select="PhoneAreaCode"/>
                    </PhoneAreaCode>
                </xsl:if>
                <xsl:if test="PhoneNumber">
                    <PhoneNumber>
                        <xsl:value-of select="PhoneNumber"/>
                    </PhoneNumber>
                </xsl:if>
                <xsl:if test="PhoneExtension">
                    <PhoneExtension>
                        <xsl:value-of select="PhoneExtension"/>
                    </PhoneExtension>
                </xsl:if>
                <xsl:if test="UserRole">
                    <UserRole>
                        <xsl:value-of select="UserRole"/>
                    </UserRole>
                </xsl:if>
                <xsl:if test="SSO_Status">
                    <SSO_Status>
                        <xsl:value-of select="SSO_Status"/>
                    </SSO_Status>
                </xsl:if>
                <xsl:if test="Polaris_Status">
                    <Polaris_Status>
                        <xsl:value-of select="Polaris_Status"/>
                    </Polaris_Status>
                </xsl:if>
                <xsl:if test="IsViewPrivacy">
                    <IsViewPrivacy>
                        <xsl:value-of select="IsViewPrivacy"/>
                    </IsViewPrivacy>
                </xsl:if>
                <xsl:if test="CompanyID">
                    <CompanyID>
                        <xsl:value-of select="CompanyID"/>
                    </CompanyID>
                </xsl:if>
                <xsl:if test="ChannelID">
                    <ChannelID>
                        <xsl:value-of select="ChannelID"/>
                    </ChannelID>
                </xsl:if>
                <xsl:if test="CreateBy">
                    <CreateBy>
                        <xsl:value-of select="CreateBy"/>
                    </CreateBy>
                </xsl:if>
                <xsl:if test="CreateTime">
                    <CreateTime>
                        <xsl:value-of select="CreateTime"/>
                    </CreateTime>
                </xsl:if>
                <xsl:if test="ModifyBy">
                    <ModifyBy>
                        <xsl:value-of select="ModifyBy"/>
                    </ModifyBy>
                </xsl:if>
                <xsl:if test="ModifyTime">
                    <ModifyTime>
                        <xsl:value-of select="ModifyTime"/>
                    </ModifyTime>
                </xsl:if>
            </UpdateAccountProfileRs>
        </xsl:for-each>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType ref="pfx5:UpdateAccountProfileRs"/>
    <pd:endX>684</pd:endX>
    <pd:endY>69</pd:endY>
    <pd:errorSchemas>
        <errorReport ref="pfx3:Error"/>
    </pd:errorSchemas>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1367827854361</pd:targetNamespace>
    <pd:activity name="Map Json Request Body">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>212</pd:x>
        <pd:y>81</pd:y>
        <config>
            <element>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="RequestBody" type="xsd:string"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <root>
                <RequestBody>
                    <xsl:value-of select="tib:substring-before-last(substring-after(TM:parseXMLtoJSON(tib:render-xml($Start/root/pfx:UpdateAccountProfileRq), 0),':'), '}')"/>
                </RequestBody>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Call LiberalAPI Process">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>294</pd:x>
        <pd:y>176</pd:y>
        <config>
            <processName>/ExternalServices/LiberalAPI/v1.0/Call LiberalAPI Process.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <tenantID>
                    <xsl:value-of select="$Start/root/TenantID"/>
                </tenantID>
                <BWTraceID>
                    <xsl:value-of select="$Start/root/BWTraceID"/>
                </BWTraceID>
                <LiberalAPIURI>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/ExternalServices/LiberalAPI/v1.0/UpdateAccountProfile/ResourceURI"/>
                </LiberalAPIURI>
                <jsonMessage>
                    <xsl:value-of select="$Map-Json-Request-Body/root/RequestBody"/>
                </jsonMessage>
                <HttpMethod>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/ExternalServices/LiberalAPI/v1.0/UpdateAccountProfile/HttpMethod"/>
                </HttpMethod>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Replace JSON String">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>382</pd:x>
        <pd:y>84</pd:y>
        <config>
            <element>
                <xsd:element name="root" type="xsd:string"/>
            </element>
        </config>
        <pd:inputBindings>
            <root>
                <xsl:value-of select="TM:stringReplace(tib:substring-before-last(substring-after($Call-LiberalAPI-Process/root/outputJson, '{&quot;Message&quot;:&quot;'), '&quot;,&quot;Version&quot;:&quot;&quot;}'), '\\\&quot;' ,'\&quot;')"/>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Append XML root element">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>485</pd:x>
        <pd:y>164</pd:y>
        <config>
            <element>
                <xsd:element name="root" type="xsd:string"/>
            </element>
        </config>
        <pd:inputBindings>
            <root>
                <xsl:value-of select="concat('&lt;UpdateAccountProfileRs>', TM:parseJSONtoXML($Replace-JSON-String/root, 1),'&lt;/UpdateAccountProfileRs>')"/>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse XML">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>561</pd:x>
        <pd:y>70</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx5:UpdateAccountProfileRs"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Append-XML-root-element/root"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>556</pd:x>
        <pd:y>285</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Generate Error">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>703</pd:x>
        <pd:y>287</pd:y>
        <config>
            <faultName>errorReport</faultName>
        </config>
        <pd:coercions>
            <pd:coercion xpath="$_error/ns1:ErrorReport/Data/*" element="pfx3:Error"/>
        </pd:coercions>
        <pd:inputBindings>
            <ns2:ActivityInput>
                <xsl:choose>
                    <xsl:when test="exists($_error/ns1:ErrorReport/Data)">
                        <data>
                            <pfx3:Error>
                                <pfx3:src>
                                    <xsl:value-of select="$_error/ns1:ErrorReport/Data/pfx3:Error/pfx3:src"/>
                                </pfx3:src>
                                <pfx3:error_code>
                                    <xsl:value-of select="$_error/ns1:ErrorReport/Data/pfx3:Error/pfx3:error_code"/>
                                </pfx3:error_code>
                                <pfx3:error_message>
                                    <xsl:value-of select="$_error/ns1:ErrorReport/Data/pfx3:Error/pfx3:error_message"/>
                                </pfx3:error_message>
                                <pfx3:stack_trace>
                                    <xsl:value-of select="$_error/ns1:ErrorReport/Data/pfx3:Error/pfx3:stack_trace"/>
                                </pfx3:stack_trace>
                            </pfx3:Error>
                        </data>
                    </xsl:when>
                    <xsl:otherwise>
                        <data>
                            <pfx3:Error>
                                <pfx3:src>
                                    <xsl:value-of select="$_error/ns1:ErrorReport/ProcessStack"/>
                                </pfx3:src>
                                <pfx3:error_code>
                                    <xsl:value-of select="$_error/ns1:ErrorReport/MsgCode"/>
                                </pfx3:error_code>
                                <pfx3:error_message>
                                    <xsl:value-of select="$_error/ns1:ErrorReport/Msg"/>
                                </pfx3:error_message>
                                <pfx3:stack_trace>
                                    <xsl:value-of select="$_error/ns1:ErrorReport/StackTrace"/>
                                </pfx3:stack_trace>
                            </pfx3:Error>
                        </data>
                    </xsl:otherwise>
                </xsl:choose>
            </ns2:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Map Json Request Body</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map Json Request Body</pd:from>
        <pd:to>Call LiberalAPI Process</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call LiberalAPI Process</pd:from>
        <pd:to>Replace JSON String</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Replace JSON String</pd:from>
        <pd:to>Append XML root element</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Append XML root element</pd:from>
        <pd:to>Parse XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>Generate Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>
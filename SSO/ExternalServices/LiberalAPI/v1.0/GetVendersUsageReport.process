<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="http://www.tibco.com/pe/DeployedVarsType" xmlns:TM="java://com.trendmicro.TMBWUtilities" xmlns:pfx="http://www.tibco.com/schemas/PLSService/XSD/LiberalAPI/Schema.xsd5" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns2="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:ns1="http://www.tibco.com/pe/EngineTypes" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx5="http://www.tibco.com/ns/no_namespace_schema_location/XSD/LiberalAPI/GetVendersUsageReportRsTest.xsd" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx4="http://www.tibco.com/ns/no_namespace_schema_location/XSD/LiberalAPI/GetVendersUsageReportRs.xsd" xmlns:pfx3="http://www.trendmicro.com/ESB/schemas/error" xmlns:pfx2="http://www.tibco.com/schemas/PLSService/XSD/LiberalAPI/Schema.xsd3">
    <xsd:import namespace="http://www.tibco.com/schemas/PLSService/XSD/LiberalAPI/Schema.xsd5" schemaLocation="/XSD/LiberalAPI/GetVendersUsageReportRq.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/schemas/error" schemaLocation="/XSD/Common/error.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/XSD/LiberalAPI/GetVendersUsageReportRsTest.xsd" schemaLocation="/XSD/LiberalAPI/GetVendersUsageReportRsTest.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/XSD/LiberalAPI/GetVendersUsageReportRs.xsd" schemaLocation="/XSD/LiberalAPI/GetVendersUsageReportRs.xsd"/>
    <pd:name>ExternalServices/LiberalAPI/v1.0/GetVendersUsageReport.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="TenantID" type="xsd:string"/>
                    <xsd:element name="BWTraceID" type="xsd:string"/>
                    <xsd:element ref="pfx:GetVendersUsageReportRq"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>94</pd:startX>
    <pd:startY>89</pd:startY>
    <pd:returnBindings>
        <xsl:for-each select="$Parse-XML/GetVendersUsageReportRs">
            <GetVendersUsageReportRs>
                <xsl:for-each select="UsageReport">
                    <UsageReport>
                        <xsl:if test="ReportCycleEndDate">
                            <ReportCycleEndDate>
                                <xsl:value-of select="ReportCycleEndDate"/>
                            </ReportCycleEndDate>
                        </xsl:if>
                        <xsl:if test="ChargedBy">
                            <ChargedBy>
                                <xsl:value-of select="ChargedBy"/>
                            </ChargedBy>
                        </xsl:if>
                        <xsl:if test="ReportStatus">
                            <ReportStatus>
                                <xsl:value-of select="ReportStatus"/>
                            </ReportStatus>
                        </xsl:if>
                        <xsl:if test="ModifyTime">
                            <ModifyTime>
                                <xsl:value-of select="ModifyTime"/>
                            </ModifyTime>
                        </xsl:if>
                        <xsl:if test="UsageReportID">
                            <UsageReportID>
                                <xsl:value-of select="UsageReportID"/>
                            </UsageReportID>
                        </xsl:if>
                        <xsl:if test="ModifyBy">
                            <ModifyBy>
                                <xsl:value-of select="ModifyBy"/>
                            </ModifyBy>
                        </xsl:if>
                        <xsl:if test="SubmitDueDate">
                            <SubmitDueDate>
                                <xsl:value-of select="SubmitDueDate"/>
                            </SubmitDueDate>
                        </xsl:if>
                        <xsl:if test="IsAutoApproved">
                            <IsAutoApproved>
                                <xsl:value-of select="IsAutoApproved"/>
                            </IsAutoApproved>
                        </xsl:if>
                        <xsl:if test="CreateBy">
                            <CreateBy>
                                <xsl:value-of select="CreateBy"/>
                            </CreateBy>
                        </xsl:if>
                        <xsl:if test="CreateTime">
                            <CreateTime>
                                <xsl:value-of select="CreateTime"/>
                            </CreateTime>
                        </xsl:if>
                        <xsl:if test="ReportCycleStartDate">
                            <ReportCycleStartDate>
                                <xsl:value-of select="ReportCycleStartDate"/>
                            </ReportCycleStartDate>
                        </xsl:if>
                        <xsl:if test="GenerationID">
                            <GenerationID>
                                <xsl:value-of select="GenerationID"/>
                            </GenerationID>
                        </xsl:if>
                        <xsl:if test="PartnerCompanyID">
                            <PartnerCompanyID>
                                <xsl:value-of select="PartnerCompanyID"/>
                            </PartnerCompanyID>
                        </xsl:if>
                        <xsl:for-each select="UsageReportDetail">
                            <UsageReportDetail>
                                <xsl:if test="DetailID">
                                    <DetailID>
                                        <xsl:value-of select="DetailID"/>
                                    </DetailID>
                                </xsl:if>
                                <xsl:if test="ServiceID">
                                    <ServiceID>
                                        <xsl:value-of select="ServiceID"/>
                                    </ServiceID>
                                </xsl:if>
                                <xsl:if test="ProductID">
                                    <ProductID>
                                        <xsl:value-of select="ProductID"/>
                                    </ProductID>
                                </xsl:if>
                                <xsl:if test="ProvisionedUnits">
                                    <ProvisionedUnits>
                                        <xsl:value-of select="ProvisionedUnits"/>
                                    </ProvisionedUnits>
                                </xsl:if>
                                <xsl:if test="UsedUnits">
                                    <UsedUnits>
                                        <xsl:value-of select="UsedUnits"/>
                                    </UsedUnits>
                                </xsl:if>
                                <xsl:if test="ChargedUnits">
                                    <ChargedUnits>
                                        <xsl:value-of select="ChargedUnits"/>
                                    </ChargedUnits>
                                </xsl:if>
                                <xsl:if test="Comments">
                                    <Comments>
                                        <xsl:value-of select="Comments"/>
                                    </Comments>
                                </xsl:if>
                            </UsageReportDetail>
                        </xsl:for-each>
                    </UsageReport>
                </xsl:for-each>
            </GetVendersUsageReportRs>
        </xsl:for-each>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType ref="pfx4:GetVendersUsageReportRs"/>
    <pd:endX>811</pd:endX>
    <pd:endY>93</pd:endY>
    <pd:errorSchemas>
        <errorMessage ref="pfx3:Error"/>
    </pd:errorSchemas>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1365997657354</pd:targetNamespace>
    <pd:activity name="Map JSON request Body">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>232</pd:x>
        <pd:y>99</pd:y>
        <config>
            <element>
                <xsd:element name="requestBody" type="xsd:string"/>
            </element>
        </config>
        <pd:inputBindings>
            <requestBody>
                <xsl:value-of select="tib:substring-before-last(substring-after(TM:parseXMLtoJSON(tib:render-xml($Start/root/pfx:GetVendersUsageReportRq), 0), ':'), '}')"/>
            </requestBody>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Call LiberalAPI Process">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>422</pd:x>
        <pd:y>97</pd:y>
        <config>
            <processName>/ExternalServices/LiberalAPI/v1.0/Call LiberalAPI Process.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <tenantID>
                    <xsl:value-of select="$Start/root/TenantID"/>
                </tenantID>
                <BWTraceID>
                    <xsl:value-of select="$Start/root/BWTraceID"/>
                </BWTraceID>
                <LiberalAPIURI>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/ExternalServices/LiberalAPI/v1.0/GetVendersUsageReport/RequestURI"/>
                </LiberalAPIURI>
                <xsl:choose>
                    <xsl:when test="count($Start/root/pfx:GetVendersUsageReportRq/pfx:VenderID)>1">
                        <jsonMessage>
                            <xsl:value-of select="$Map-JSON-request-Body/requestBody"/>
                        </jsonMessage>
                    </xsl:when>
                    <xsl:otherwise>
                        <jsonMessage>
                            <xsl:value-of select="$Append-character/root/result"/>
                        </jsonMessage>
                    </xsl:otherwise>
                </xsl:choose>
                <HttpMethod>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/ExternalServices/LiberalAPI/v1.0/GetVendersUsageReport/HttpMethod"/>
                </HttpMethod>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map Data">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>538</pd:x>
        <pd:y>88</pd:y>
        <config>
            <element>
                <xsd:element name="JSONString" type="xsd:string"/>
            </element>
        </config>
        <pd:inputBindings>
            <JSONString>
                <xsl:value-of select="TM:stringReplace(TM:stringReplace(TM:stringReplace(TM:stringReplace(tib:substring-before-last(substring-after($Call-LiberalAPI-Process/root/outputJson, '{&quot;Message&quot;:&quot;'), '&quot;,&quot;Version&quot;:&quot;&quot;}'),'\\{2,}', &quot;__&quot; ),'\\\&quot;','&quot;'),'__&quot;','＇'),&quot;__&quot;,&quot;&quot;)"/>
            </JSONString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse XML">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>668</pd:x>
        <pd:y>90</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>false</validateOutput>
            <term ref="pfx4:GetVendersUsageReportRs"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="concat('&lt;GetVendersUsageReportRs>', TM:parseJSONtoXML($Map-Data/JSONString, 1),'&lt;/GetVendersUsageReportRs>')"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>495</pd:x>
        <pd:y>233</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
            <fault>localname=Error namespace=http://www.trendmicro.com/ESB/schemas/error</fault>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Generate Error">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>649</pd:x>
        <pd:y>232</pd:y>
        <config>
            <faultName>errorMessage</faultName>
        </config>
        <pd:inputBindings>
            <ns2:ActivityInput>
                <data>
                    <xsl:choose>
                        <xsl:when test="exists($_error_Call-LiberalAPI-Process/pfx3:Error)">
                            <pfx3:Error>
                                <pfx3:src>
                                    <xsl:value-of select="$_error_Call-LiberalAPI-Process/pfx3:Error/pfx3:src"/>
                                </pfx3:src>
                                <pfx3:error_code>
                                    <xsl:value-of select="$_error_Call-LiberalAPI-Process/pfx3:Error/pfx3:error_code"/>
                                </pfx3:error_code>
                                <pfx3:error_message>
                                    <xsl:value-of select="$_error_Call-LiberalAPI-Process/pfx3:Error/pfx3:error_message"/>
                                </pfx3:error_message>
                                <pfx3:stack_trace>
                                    <xsl:value-of select="$_error_Call-LiberalAPI-Process/pfx3:Error/pfx3:stack_trace"/>
                                </pfx3:stack_trace>
                            </pfx3:Error>
                        </xsl:when>
                        <xsl:otherwise>
                            <pfx3:Error>
                                <pfx3:src>
                                    <xsl:value-of select="$_error/ns1:ErrorReport/ProcessStack"/>
                                </pfx3:src>
                                <pfx3:error_code>
                                    <xsl:value-of select="$_error/ns1:ErrorReport/MsgCode"/>
                                </pfx3:error_code>
                                <pfx3:error_message>
                                    <xsl:value-of select="$_error/ns1:ErrorReport/Msg"/>
                                </pfx3:error_message>
                                <pfx3:stack_trace>
                                    <xsl:value-of select="$_error/ns1:ErrorReport/StackTrace"/>
                                </pfx3:stack_trace>
                            </pfx3:Error>
                        </xsl:otherwise>
                    </xsl:choose>
                </data>
            </ns2:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Append character">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>233</pd:x>
        <pd:y>242</pd:y>
        <config>
            <element>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="result" type="xsd:string"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <root>
                <result>
                    <xsl:value-of select="concat(tib:substring-before-last($Map-JSON-request-Body/requestBody, ':{'),':[{',tib:substring-after-last(concat(tib:substring-before-last($Map-JSON-request-Body/requestBody, ',&quot;'), '],',tib:substring-after-last($Map-JSON-request-Body/requestBody, ',')), ':{'))"/>
                </result>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Map JSON request Body</pd:to>
        <pd:xpathDescription/>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map Data</pd:from>
        <pd:to>Parse XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>Generate Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call LiberalAPI Process</pd:from>
        <pd:to>Map Data</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map JSON request Body</pd:from>
        <pd:to>Call LiberalAPI Process</pd:to>
        <pd:xpathDescription>Count CompanyID &gt;1</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>count($Start/root/pfx:GetVendersUsageReportRq/pfx:VenderID)&gt;1</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Append character</pd:from>
        <pd:to>Call LiberalAPI Process</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map JSON request Body</pd:from>
        <pd:to>Append character</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>
<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="GCC_U_Corporate_SR_AMSS_Escalation_Service" xmlns:ns5="http://www.trendmicro.com/PSC/PSC_CreateEscalationActRq" xmlns:ns6="http://www.tibco.com/schemas/GCCPortal/XSD/PSC/EscalationActivity.xsd" xmlns:pfx="http://www.siebel.com/xml/GCC-U%20Corporate%20SR%20AMSS%20Escalation%20Output" xmlns:ns42="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns2="http://www.siebel.com/xml/GCC-U%20Corporate%20SR%20AMSS%20Escalation%20Input" xmlns:ns1="AMSS Task Common WS" xmlns:ns4="http://www.tibco.com/schemas/GCCPortal/XSD/PSC/AMTaskEscAct.xsd" xmlns:ns3="GCC-U_AMSS_Escalation_WS" xmlns:ns0="http://www.trendmicro.com/ESB/schemas/messageHeader" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx3="http://www.trendmicro.com/PSC/PSC_AMTaskEscActRq" xmlns:pfx2="http://tempuri.org/">
    <xsd:import namespace="http://www.trendmicro.com/PSC/PSC_AMTaskEscActRq" schemaLocation="/WSDL/Client/PSCXSD/PSC_AMTaskEscActRq.xsd"/>
    <pd:name>Services/SharedOperations/CreateMalwareTask_V2.process</pd:name>
    <pd:description>Separate into different instance</pd:description>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="CreateMalwareTask">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="MalwareTask">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="File" minOccurs="0" maxOccurs="unbounded">
                                    <xsd:complexType>
                                        <xsd:sequence>
                                            <xsd:element name="FileID" type="xsd:string"/>
                                            <xsd:element name="SHA1" type="xsd:string"/>
                                            <xsd:element name="FileName" type="xsd:string"/>
                                            <xsd:element name="FileSize" type="xsd:string"/>
                                            <xsd:element name="FTPLocation" type="xsd:string"/>
                                            <xsd:element name="AMSSTaskType" type="xsd:string"/>
                                        </xsd:sequence>
                                    </xsd:complexType>
                                </xsd:element>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="AMSSInboundTaskInput">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="SouceReferenceNumber" type="xsd:string"/>
                                <xsd:element name="PatternVersion" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="PatternBranch" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="PatternType" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="Title" type="xsd:string"/>
                                <xsd:element name="Country" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="FirstName" type="xsd:string"/>
                                <xsd:element name="LastName" type="xsd:string"/>
                                <xsd:element name="OS" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="Entitlement" type="xsd:string"/>
                                <xsd:element name="Priority" type="xsd:string"/>
                                <xsd:element name="Email" type="xsd:string"/>
                                <xsd:element name="Description" type="xsd:string"/>
                                <xsd:element name="Region" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="ParentTaskID" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="ProductName" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="ProductGIC" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="TAMEmail" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="IsAMEX" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="OriginalType" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="TaskLabel" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="ServiceLevel" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="SubmitDate" type="xsd:string"/>
                                <xsd:element name="PatternFlag" type="xsd:string" minOccurs="0"/>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="EscalationActivityInput">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="sSRNumber" type="xsd:string"/>
                                <xsd:element name="IoRepresetation">
                                    <xsd:complexType>
                                        <xsd:sequence>
                                            <xsd:element name="Description" type="xsd:string"/>
                                            <xsd:element name="Title" type="xsd:string"/>
                                            <xsd:element name="Type" type="xsd:string"/>
                                            <xsd:element name="NeuronId" type="xsd:string" minOccurs="0"/>
                                        </xsd:sequence>
                                    </xsd:complexType>
                                </xsd:element>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="UpdateMalwareTaskInput">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="PortalSourceID" type="xsd:string"/>
                                <xsd:element name="SRNumber" type="xsd:string"/>
                                <xsd:element name="ActivityRowID" type="xsd:string"/>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="MessageKey" type="xsd:string"/>
                    <xsd:element name="SourceID" type="xsd:string"/>
                    <xsd:element name="OpenAMSSFlag" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="ArchFileName" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="ArchFileSHA1" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="ArchFileLocation" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="AMESAttach" minOccurs="0">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="FileName" type="xsd:string"/>
                                <xsd:element name="FileExt" type="xsd:string"/>
                                <xsd:element name="FilePath" type="xsd:string"/>
                                <xsd:element name="FileType" type="xsd:string"/>
                                <xsd:element name="FileBinary" type="xsd:base64Binary"/>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="RequestSource" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>57</pd:startX>
    <pd:startY>167</pd:startY>
    <pd:returnBindings>
        <Status>
            <UpdatePSC>
                <xsl:value-of select="$Call-Back-PSC/pfx2:UpdateMalwareTaskResponse/pfx2:UpdateMalwareTaskResult"/>
            </UpdatePSC>
        </Status>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endX>805</pd:endX>
    <pd:endY>171</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1327999960971</pd:targetNamespace>
    <pd:activity name="Create1stEscalationActivity">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>222</pd:x>
        <pd:y>312</pd:y>
        <config>
            <processName>/Services/SharedOperations/CreateEscalationActByQueue.process</processName>
        </config>
        <pd:inputBindings>
            <ns5:PSC_CreateEscalationActRq>
                <ns5:RequestHeader>
                    <ns0:MessageKey>
                        <xsl:value-of select="$Start/CreateMalwareTask/MessageKey"/>
                    </ns0:MessageKey>
                    <ns0:ServiceName>
                        <xsl:value-of select="'GCCU_CreateEscalationAct'"/>
                    </ns0:ServiceName>
                    <ns0:ServiceVersion>
                        <xsl:value-of select="'V1.0'"/>
                    </ns0:ServiceVersion>
                    <ns0:SourceID>
                        <xsl:value-of select="$Start/CreateMalwareTask/SourceID"/>
                    </ns0:SourceID>
                    <ns0:RqTimestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns0:RqTimestamp>
                </ns5:RequestHeader>
                <ns5:RequestBody>
                    <ns6:RequestSource>
                        <xsl:value-of select="$Start/CreateMalwareTask/RequestSource"/>
                    </ns6:RequestSource>
                    <ns6:ResendCount>
                        <xsl:value-of select="0"/>
                    </ns6:ResendCount>
                    <ns6:EscalationAct>
                        <ns6:AMSSEscalation>
                            <xsl:choose>
                                <xsl:when test="$Start/CreateMalwareTask/EscalationActivityInput/IoRepresetation/Type ='Virus File Uploaded'">
                                    <ns6:AMSSTaskType>
                                        <xsl:value-of select="'File to Verify'"/>
                                    </ns6:AMSSTaskType>
                                </xsl:when>
                                <xsl:when test="$Start/CreateMalwareTask/EscalationActivityInput/IoRepresetation/Type ='Supporting File Uploaded'">
                                    <ns6:AMSSTaskType>
                                        <xsl:value-of select="'SIC Log Analysis'"/>
                                    </ns6:AMSSTaskType>
                                </xsl:when>
                                <xsl:otherwise>
                                    <ns6:AMSSTaskType>
                                        <xsl:value-of select="''"/>
                                    </ns6:AMSSTaskType>
                                </xsl:otherwise>
                            </xsl:choose>
                            <ns6:Description>
                                <xsl:value-of select="$Start/CreateMalwareTask/EscalationActivityInput/IoRepresetation/Description"/>
                            </ns6:Description>
                            <ns6:FileLocation>
                                <xsl:value-of select="$Start/CreateMalwareTask/ArchFileLocation"/>
                            </ns6:FileLocation>
                            <xsl:if test="$Start/CreateMalwareTask/EscalationActivityInput/IoRepresetation/NeuronId">
                                <ns6:NeuronId>
                                    <xsl:value-of select="$Start/CreateMalwareTask/EscalationActivityInput/IoRepresetation/NeuronId"/>
                                </ns6:NeuronId>
                            </xsl:if>
                            <ns6:OriinalFileName>
                                <xsl:value-of select="$Start/CreateMalwareTask/ArchFileName"/>
                            </ns6:OriinalFileName>
                            <ns6:SHA1>
                                <xsl:value-of select="$Start/CreateMalwareTask/ArchFileSHA1"/>
                            </ns6:SHA1>
                            <ns6:Source>
                                <xsl:value-of select="'GCCU'"/>
                            </ns6:Source>
                            <ns6:Title>
                                <xsl:value-of select="$Start/CreateMalwareTask/EscalationActivityInput/IoRepresetation/Title"/>
                            </ns6:Title>
                            <ns6:Type>
                                <xsl:value-of select="$Start/CreateMalwareTask/EscalationActivityInput/IoRepresetation/Type"/>
                            </ns6:Type>
                        </ns6:AMSSEscalation>
                        <ns6:SRNumber>
                            <xsl:value-of select="$Start/CreateMalwareTask/EscalationActivityInput/sSRNumber"/>
                        </ns6:SRNumber>
                        <ns6:IntegrationSource>
                            <xsl:value-of select="'AMSS'"/>
                        </ns6:IntegrationSource>
                    </ns6:EscalationAct>
                </ns5:RequestBody>
            </ns5:PSC_CreateEscalationActRq>
        </pd:inputBindings>
    </pd:activity>
    <pd:group name="Group">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>292</pd:x>
        <pd:y>70</pd:y>
        <pd:width>378</pd:width>
        <pd:height>182</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>inputLoop</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:over>$Start/CreateMalwareTask/MalwareTask/File</pd:over>
            <pd:iterationElementSlot>MalwareFile</pd:iterationElementSlot>
            <pd:indexSlot>j</pd:indexSlot>
            <pd:activityOutputName/>
            <pd:accumulateOutput>false</pd:accumulateOutput>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Render AMTask EscAct</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>JMS AMTask EscAct</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Render AMTask EscAct</pd:from>
            <pd:to>JMS AMTask EscAct</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="Render AMTask EscAct">
            <pd:type>com.tibco.plugin.xml.XMLRendererActivity</pd:type>
            <pd:resourceType>ae.activities.XMLRendererActivity</pd:resourceType>
            <pd:x>402</pd:x>
            <pd:y>178</pd:y>
            <config>
                <renderAsText>text</renderAsText>
                <validateInput>false</validateInput>
                <term ref="pfx3:PSC_AMTaskEscActRq"/>
            </config>
            <pd:inputBindings>
                <pfx3:PSC_AMTaskEscActRq>
                    <pfx3:RequestHeader>
                        <ns0:MessageKey>
                            <xsl:value-of select="$Start/CreateMalwareTask/MessageKey"/>
                        </ns0:MessageKey>
                        <ns0:ServiceName>
                            <xsl:value-of select="'PSC_AMTaskEscAct'"/>
                        </ns0:ServiceName>
                        <ns0:ServiceVersion>
                            <xsl:value-of select="'V1.0'"/>
                        </ns0:ServiceVersion>
                        <ns0:SourceID>
                            <xsl:value-of select="$Start/CreateMalwareTask/SourceID"/>
                        </ns0:SourceID>
                        <ns0:RqTimestamp>
                            <xsl:value-of select="current-dateTime()"/>
                        </ns0:RqTimestamp>
                    </pfx3:RequestHeader>
                    <pfx3:RequestBody>
                        <ns4:AMSSTask>
                            <ns4:SHA1>
                                <xsl:value-of select="$MalwareFile/File/SHA1"/>
                            </ns4:SHA1>
                            <ns4:SRNumber>
                                <xsl:value-of select="$Start/CreateMalwareTask/UpdateMalwareTaskInput/SRNumber"/>
                            </ns4:SRNumber>
                            <ns4:FirstName>
                                <xsl:value-of select="$Start/CreateMalwareTask/AMSSInboundTaskInput/FirstName"/>
                            </ns4:FirstName>
                            <ns4:LastName>
                                <xsl:value-of select="$Start/CreateMalwareTask/AMSSInboundTaskInput/LastName"/>
                            </ns4:LastName>
                            <ns4:FTPLocation>
                                <xsl:value-of select="$MalwareFile/File/FTPLocation"/>
                            </ns4:FTPLocation>
                            <xsl:if test="exists($Start/CreateMalwareTask/AMSSInboundTaskInput/ParentTaskID)">
                                <xsl:if test="$Start/CreateMalwareTask/AMSSInboundTaskInput/ParentTaskID">
                                    <ns4:ParentTaskId>
                                        <xsl:value-of select="$Start/CreateMalwareTask/AMSSInboundTaskInput/ParentTaskID"/>
                                    </ns4:ParentTaskId>
                                </xsl:if>
                            </xsl:if>
                            <ns4:SourceReferenceNumber>
                                <xsl:value-of select="$Start/CreateMalwareTask/AMSSInboundTaskInput/SouceReferenceNumber"/>
                            </ns4:SourceReferenceNumber>
                            <xsl:if test="$Start/CreateMalwareTask/EscalationActivityInput/IoRepresetation/NeuronId">
                                <ns4:SourceId>
                                    <xsl:value-of select="$Start/CreateMalwareTask/EscalationActivityInput/IoRepresetation/NeuronId"/>
                                </ns4:SourceId>
                            </xsl:if>
                            <xsl:if test="$Start/CreateMalwareTask/AMSSInboundTaskInput/PatternVersion">
                                <ns4:PatternVersion>
                                    <xsl:value-of select="$Start/CreateMalwareTask/AMSSInboundTaskInput/PatternVersion"/>
                                </ns4:PatternVersion>
                            </xsl:if>
                            <ns4:Title>
                                <xsl:value-of select="$Start/CreateMalwareTask/AMSSInboundTaskInput/Title"/>
                            </ns4:Title>
                            <xsl:if test="$Start/CreateMalwareTask/AMSSInboundTaskInput/PatternBranch">
                                <ns4:PatternBranch>
                                    <xsl:value-of select="$Start/CreateMalwareTask/AMSSInboundTaskInput/PatternBranch"/>
                                </ns4:PatternBranch>
                            </xsl:if>
                            <ns4:Type>
                                <xsl:value-of select="$MalwareFile/File/AMSSTaskType"/>
                            </ns4:Type>
                            <xsl:if test="$Start/CreateMalwareTask/AMSSInboundTaskInput/Country">
                                <ns4:Country>
                                    <xsl:value-of select="$Start/CreateMalwareTask/AMSSInboundTaskInput/Country"/>
                                </ns4:Country>
                            </xsl:if>
                            <ns4:FileName>
                                <xsl:value-of select="$MalwareFile/File/FileName"/>
                            </ns4:FileName>
                            <ns4:OS>
                                <xsl:value-of select="$Start/CreateMalwareTask/AMSSInboundTaskInput/OS"/>
                            </ns4:OS>
                            <ns4:Entitlement>
                                <xsl:value-of select="$Start/CreateMalwareTask/AMSSInboundTaskInput/Entitlement"/>
                            </ns4:Entitlement>
                            <xsl:if test="$Start/CreateMalwareTask/AMSSInboundTaskInput/TAMEmail">
                                <ns4:TAMEmail>
                                    <xsl:value-of select="$Start/CreateMalwareTask/AMSSInboundTaskInput/TAMEmail"/>
                                </ns4:TAMEmail>
                            </xsl:if>
                            <ns4:Priority>
                                <xsl:value-of select="$Start/CreateMalwareTask/AMSSInboundTaskInput/Priority"/>
                            </ns4:Priority>
                            <ns4:Source>
                                <xsl:value-of select="'GCCU'"/>
                            </ns4:Source>
                            <ns4:SubmitDate>
                                <xsl:value-of select="$Start/CreateMalwareTask/AMSSInboundTaskInput/SubmitDate"/>
                            </ns4:SubmitDate>
                            <xsl:if test="$Start/CreateMalwareTask/AMSSInboundTaskInput/ProductName">
                                <ns4:Product>
                                    <xsl:value-of select="$Start/CreateMalwareTask/AMSSInboundTaskInput/ProductName"/>
                                </ns4:Product>
                            </xsl:if>
                            <ns4:FileSize>
                                <xsl:value-of select="$MalwareFile/File/FileSize"/>
                            </ns4:FileSize>
                            <ns4:Email>
                                <xsl:value-of select="$Start/CreateMalwareTask/AMSSInboundTaskInput/Email"/>
                            </ns4:Email>
                            <ns4:Description>
                                <xsl:value-of select="$Start/CreateMalwareTask/AMSSInboundTaskInput/Description"/>
                            </ns4:Description>
                            <ns4:Region>
                                <xsl:value-of select="$Start/CreateMalwareTask/AMSSInboundTaskInput/Region"/>
                            </ns4:Region>
                            <xsl:if test="$Start/CreateMalwareTask/AMSSInboundTaskInput/IsAMEX">
                                <ns4:IsAMEX>
                                    <xsl:value-of select="$Start/CreateMalwareTask/AMSSInboundTaskInput/IsAMEX"/>
                                </ns4:IsAMEX>
                            </xsl:if>
                            <xsl:if test="$Start/CreateMalwareTask/AMSSInboundTaskInput/OriginalType">
                                <ns4:OriginalType>
                                    <xsl:value-of select="$Start/CreateMalwareTask/AMSSInboundTaskInput/OriginalType"/>
                                </ns4:OriginalType>
                            </xsl:if>
                            <xsl:if test="$Start/CreateMalwareTask/AMSSInboundTaskInput/TaskLabel">
                                <ns4:TaskLabel>
                                    <xsl:value-of select="$Start/CreateMalwareTask/AMSSInboundTaskInput/TaskLabel"/>
                                </ns4:TaskLabel>
                            </xsl:if>
                            <xsl:if test="$Start/CreateMalwareTask/AMSSInboundTaskInput/ServiceLevel">
                                <ns4:ServiceLevel>
                                    <xsl:value-of select="$Start/CreateMalwareTask/AMSSInboundTaskInput/ServiceLevel"/>
                                </ns4:ServiceLevel>
                            </xsl:if>
                            <xsl:if test="exists($Start/CreateMalwareTask/AMSSInboundTaskInput/PatternFlag)">
                                <xsl:if test="$Start/CreateMalwareTask/AMSSInboundTaskInput/PatternFlag">
                                    <ns4:PatternFlag>
                                        <xsl:value-of select="$Start/CreateMalwareTask/AMSSInboundTaskInput/PatternFlag"/>
                                    </ns4:PatternFlag>
                                </xsl:if>
                            </xsl:if>
                        </ns4:AMSSTask>
                        <ns4:EscalationAct>
                            <ns4:AMSSTaskType>
                                <xsl:value-of select="$MalwareFile/File/AMSSTaskType"/>
                            </ns4:AMSSTaskType>
                            <ns4:Description>
                                <xsl:value-of select="$Start/CreateMalwareTask/EscalationActivityInput/IoRepresetation/Description"/>
                            </ns4:Description>
                            <ns4:FileLocation>
                                <xsl:value-of select="$MalwareFile/File/FTPLocation"/>
                            </ns4:FileLocation>
                            <ns4:IntegrationSourceId>
                                <xsl:value-of select="$MalwareFile/File/FileID"/>
                            </ns4:IntegrationSourceId>
                            <xsl:if test="$Start/CreateMalwareTask/EscalationActivityInput/IoRepresetation/NeuronId">
                                <ns4:NeuronId>
                                    <xsl:value-of select="$Start/CreateMalwareTask/EscalationActivityInput/IoRepresetation/NeuronId"/>
                                </ns4:NeuronId>
                            </xsl:if>
                            <ns4:OriginalFileName>
                                <xsl:value-of select="$MalwareFile/File/FileName"/>
                            </ns4:OriginalFileName>
                            <ns4:SHA1>
                                <xsl:value-of select="$MalwareFile/File/SHA1"/>
                            </ns4:SHA1>
                            <ns4:Source>
                                <xsl:value-of select="'GCCU'"/>
                            </ns4:Source>
                            <ns4:Title>
                                <xsl:value-of select="$Start/CreateMalwareTask/EscalationActivityInput/IoRepresetation/Title"/>
                            </ns4:Title>
                            <xsl:choose>
                                <xsl:when test="$Start/CreateMalwareTask/MalwareTask/File[1]/FileName='' and $Start/CreateMalwareTask/MalwareTask/File[1]/FileSize=0 and &#xA;$MalwareFile/File/AMSSTaskType !='Virus Report L1' and $MalwareFile/File/AMSSTaskType !='Virus Report L2'">
                                    <ns4:Type>
                                        <xsl:value-of select="'Outbound to AMSS'"/>
                                    </ns4:Type>
                                </xsl:when>
                                <xsl:otherwise>
                                    <ns4:Type>
                                        <xsl:value-of select="'AMSS Task Created'"/>
                                    </ns4:Type>
                                </xsl:otherwise>
                            </xsl:choose>
                            <ns4:sSRNumber>
                                <xsl:value-of select="$Start/CreateMalwareTask/EscalationActivityInput/sSRNumber"/>
                            </ns4:sSRNumber>
                            <ns4:sIntegrationSource>
                                <xsl:value-of select="'AMSS'"/>
                            </ns4:sIntegrationSource>
                        </ns4:EscalationAct>
                        <ns4:UpdateMalwareTaskInput>
                            <ns4:PortalSourceID>
                                <xsl:value-of select="$Start/CreateMalwareTask/UpdateMalwareTaskInput/PortalSourceID"/>
                            </ns4:PortalSourceID>
                            <ns4:SRNumber>
                                <xsl:value-of select="$Start/CreateMalwareTask/UpdateMalwareTaskInput/SRNumber"/>
                            </ns4:SRNumber>
                            <ns4:ActivityRowID>
                                <xsl:value-of select="$Start/CreateMalwareTask/UpdateMalwareTaskInput/ActivityRowID"/>
                            </ns4:ActivityRowID>
                        </ns4:UpdateMalwareTaskInput>
                        <xsl:if test="exists($Start/CreateMalwareTask/AMESAttach) and $j =1">
                            <xsl:for-each select="$Start/CreateMalwareTask/AMESAttach">
                                <ns4:AMESAttach>
                                    <ns4:FileName>
                                        <xsl:value-of select="FileName"/>
                                    </ns4:FileName>
                                    <ns4:FileExt>
                                        <xsl:value-of select="FileExt"/>
                                    </ns4:FileExt>
                                    <ns4:FilePath>
                                        <xsl:value-of select="FilePath"/>
                                    </ns4:FilePath>
                                    <ns4:FileType>
                                        <xsl:value-of select="FileType"/>
                                    </ns4:FileType>
                                    <ns4:FileBinary>
                                        <xsl:value-of select="FileBinary"/>
                                    </ns4:FileBinary>
                                </ns4:AMESAttach>
                            </xsl:for-each>
                        </xsl:if>
                        <ns4:RetryTime>
                            <xsl:value-of select="0"/>
                        </ns4:RetryTime>
                        <ns4:RequestSource>
                            <xsl:value-of select="$Start/CreateMalwareTask/RequestSource"/>
                        </ns4:RequestSource>
                    </pfx3:RequestBody>
                </pfx3:PSC_AMTaskEscActRq>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="JMS AMTask EscAct">
            <pd:type>com.tibco.plugin.jms.JMSQueueSendActivity</pd:type>
            <pd:resourceType>ae.activities.JMSQueueSendActivity</pd:resourceType>
            <pd:x>555</pd:x>
            <pd:y>171</pd:y>
            <config>
                <PermittedMessageType>Text</PermittedMessageType>
                <SessionAttributes>
                    <transacted>false</transacted>
                    <acknowledgeMode>1</acknowledgeMode>
                    <maxSessions>1</maxSessions>
                    <destination>%%Services/PSCService/PSC_AMTaskEscAct/DestinationQueue%%</destination>
                </SessionAttributes>
                <ConfigurableHeaders>
                    <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                    <JMSExpiration>0</JMSExpiration>
                    <JMSPriority>4</JMSPriority>
                </ConfigurableHeaders>
                <ConnectionReference>/Resources/JMS/JMS Connection.sharedjmscon</ConnectionReference>
            </config>
            <pd:inputBindings>
                <ns42:ActivityInput>
                    <Body>
                        <xsl:value-of select="$Render-AMTask-EscAct/xmlString"/>
                    </Body>
                </ns42:ActivityInput>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Create1stEscalationActivity</pd:to>
        <pd:xpathDescription>File Upload</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Start/CreateMalwareTask/EscalationActivityInput/IoRepresetation/Type ='Virus File Uploaded' or $Start/CreateMalwareTask/EscalationActivityInput/IoRepresetation/Type ='Supporting File Uploaded'
or$Start/CreateMalwareTask/EscalationActivityInput/IoRepresetation/Type ='File Uploaded'</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Create1stEscalationActivity</pd:from>
        <pd:to>End</pd:to>
        <pd:xpathDescription>Not Create AMSS</pd:xpathDescription>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Start/CreateMalwareTask/EscalationActivityInput/IoRepresetation/Type ='File Uploaded' and $Start/CreateMalwareTask/OpenAMSSFlag='N'</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Group</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Create1stEscalationActivity</pd:from>
        <pd:to>Group</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>
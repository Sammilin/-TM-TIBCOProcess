<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:ns2="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns1="http://www.tibco.com/pe/EngineTypes" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns4="http://www.trendmicro.com/ESB/schemas/errorReport" xmlns:ns3="http://www.trendmicro.com/ESB/schemas/DBLogger" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:TM="java://com.trendmicro.TMBWUtilities" xmlns:ns12="http://tempuri.org/" xmlns:pfx="http://www.trendmicro.com/ESB/schemas/error">
    <xsd:import namespace="http://www.trendmicro.com/ESB/schemas/error" schemaLocation="/XSD/Common/error.xsd"/>
    <pd:name>Services/G2Service/ShareProcess/SendMailService.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="MessageKey" type="xsd:string"/>
                    <xsd:element name="Subject" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="ServiceId" type="xsd:string"/>
                    <xsd:element name="JsonData" type="xsd:string"/>
                    <xsd:element name="AccountActivityId" type="xsd:string"/>
                    <xsd:element name="Receipts" type="xsd:string"/>
                    <xsd:element name="CC_Recipts" type="xsd:string"/>
                    <xsd:element name="TmpType" type="xsd:string"/>
                    <xsd:element name="System" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>71</pd:startX>
    <pd:startY>106</pd:startY>
    <pd:returnBindings>
        <root>
            <xsl:for-each select="$Call-Bifrost-to-send-Email/RequestActivityOutput/statusLine">
                <statusLine>
                    <httpVersion>
                        <xsl:value-of select="httpVersion"/>
                    </httpVersion>
                    <statusCode>
                        <xsl:value-of select="statusCode"/>
                    </statusCode>
                    <reasonPhrase>
                        <xsl:value-of select="reasonPhrase"/>
                    </reasonPhrase>
                </statusLine>
            </xsl:for-each>
            <asciiContent>
                <xsl:value-of select="$Call-Bifrost-to-send-Email/RequestActivityOutput/asciiContent"/>
            </asciiContent>
        </root>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="statusLine">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="httpVersion" type="xsd:string"/>
                                <xsd:element name="statusCode" type="xsd:string"/>
                                <xsd:element name="reasonPhrase" type="xsd:string"/>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="asciiContent" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>782</pd:endX>
    <pd:endY>106</pd:endY>
    <pd:errorSchemas>
        <ErrorMessage ref="pfx:Error"/>
    </pd:errorSchemas>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1406797516293</pd:targetNamespace>
    <pd:activity name="Generate Error">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>440</pd:x>
        <pd:y>324</pd:y>
        <config>
            <faultName>ErrorMessage</faultName>
        </config>
        <pd:coercions>
            <pd:coercion xpath="$_error/ns1:ErrorReport/Data/*" element="pfx:Error"/>
        </pd:coercions>
        <pd:inputBindings>
            <ns2:ActivityInput>
                <data>
                    <xsl:choose>
                        <xsl:when test="exists($_error/ns1:ErrorReport/Data/pfx:Error)">
                            <xsl:for-each select="$_error/ns1:ErrorReport/Data/pfx:Error">
                                <pfx:Error>
                                    <pfx:src>
                                        <xsl:value-of select="pfx:src"/>
                                    </pfx:src>
                                    <pfx:error_code>
                                        <xsl:value-of select="pfx:error_code"/>
                                    </pfx:error_code>
                                    <pfx:error_message>
                                        <xsl:value-of select="pfx:error_message"/>
                                    </pfx:error_message>
                                    <pfx:stack_trace>
                                        <xsl:value-of select="../../StackTrace"/>
                                    </pfx:stack_trace>
                                    <xsl:if test="pfx:traceMessageKey">
                                        <pfx:traceMessageKey>
                                            <xsl:value-of select="pfx:traceMessageKey"/>
                                        </pfx:traceMessageKey>
                                    </xsl:if>
                                </pfx:Error>
                            </xsl:for-each>
                        </xsl:when>
                        <xsl:otherwise>
                            <pfx:Error>
                                <pfx:src>
                                    <xsl:value-of select="$_error/ns1:ErrorReport/ProcessStack"/>
                                </pfx:src>
                                <pfx:error_code>
                                    <xsl:value-of select="$_error/ns1:ErrorReport/MsgCode"/>
                                </pfx:error_code>
                                <pfx:error_message>
                                    <xsl:value-of select="$_error/ns1:ErrorReport/Msg"/>
                                </pfx:error_message>
                                <pfx:stack_trace>
                                    <xsl:value-of select="$_error/ns1:ErrorReport/StackTrace"/>
                                </pfx:stack_trace>
                            </pfx:Error>
                        </xsl:otherwise>
                    </xsl:choose>
                </data>
            </ns2:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>251</pd:x>
        <pd:y>324</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Parse XML">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>499</pd:x>
        <pd:y>104</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term>
                <xsd:element name="BiFrostResponse">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:all>
                                <xsd:element name="Msg" type="xsd:string"/>
                                <xsd:element name="ReqID" type="xsd:string"/>
                                <xsd:element name="Code" type="xsd:string"/>
                            </xsd:all>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </term>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="concat(&quot;&lt;BiFrostResponse>&quot;,TM:parseJSONtoXML($Call-Bifrost-to-send-Email/RequestActivityOutput/asciiContent, 1), &quot;&lt;/BiFrostResponse>&quot;)"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Call Bifrost to send Email">
        <pd:type>com.tibco.plugin.http.client.HttpRequestActivity</pd:type>
        <pd:resourceType>httppalette.httpRequest</pd:resourceType>
        <pd:x>351</pd:x>
        <pd:y>115</pd:y>
        <config>
            <inputOutputVersion>5.3.0</inputOutputVersion>
            <newMimeSupport>true</newMimeSupport>
            <serverhost>10.31.165.5</serverhost>
            <serverport>30000</serverport>
            <customField>
                <row>
                    <attribute>TypeID</attribute>
                    <attributeType>string</attributeType>
                    <attributeCard>required</attributeCard>
                </row>
                <row>
                    <attribute>JSONData</attribute>
                    <attributeType>string</attributeType>
                    <attributeCard>required</attributeCard>
                </row>
                <row>
                    <attribute>System</attribute>
                    <attributeType>string</attributeType>
                    <attributeCard>optional</attributeCard>
                </row>
                <row>
                    <attribute>Subject</attribute>
                    <attributeType>string</attributeType>
                    <attributeCard>required</attributeCard>
                </row>
                <row>
                    <attribute>Recipient</attribute>
                    <attributeType>string</attributeType>
                    <attributeCard>required</attributeCard>
                </row>
                <row>
                    <attribute>CCRecipient</attribute>
                    <attributeType>string</attributeType>
                    <attributeCard>optional</attributeCard>
                </row>
                <row>
                    <attribute>BCCRecipient</attribute>
                    <attributeType>string</attributeType>
                    <attributeCard>optional</attributeCard>
                </row>
            </customField>
            <InputHeaders>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Accept" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Accept-Charset" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Accept-Encoding" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Type" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Cookie" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Pragma" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </InputHeaders>
            <OutputHeaders>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Allow" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Type" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Length" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Encoding" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Date" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Location" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Set-Cookie" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Pragma" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </OutputHeaders>
        </config>
        <pd:inputBindings>
            <RequestActivityInput>
                <Host>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/Services/G2Service/ShareProcess/MailTQA/HOST"/>
                </Host>
                <Port>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/Services/G2Service/ShareProcess/MailTQA/PORT"/>
                </Port>
                <Method>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/Services/G2Service/ShareProcess/MailTQA/RequestNotificationMail/Method"/>
                </Method>
                <RequestURI>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/Services/G2Service/ShareProcess/MailTQA/RequestNotificationMail/requestURL"/>
                </RequestURI>
                <Timeout>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/Services/G2Service/ShareProcess/MailTQA/TimeoutMillSec"/>
                </Timeout>
                <parameters>
                    <TypeID>
                        <xsl:value-of select="$Start/root/TmpType"/>
                    </TypeID>
                    <JSONData>
                        <xsl:value-of select="TM:URLEncode($Start/root/JsonData)"/>
                    </JSONData>
                    <System>
                        <xsl:value-of select="$Start/root/System"/>
                    </System>
                    <xsl:choose>
                        <xsl:when test="tib:trim($Start/root/Subject) !=&quot;&quot;">
                            <Subject>
                                <xsl:value-of select="$Start/root/Subject"/>
                            </Subject>
                        </xsl:when>
                        <xsl:otherwise>
                            <Subject>
                                <xsl:value-of select="concat(&quot;Your submission &quot;,$Start/root/AccountActivityId,&quot; has finished analysis by TrendMicro&quot;)"/>
                            </Subject>
                        </xsl:otherwise>
                    </xsl:choose>
                    <Recipient>
                        <xsl:value-of select="$Start/root/Receipts"/>
                    </Recipient>
                    <CCRecipient>
                        <xsl:value-of select="$Start/root/CC_Recipts"/>
                    </CCRecipient>
                </parameters>
            </RequestActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log Process">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>205</pd:x>
        <pd:y>109</pd:y>
        <config>
            <processName>/Services/SharedOperations/Log Process.process</processName>
        </config>
        <pd:inputBindings>
            <Log>
                <ns3:DBLogger>
                    <ns3:MessageHeader>
                        <ns3:MessageKey>
                            <xsl:value-of select="$Start/root/MessageKey"/>
                        </ns3:MessageKey>
                        <ns3:ServiceName>
                            <xsl:value-of select="&quot;SendTQAMail&quot;"/>
                        </ns3:ServiceName>
                        <ns3:ServiceVersion>
                            <xsl:value-of select="&quot;V1.0&quot;"/>
                        </ns3:ServiceVersion>
                        <ns3:SourceID>
                            <xsl:value-of select="&quot;BW&quot;"/>
                        </ns3:SourceID>
                        <ns3:RqTimestamp>
                            <xsl:value-of select="tib:current-dateTime-timezone(0,0)"/>
                        </ns3:RqTimestamp>
                    </ns3:MessageHeader>
                    <ns3:MessageBody>
                        <xsl:copy-of select="$Start/root"/>
                    </ns3:MessageBody>
                </ns3:DBLogger>
                <message>
                    <xsl:value-of select="&quot;SendMAIL&quot;"/>
                </message>
                <messageCode>
                    <xsl:value-of select="&quot;SendMAIL ST&quot;"/>
                </messageCode>
            </Log>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log-Process-Send Mail Success">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>636</pd:x>
        <pd:y>111</pd:y>
        <config>
            <processName>/Services/SharedOperations/Log Process.process</processName>
        </config>
        <pd:inputBindings>
            <Log>
                <ns3:DBLogger>
                    <ns3:MessageHeader>
                        <ns3:MessageKey>
                            <xsl:value-of select="$Start/root/MessageKey"/>
                        </ns3:MessageKey>
                        <ns3:ServiceName>
                            <xsl:value-of select="&quot;SendTQAMail&quot;"/>
                        </ns3:ServiceName>
                        <ns3:ServiceVersion>
                            <xsl:value-of select="&quot;V1.0&quot;"/>
                        </ns3:ServiceVersion>
                        <ns3:SourceID>
                            <xsl:value-of select="&quot;BW&quot;"/>
                        </ns3:SourceID>
                        <ns3:RqTimestamp>
                            <xsl:value-of select="tib:current-dateTime-timezone(0,0)"/>
                        </ns3:RqTimestamp>
                        <ns3:RsTimestamp>
                            <xsl:value-of select="tib:current-dateTime-timezone(0,0)"/>
                        </ns3:RsTimestamp>
                    </ns3:MessageHeader>
                    <ns3:MessageBody>
                        <xsl:copy-of select="$Parse-XML/BiFrostResponse"/>
                    </ns3:MessageBody>
                </ns3:DBLogger>
                <message>
                    <xsl:value-of select="&quot;SendTQAMail End&quot;"/>
                </message>
                <messageCode>
                    <xsl:value-of select="&quot;SendTQAMail End&quot;"/>
                </messageCode>
            </Log>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Call Bifrost to send Email got Code !=100">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>719</pd:x>
        <pd:y>252</pd:y>
        <config>
            <faultName>ErrorMessage</faultName>
        </config>
        <pd:inputBindings>
            <ns2:ActivityInput>
                <data>
                    <pfx:Error>
                        <pfx:src>
                            <xsl:value-of select="&quot;TQAReturnFail&quot;"/>
                        </pfx:src>
                        <pfx:error_code>
                            <xsl:value-of select="$Parse-XML/BiFrostResponse/ReqID"/>
                        </pfx:error_code>
                        <pfx:error_message>
                            <xsl:value-of select="$Call-Bifrost-to-send-Email/RequestActivityOutput/asciiContent"/>
                        </pfx:error_message>
                        <pfx:stack_trace>
                            <xsl:value-of select="&quot;&quot;"/>
                        </pfx:stack_trace>
                        <pfx:traceMessageKey>
                            <xsl:value-of select="$Parse-XML/BiFrostResponse/ReqID"/>
                        </pfx:traceMessageKey>
                    </pfx:Error>
                </data>
            </ns2:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log-Process-Send-Mail-Error">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>557</pd:x>
        <pd:y>233</pd:y>
        <config>
            <processName>/Services/SharedOperations/Log Process.process</processName>
        </config>
        <pd:inputBindings>
            <Log>
                <ns3:DBLogger>
                    <ns3:MessageHeader>
                        <ns3:MessageKey>
                            <xsl:value-of select="$Start/root/MessageKey"/>
                        </ns3:MessageKey>
                        <ns3:ServiceName>
                            <xsl:value-of select="&quot;SendTQAMail&quot;"/>
                        </ns3:ServiceName>
                        <ns3:ServiceVersion>
                            <xsl:value-of select="&quot;V1.0&quot;"/>
                        </ns3:ServiceVersion>
                        <ns3:SourceID>
                            <xsl:value-of select="&quot;BW&quot;"/>
                        </ns3:SourceID>
                        <ns3:RqTimestamp>
                            <xsl:value-of select="tib:current-dateTime-timezone(0,0)"/>
                        </ns3:RqTimestamp>
                        <ns3:RsTimestamp>
                            <xsl:value-of select="tib:current-dateTime-timezone(0,0)"/>
                        </ns3:RsTimestamp>
                    </ns3:MessageHeader>
                    <ns3:MessageBody>
                        <xsl:copy-of select="$Start/root"/>
                    </ns3:MessageBody>
                    <ns4:Error>
                        <ns4:error_code>
                            <xsl:value-of select="$Parse-XML/BiFrostResponse/Code"/>
                        </ns4:error_code>
                        <ns4:stack_trace>
                            <xsl:value-of select="''"/>
                        </ns4:stack_trace>
                        <ns4:process_stack>
                            <xsl:value-of select="''"/>
                        </ns4:process_stack>
                        <ns4:error_message>
                            <xsl:value-of select="$Call-Bifrost-to-send-Email/RequestActivityOutput/asciiContent"/>
                        </ns4:error_message>
                    </ns4:Error>
                </ns3:DBLogger>
                <message>
                    <xsl:value-of select="concat(&quot;SendTQAMail Failed, TQAMessageKey:&quot;, $Parse-XML/BiFrostResponse/ReqID)"/>
                </message>
                <messageCode>
                    <xsl:value-of select="&quot;SendTQAMail Failed&quot;"/>
                </messageCode>
            </Log>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Log Process</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>Generate Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>Log-Process-Send Mail Success</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>Log-Process-Send-Mail-Error</pd:to>
        <pd:xpathDescription>code !=100</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-3407872</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Parse-XML/BiFrostResponse/Code!=100</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Call Bifrost to send Email</pd:from>
        <pd:to>Parse XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log Process</pd:from>
        <pd:to>Call Bifrost to send Email</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log-Process-Send Mail Success</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log-Process-Send-Mail-Error</pd:from>
        <pd:to>Call Bifrost to send Email got Code !=100</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>
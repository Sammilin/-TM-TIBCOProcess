<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="http://www.tibco.com/schemas/GCCPortal/XSD/G2/AMSS Solution Provided/SendSolnForMultiTasks.xsd" xmlns:ns22="http://www.tibco.com/schemas/GCCPortal/XSD/PSC/GCCSRCaseActivity.xsd" xmlns:pfx="http://www.trendmicro.com/ESB/schemas/error" xmlns:ns42="www.tibco.com/plugin/Sleep" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns2="http://www.tibco.com/pe/EngineTypes" xmlns:ns1="http://www.trendmicro.com/ESB/schemas/messageHeader" xmlns:ns4="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:ns3="http://www.trendmicro.com/ESB/schemas/DBLogger" xmlns:ns0="http://www.trendmicro.com/G2/SFDC_CreateSRActivityRq.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx5="http://www.tibco.com/schemas/GCCPortal/XSD/G2/SFDCSRCaseResult.xsd" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx4="http://www.tibco.com/pe/DeployedVarsType" xmlns:pfx3="http://www.tibco.com/schemas/GCCPortal/WSDL/Client/AMSS Solution Provided/SendSolnForMultiTasksRq.xsd" xmlns:pfx2="http://www.trendmicro.com/ESB/schemas/errorReport" xmlns:pfx6="http://schemas.xmlsoap.org/soap/envelope/">
    <xsd:import namespace="http://www.trendmicro.com/ESB/schemas/error" schemaLocation="/XSD/Common/error.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/GCCPortal/WSDL/Client/AMSS Solution Provided/SendSolnForMultiTasksRq.xsd" schemaLocation="/WSDL/Client/AMSS Solution Provided XSD/SendSolnForMultiTasksRq.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/schemas/errorReport" schemaLocation="/XSD/Common/errorReport.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/schemas/messageHeader" schemaLocation="/XSD/Common/messageheader.xsd"/>
    <pd:name>Services/G2Service/AMSS Solution Provided/SendSolnForMultiTasks/V1.0/Send Mail And Create SRActivity By SR.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="input">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="SRNumber" type="xsd:string"/>
                    <xsd:element name="TaskIDs" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
                    <xsd:element name="SHA1" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="RequestHeader" type="ns1:RequestHeader"/>
                    <xsd:element name="SolutionInfo">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="Description" type="xsd:string"/>
                                <xsd:element name="Source" type="xsd:string"/>
                                <xsd:element name="Type" type="xsd:string"/>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>60</pd:startX>
    <pd:startY>80</pd:startY>
    <pd:returnBindings>
        <reuslt>
            <isSuccess>
                <xsl:value-of select="if ($Get-Main-Info-From-SFDC/CaseMainInfo/IsThreatService=&quot;true&quot; or  (exists($Call-SFDC-CreateSRActivity-Process/Response/pfx5:Result/pfx5:Status)  and $Call-SFDC-CreateSRActivity-Process/Response/pfx5:Result/pfx5:Status ='SUCCESS'))  then&#xA;true()&#xA;else&#xA;false()"/>
            </isSuccess>
            <SRNumber>
                <xsl:value-of select="$Start/input/SRNumber"/>
            </SRNumber>
            <xsl:for-each select="$Start/input/TaskIDs">
                <Activity-TaskIdList>
                    <xsl:value-of select="concat(&quot;Solution Activity Id '&quot;,$Call-SFDC-CreateSRActivity-Process/Response/pfx5:Result/pfx5:ActivityID,&quot;' (Task Id &quot;,.,&quot;)&quot;)"/>
                </Activity-TaskIdList>
            </xsl:for-each>
            <ActivityID>
                <xsl:value-of select="$Call-SFDC-CreateSRActivity-Process/Response/pfx5:Result/pfx5:ActivityID"/>
            </ActivityID>
        </reuslt>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="reuslt">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="isSuccess" type="xsd:boolean"/>
                    <xsd:element name="SRNumber" type="xsd:string"/>
                    <xsd:element name="Activity-TaskIdList" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
                    <xsd:element name="ActivityID" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>1177</pd:endX>
    <pd:endY>79</pd:endY>
    <pd:errorSchemas>
        <ErrorMessege ref="pfx2:Error"/>
    </pd:errorSchemas>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1419909256900</pd:targetNamespace>
    <pd:activity name="Get Main Info From SFDC">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>317</pd:x>
        <pd:y>92</pd:y>
        <config>
            <processName>/Services/G2Service/AMSS Solution Provided/SendSolnForMultiTasks/V1.0/Get Main Info From SFDC.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <CaseNumber>
                    <xsl:value-of select="$Start/input/SRNumber"/>
                </CaseNumber>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="InsertAMSSEILog">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>184</pd:x>
        <pd:y>81</pd:y>
        <config>
            <processName>/Services/G2Service/ShareProcess/SP/InsertAMSSEILog.process</processName>
        </config>
        <pd:inputBindings>
            <Input>
                <MessageKey>
                    <xsl:value-of select="$Start/input/RequestHeader/ns1:MessageKey"/>
                </MessageKey>
                <FileSHA1>
                    <xsl:value-of select="$Start/input/SHA1"/>
                </FileSHA1>
                <Status>
                    <xsl:value-of select="&quot;Start&quot;"/>
                </Status>
                <EI_InputXML>
                    <xsl:value-of select="tib:render-xml($Start/input, 1)"/>
                </EI_InputXML>
            </Input>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="InsertAMSSEILog End">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>894</pd:x>
        <pd:y>89</pd:y>
        <config>
            <processName>/Services/G2Service/ShareProcess/SP/InsertAMSSEILog.process</processName>
        </config>
        <pd:inputBindings>
            <Input>
                <MessageKey>
                    <xsl:value-of select="$Start/input/RequestHeader/ns1:MessageKey"/>
                </MessageKey>
                <FileSHA1>
                    <xsl:value-of select="$Start/input/SHA1"/>
                </FileSHA1>
                <Status>
                    <xsl:value-of select="&quot;End&quot;"/>
                </Status>
                <EI_InputXML>
                    <xsl:value-of select="tib:render-xml($Start/input, 1)"/>
                </EI_InputXML>
                <xsl:choose>
                    <xsl:when test="$Get-Main-Info-From-SFDC/CaseMainInfo/IsThreatService=&quot;false&quot;">
                        <EI_OutputXML>
                            <xsl:value-of select="tib:render-xml($Call-SFDC-CreateSRActivity-Process, 1)"/>
                        </EI_OutputXML>
                    </xsl:when>
                    <xsl:otherwise>
                        <EI_OutputXML>
                            <xsl:value-of select="concat(&quot;isThreatSerivce, SRNubmer=&quot;, $Start/input/SRNumber)"/>
                        </EI_OutputXML>
                    </xsl:otherwise>
                </xsl:choose>
            </Input>
        </pd:inputBindings>
    </pd:activity>
    <pd:group name="Send Mail With Retry">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>156</pd:x>
        <pd:y>337</pd:y>
        <pd:width>333</pd:width>
        <pd:height>324</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>repeat</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:indexSlot>SendRetryCount</pd:indexSlot>
            <pd:activityOutputName/>
            <pd:repeatCondition>false() or exists($BifrostSendMailService/root/asciiContent)</pd:repeatCondition>
            <pd:accumulateOutput>false</pd:accumulateOutput>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>BifrostSendMailService</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>BifrostSendMailService</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Sleep</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>BifrostSendMailService</pd:from>
            <pd:to>Null</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-65536</pd:lineColor>
            <pd:conditionType>error</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Null</pd:from>
            <pd:to>Sleep</pd:to>
            <pd:xpathDescription>Retry</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Null</pd:from>
            <pd:to>Generate Error</pd:to>
            <pd:xpathDescription>Reach the limit</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>$SendRetryCount &gt; $_globalVariables/pfx4:GlobalVariables/Services/G2Service/AMSSSolutionProvided/SendSolnForMultiTasks/V1.0/RetryTimes</pd:xpath>
        </pd:transition>
        <pd:activity name="BifrostSendMailService">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>324</pd:x>
            <pd:y>406</pd:y>
            <config>
                <processName>/Services/G2Service/ShareProcess/SendMailService.process</processName>
            </config>
            <pd:inputBindings>
                <root>
                    <MessageKey>
                        <xsl:value-of select="$Start/input/RequestHeader/ns1:MessageKey"/>
                    </MessageKey>
                    <Subject>
                        <xsl:value-of select="concat('Trend Micro ',$Get-Main-Info-From-SFDC/CaseMainInfo/SRType,' request ',$Start/input/SRNumber,' has been updated ',&#xA;$Get-Main-Info-From-SFDC/CaseMainInfo/TS_Case_Thread_Id)"/>
                    </Subject>
                    <ServiceId>
                        <xsl:value-of select="'SFDC'"/>
                    </ServiceId>
                    <JsonData>
                        <xsl:value-of select="concat(&#xA;'{&quot;ContactFirstName&quot;:&quot;',$Get-Main-Info-From-SFDC/CaseMainInfo/ContactFirstName&#xA;,'&quot;,&quot;ContactLastName&quot;:&quot;',$Get-Main-Info-From-SFDC/CaseMainInfo/ContactLastName&#xA;,'&quot;,&quot;SRType&quot;:&quot;',$Get-Main-Info-From-SFDC/CaseMainInfo/SRType&#xA;,'&quot;,&quot;SRNumber&quot;:&quot;',$Start/input/SRNumber&#xA;,'&quot;,&quot;Title&quot;:&quot;',$Get-Main-Info-From-SFDC/CaseMainInfo/SRTitle&#xA;,'&quot;,&quot;AMSSCommunicationBody&quot;:&quot;',$Start/input/SolutionInfo/Description&#xA;,'&quot;}'&#xA;)"/>
                    </JsonData>
                    <AccountActivityId>
                        <xsl:value-of select="''"/>
                    </AccountActivityId>
                    <Receipts>
                        <xsl:value-of select="$Get-Main-Info-From-SFDC/CaseMainInfo/Receipts"/>
                    </Receipts>
                    <xsl:choose>
                        <xsl:when test="tib:trim($Get-Main-Info-From-SFDC/CaseMainInfo/CC_Receipts) !=&quot;&quot; and tib:trim($Get-Main-Info-From-SFDC/CaseMainInfo/CaseOwner) !=&quot;&quot;">
                            <CC_Recipts>
                                <xsl:value-of select="concat($Get-Main-Info-From-SFDC/CaseMainInfo/CC_Receipts, &quot;;&quot;,$Get-Main-Info-From-SFDC/CaseMainInfo/CaseOwner)"/>
                            </CC_Recipts>
                        </xsl:when>
                        <xsl:when test="tib:trim($Get-Main-Info-From-SFDC/CaseMainInfo/CC_Receipts) !=&quot;&quot;">
                            <CC_Recipts>
                                <xsl:value-of select="$Get-Main-Info-From-SFDC/CaseMainInfo/CC_Receipts"/>
                            </CC_Recipts>
                        </xsl:when>
                        <xsl:otherwise>
                            <CC_Recipts>
                                <xsl:value-of select="$Get-Main-Info-From-SFDC/CaseMainInfo/CC_Receipts"/>
                            </CC_Recipts>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:choose>
                        <xsl:when test="$Start/input/SolutionInfo/Type=&quot;Final Solution&quot; or $Start/input/SolutionInfo/Type=&quot;Final Solution Provided&quot;">
                            <TmpType>
                                <xsl:value-of select="15"/>
                            </TmpType>
                        </xsl:when>
                        <xsl:otherwise>
                            <TmpType>
                                <xsl:value-of select="16"/>
                            </TmpType>
                        </xsl:otherwise>
                    </xsl:choose>
                    <System>
                        <xsl:value-of select="&quot;AMSS&quot;"/>
                    </System>
                </root>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Null">
            <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
            <pd:resourceType>ae.activities.null</pd:resourceType>
            <pd:x>221</pd:x>
            <pd:y>510</pd:y>
            <config/>
            <pd:inputBindings/>
        </pd:activity>
        <pd:activity name="Sleep">
            <pd:type>com.tibco.plugin.timer.SleepActivity</pd:type>
            <pd:resourceType>ae.activities.sleep</pd:resourceType>
            <pd:x>367</pd:x>
            <pd:y>512</pd:y>
            <config/>
            <pd:inputBindings>
                <ns42:SleepInputSchema>
                    <IntervalInMillisec>
                        <xsl:value-of select="1000 * $_globalVariables/pfx4:GlobalVariables/Services/G2Service/AMSSSolutionProvided/SendSolnForMultiTasks/V1.0/WaittingSec"/>
                    </IntervalInMillisec>
                </ns42:SleepInputSchema>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Generate Error">
            <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
            <pd:resourceType>ae.activities.throw</pd:resourceType>
            <pd:x>333</pd:x>
            <pd:y>598</pd:y>
            <config>
                <faultName>ErrorMessege</faultName>
            </config>
            <pd:inputBindings>
                <ns4:ActivityInput>
                    <data>
                        <pfx2:Error>
                            <pfx2:error_code>
                                <xsl:value-of select="$_error_BifrostSendMailService/pfx:Error/pfx:error_code"/>
                            </pfx2:error_code>
                            <pfx2:stack_trace>
                                <xsl:value-of select="$_error_BifrostSendMailService/pfx:Error/pfx:stack_trace"/>
                            </pfx2:stack_trace>
                            <pfx2:process_stack>
                                <xsl:value-of select="$_error_BifrostSendMailService/pfx:Error/pfx:src"/>
                            </pfx2:process_stack>
                            <pfx2:error_message>
                                <xsl:value-of select="$_error_BifrostSendMailService/pfx:Error/pfx:error_message"/>
                            </pfx2:error_message>
                        </pfx2:Error>
                    </data>
                </ns4:ActivityInput>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="GetTQAMailTemplate">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>622</pd:x>
        <pd:y>501</pd:y>
        <config>
            <processName>/Services/G2Service/ShareProcess/GetTQAMailTemplate.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <MessageKey>
                    <xsl:value-of select="$Start/input/RequestHeader/ns1:MessageKey"/>
                </MessageKey>
                <JsonData>
                    <xsl:value-of select="concat(&#xA;'{&quot;ContactFirstName&quot;:&quot;',$Get-Main-Info-From-SFDC/CaseMainInfo/ContactFirstName&#xA;,'&quot;,&quot;ContactLastName&quot;:&quot;',$Get-Main-Info-From-SFDC/CaseMainInfo/ContactLastName&#xA;,'&quot;,&quot;SRType&quot;:&quot;',$Get-Main-Info-From-SFDC/CaseMainInfo/SRType&#xA;,'&quot;,&quot;SRNumber&quot;:&quot;',$Start/input/SRNumber&#xA;,'&quot;,&quot;Title&quot;:&quot;',$Get-Main-Info-From-SFDC/CaseMainInfo/SRTitle&#xA;,'&quot;,&quot;AMSSCommunicationBody&quot;:&quot;',$Start/input/SolutionInfo/Description&#xA;,'&quot;}'&#xA;)"/>
                </JsonData>
                <xsl:choose>
                    <xsl:when test="$Start/input/SolutionInfo/Type=&quot;Final Solution&quot; or $Start/input/SolutionInfo/Type=&quot;Final Solution Provided&quot;">
                        <TmpType>
                            <xsl:value-of select="17"/>
                        </TmpType>
                    </xsl:when>
                    <xsl:otherwise>
                        <TmpType>
                            <xsl:value-of select="18"/>
                        </TmpType>
                    </xsl:otherwise>
                </xsl:choose>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:group name="Create SRActivity With Retry">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>749</pd:x>
        <pd:y>323</pd:y>
        <pd:width>313</pd:width>
        <pd:height>331</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>repeat</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:indexSlot>CreateRetryCount</pd:indexSlot>
            <pd:activityOutputName/>
            <pd:repeatCondition>false() or exists($Call-SFDC-CreateSRActivity-Process/Response/pfx5:Result/pfx5:ActivityID)</pd:repeatCondition>
            <pd:accumulateOutput>false</pd:accumulateOutput>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Call SFDC CreateSRActivity Process</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Sleep-1</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Call SFDC CreateSRActivity Process</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Call SFDC CreateSRActivity Process</pd:from>
            <pd:to>Null-1</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-65536</pd:lineColor>
            <pd:conditionType>error</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Null-1</pd:from>
            <pd:to>Sleep-1</pd:to>
            <pd:xpathDescription>Retry</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Null-1</pd:from>
            <pd:to>Generate-Error-1</pd:to>
            <pd:xpathDescription>Reach the limit</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>$CreateRetryCount &gt; $_globalVariables/pfx4:GlobalVariables/Services/G2Service/AMSSSolutionProvided/SendSolnForMultiTasks/V1.0/RetryTimes
or
$_error_Call-SFDC-CreateSRActivity-Process/pfx2:Error/pfx2:error_message="Input data invalid"</pd:xpath>
        </pd:transition>
        <pd:activity name="Call SFDC CreateSRActivity Process">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>917</pd:x>
            <pd:y>399</pd:y>
            <config>
                <processName>/Services/G2Service/SFDC_CreateSRCaseAct/V1.0/ExecuteRequest.process</processName>
            </config>
            <pd:inputBindings>
                <ns0:SFDC_CreateSRActivityRq>
                    <ns0:RequestHeader>
                        <xsl:copy-of select="$Start/input/RequestHeader/ancestor-or-self::*/namespace::node()"/>
                        <xsl:copy-of select="$Start/input/RequestHeader/@*"/>
                        <xsl:copy-of select="$Start/input/RequestHeader/node()"/>
                    </ns0:RequestHeader>
                    <ns0:RequestBody>
                        <ns22:SFDCSRCaseActivity>
                            <ns22:ActTitle>
                                <xsl:value-of select="concat('Trend Micro ',$Get-Main-Info-From-SFDC/CaseMainInfo/SRType,' request ',$Start/input/SRNumber,' has been updated')"/>
                            </ns22:ActTitle>
                            <ns22:SRNumber>
                                <xsl:value-of select="$Start/input/SRNumber"/>
                            </ns22:SRNumber>
                            <xsl:choose>
                                <xsl:when test="$Get-Main-Info-From-SFDC/CaseMainInfo/Status !=&quot;Close&quot;">
                                    <ns22:ActBody>
                                        <xsl:value-of select="$GetTQAMailTemplate/root/Template"/>
                                    </ns22:ActBody>
                                </xsl:when>
                                <xsl:otherwise>
                                    <ns22:ActBody>
                                        <xsl:value-of select="&quot;Case has already closed&quot;"/>
                                    </ns22:ActBody>
                                </xsl:otherwise>
                            </xsl:choose>
                            <ns22:ActType>
                                <xsl:value-of select="&quot;Email – Outbound&quot;"/>
                            </ns22:ActType>
                            <ns22:CC>
                                <xsl:value-of select="$Get-Main-Info-From-SFDC/CaseMainInfo/CC_Receipts"/>
                            </ns22:CC>
                            <ns22:To>
                                <xsl:value-of select="$Get-Main-Info-From-SFDC/CaseMainInfo/Receipts"/>
                            </ns22:To>
                            <ns22:SourceSystem>
                                <xsl:value-of select="$Start/input/SolutionInfo/Source"/>
                            </ns22:SourceSystem>
                            <ns22:SourceId>
                                <xsl:value-of select="$Get-Main-Info-From-SFDC/CaseMainInfo/Id"/>
                            </ns22:SourceId>
                            <ns22:Private>
                                <xsl:value-of select="'false'"/>
                            </ns22:Private>
                            <ns22:Status>
                                <xsl:value-of select="'completed'"/>
                            </ns22:Status>
                            <ns22:isResend>
                                <xsl:value-of select="0"/>
                            </ns22:isResend>
                        </ns22:SFDCSRCaseActivity>
                    </ns0:RequestBody>
                </ns0:SFDC_CreateSRActivityRq>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Null-1">
            <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
            <pd:resourceType>ae.activities.null</pd:resourceType>
            <pd:x>828</pd:x>
            <pd:y>505</pd:y>
            <config/>
            <pd:inputBindings/>
        </pd:activity>
        <pd:activity name="Sleep-1">
            <pd:type>com.tibco.plugin.timer.SleepActivity</pd:type>
            <pd:resourceType>ae.activities.sleep</pd:resourceType>
            <pd:x>990</pd:x>
            <pd:y>505</pd:y>
            <config/>
            <pd:inputBindings>
                <ns42:SleepInputSchema>
                    <IntervalInMillisec>
                        <xsl:value-of select="1000 * $_globalVariables/pfx4:GlobalVariables/Services/G2Service/AMSSSolutionProvided/SendSolnForMultiTasks/V1.0/WaittingSec"/>
                    </IntervalInMillisec>
                </ns42:SleepInputSchema>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Generate-Error-1">
            <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
            <pd:resourceType>ae.activities.throw</pd:resourceType>
            <pd:x>940</pd:x>
            <pd:y>597</pd:y>
            <config>
                <faultName>ErrorMessege</faultName>
            </config>
            <pd:inputBindings>
                <ns4:ActivityInput>
                    <data>
                        <xsl:copy-of select="$_error_Call-SFDC-CreateSRActivity-Process/pfx2:Error"/>
                    </data>
                </ns4:ActivityInput>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>1182</pd:x>
        <pd:y>431</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
            <fault>localname=Error namespace=http://www.trendmicro.com/ESB/schemas/error</fault>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="ErrorHandling">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1180</pd:x>
        <pd:y>253</pd:y>
        <config>
            <processName>/Services/G2Service/ShareProcess/ErrorHandling.process</processName>
        </config>
        <pd:coercions>
            <pd:coercion xpath="$_error/ns2:ErrorReport/Data/*" element="pfx2:Error"/>
        </pd:coercions>
        <pd:inputBindings>
            <root>
                <isResend>
                    <xsl:value-of select="0"/>
                </isResend>
                <isReply>
                    <xsl:value-of select="0"/>
                </isReply>
                <ns3:DBLogger>
                    <xsl:for-each select="$Start/input/RequestHeader">
                        <ns3:MessageHeader>
                            <ns3:MessageKey>
                                <xsl:value-of select="ns1:MessageKey"/>
                            </ns3:MessageKey>
                            <ns3:ServiceName>
                                <xsl:value-of select="ns1:ServiceName"/>
                            </ns3:ServiceName>
                            <ns3:ServiceVersion>
                                <xsl:value-of select="ns1:ServiceVersion"/>
                            </ns3:ServiceVersion>
                            <ns3:SourceID>
                                <xsl:value-of select="ns1:SourceID"/>
                            </ns3:SourceID>
                            <xsl:if test="ns1:RqTimestamp">
                                <ns3:RqTimestamp>
                                    <xsl:value-of select="ns1:RqTimestamp"/>
                                </ns3:RqTimestamp>
                            </xsl:if>
                            <xsl:if test="ns1:RsTimestamp">
                                <ns3:RsTimestamp>
                                    <xsl:value-of select="ns1:RsTimestamp"/>
                                </ns3:RsTimestamp>
                            </xsl:if>
                        </ns3:MessageHeader>
                    </xsl:for-each>
                    <ns3:MessageBody>
                        <xsl:copy-of select="$Start/input"/>
                    </ns3:MessageBody>
                    <xsl:choose>
                        <xsl:when test="exists($_error_Get-Main-Info-From-SFDC/pfx2:Error)">
                            <xsl:copy-of select="$_error_Get-Main-Info-From-SFDC/pfx2:Error"/>
                        </xsl:when>
                        <xsl:when test="exists($_error_GetTQAMailTemplate/pfx:Error)">
                            <xsl:for-each select="$_error_GetTQAMailTemplate/pfx:Error">
                                <pfx2:Error>
                                    <pfx2:error_code>
                                        <xsl:value-of select="pfx:error_code"/>
                                    </pfx2:error_code>
                                    <pfx2:stack_trace>
                                        <xsl:value-of select="pfx:stack_trace"/>
                                    </pfx2:stack_trace>
                                    <pfx2:process_stack>
                                        <xsl:value-of select="pfx:src"/>
                                    </pfx2:process_stack>
                                    <pfx2:error_message>
                                        <xsl:value-of select="pfx:error_message"/>
                                    </pfx2:error_message>
                                </pfx2:Error>
                            </xsl:for-each>
                        </xsl:when>
                        <xsl:when test="exists($_error/ns2:ErrorReport/Data/pfx2:Error)">
                            <xsl:copy-of select="$_error/ns2:ErrorReport/Data/pfx2:Error"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <pfx2:Error>
                                <pfx2:error_code>
                                    <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                                </pfx2:error_code>
                                <pfx2:stack_trace>
                                    <xsl:value-of select="$_error/ns2:ErrorReport/StackTrace"/>
                                </pfx2:stack_trace>
                                <pfx2:process_stack>
                                    <xsl:value-of select="$_error/ns2:ErrorReport/ProcessStack"/>
                                </pfx2:process_stack>
                                <xsl:if test="$_error/ns2:ErrorReport/Msg">
                                    <pfx2:error_message>
                                        <xsl:value-of select="$_error/ns2:ErrorReport/Msg"/>
                                    </pfx2:error_message>
                                </xsl:if>
                            </pfx2:Error>
                        </xsl:otherwise>
                    </xsl:choose>
                </ns3:DBLogger>
                <resend>
                    <resendDestination>
                        <xsl:value-of select="''"/>
                    </resendDestination>
                    <resendcount>
                        <xsl:value-of select="''"/>
                    </resendcount>
                </resend>
                <ErrReply>
                    <pfx6:Envelope>
                        <pfx6:Body>
                            <xsl:copy-of select="$Catch/exceptiondata"/>
                        </pfx6:Body>
                    </pfx6:Envelope>
                </ErrReply>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Status Check">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>314</pd:x>
        <pd:y>233</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:transition>
        <pd:from>InsertAMSSEILog</pd:from>
        <pd:to>Get Main Info From SFDC</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>InsertAMSSEILog End</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>ErrorHandling</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorHandling</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>InsertAMSSEILog</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Get Main Info From SFDC</pd:from>
        <pd:to>Status Check</pd:to>
        <pd:xpathDescription>IsThreatService="false"</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Get-Main-Info-From-SFDC/CaseMainInfo/IsThreatService="false"</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Send Mail With Retry</pd:from>
        <pd:to>GetTQAMailTemplate</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetTQAMailTemplate</pd:from>
        <pd:to>Create SRActivity With Retry</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Create SRActivity With Retry</pd:from>
        <pd:to>InsertAMSSEILog End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Get Main Info From SFDC</pd:from>
        <pd:to>InsertAMSSEILog End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Status Check</pd:from>
        <pd:to>Send Mail With Retry</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Status Check</pd:from>
        <pd:to>Create SRActivity With Retry</pd:to>
        <pd:xpathDescription>Status=Closed</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Get-Main-Info-From-SFDC/CaseMainInfo/Status ="Closed"</pd:xpath>
    </pd:transition>
</pd:ProcessDefinition>
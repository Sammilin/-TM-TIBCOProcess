<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx16="http://www.trendmicro.com/ESB/Services/GCC/EI_GCC_CreateCorporateCaseRs" xmlns:pfx15="http://www.trendmicro.com/ESB/Services/GCC/EI_GCC_CreateCorporateCaseRq" xmlns:pfx14="http://www.trendmicro.com/ESB/Services/Chat_RC/EI_EN_CreateConsumerCaseRs" xmlns:ns="http://www.tibco.com/pe/EngineTypes" xmlns:pfx13="http://www.trendmicro.com/ESB/Services/Chat_RC/EI_EN_CreateConsumerCaseRq" xmlns:pfx12="http://www.trendmicro.com/ESB/Services/Chat_RC/EI_JP_CreateConsumerCaseRs" xmlns:pfx11="http://www.trendmicro.com/ESB/Services/Chat_RC/EI_JP_CreateConsumerCaseRq" xmlns:pfx10="http://www.trendmicro.com/ESB/Services/Chat_RC/EI_CreateConsumerCaseRs" xmlns:pfx19="http://www.trendmicro.com/ESB/schemas/DBLogger" xmlns:pfx18="http://www.tibco.com/schemas/GCCPortal/Portal/XSD/PortalSRCaseResult.xsd" xmlns:pfx17="http://www.tibco.com/schemas/GCCPortal/Portal/XSD/PortalSRCase.xsd" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns12="http://www.tibco.com/namespaces/tnt/plugins/file" xmlns:ns13="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:pfx="http://www.siebel.com/xml/RAEM%20Internal%20Product%20Interface" xmlns:ns10="http://www.tibco.com/schemas/GCCPortal/XSD/G2/SFDCQueryRS/getSRInfo.xsd" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:pfx42="http://www.trendmicro.com/SFDC/SFDC_GetProductProfileListRq" xmlns:pfx43="http://www.tibco.com/schemas/GCCPortal/XSD/GetProductProfileListResults.xsd" xmlns:pfx41="http://www.tibco.com/schemas/GCCPortal_For_G2_V1.0/XSD/G2/SFDCQueryRS/getProductProfile.xsd" xmlns:pfx40="http://www.tibco.com/schemas/GCCPortal/XSD/G2/GetProductProfileResult.xsd" xmlns:TM="java://com.trendmicro.DynamicXMLValidator" xmlns:pfx39="http://www.trendmicro.com/SFDC/SFDC_GetProductProfileRq" xmlns:pfx31="http://www.trendmicro.com/PSC/PSC_GetSRListRq" xmlns:pfx5="http://www.trendmicro.com/ESB/schemas/errorReport" xmlns:pfx32="http://www.tibco.com/schemas/GCCPortal/XSD/GetSRListResults.xsd" xmlns:pfx4="http://www.trendmicro.com/ESB/Services/DealRegistration/DealRegistrationRq" xmlns:pfx33="http://www.trendmicro.com/PSC/PSC_GetTopSRListRq" xmlns:pfx3="http://www.trendmicro.com/ESB/Services/OrderCreation/OrderSubmissionRq" xmlns:pfx34="http://www.tibco.com/schemas/GCCPortal/XSD/GetTopSRListResults.xsd" xmlns:pfx2="http://siebel.com/asi/" xmlns:pfx35="http://www.trendmicro.com/PSC/PSC_GetEntitlementInfoRq" xmlns:pfx9="http://www.trendmicro.com/ESB/Services/Chat_RC/EI_CreateConsumerCaseRq" xmlns:pfx36="http://www.tibco.com/schemas/GCCPortal/XSD/G2/SFDCQueryRS/getEntitlementInfo.xsd" xmlns:pfx8="http://www.trendmicro.com/ESB/Services/Chat_RC/EI_QeuryCaseRq" xmlns:pfx37="http://www.tibco.com/schemas/GCCPortal/XSD/G2/GetEntitlementInfoResult.xsd" xmlns:pfx7="JP Common WS" xmlns:pfx38="http://www.trendmicro.com/SFDC/SFDC_GetEntitlementInfoRq" xmlns:pfx6="http://www.trendmicro.com/ESB/Services/DealRegistration/GMT_InternalProductRq" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx30="http://www.tibco.com/schemas/GCCPortal/XSD/G2/GetSRInfoResult.xsd" xmlns:ns9="urn:sobject.enterprise.soap.sforce.com" xmlns:alppTM="java://com.trendmicro.TMBWUtilities" xmlns:ns5="http://www.siebel.com/xml/GCC%20IO%20Action%20Attachment" xmlns:ns6="GCC_PH_CON_CHAT_WS" xmlns:ns7="http://www.trendmicro.com/ESB/schemas/messageHeader" xmlns:ns8="urn:enterprise.soap.sforce.com" xmlns:ns2="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:ns1="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns4="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:pfx28="http://www.trendmicro.com/PSC/PSC_GetSRInfoRq" xmlns:pfx29="http://www.tibco.com/ns/no_namespace_schema_location/XSD/G2/SFDCQueryRS/getSRInfo.xsd" xmlns:ns3="GCC Common WS" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx22="http://www.tibco.com/schemas/GCCPortal/XSD/G2/GetAccountInoResult.xsd" xmlns:pfx23="http://www.tibco.com/ns/no_namespace_schema_location/XSD/G2/TestQueryRs.xsd" xmlns:pfx20="http://www.trendmicro.com/ESB/Services/Portal/EI_CreatePortalCaseRq" xmlns:pfx21="http://www.trendmicro.com/PSC/PSC_GetAccountInfoRq" xmlns:pfx26="http://www.trendmicro.com/ESB/schemas/error" xmlns:pfx27="http://www.tibco.com/schemas/GCCPortal/XSD/G2/SFDCQueryRS/getAccountInfo.xsd" xmlns:pfx24="http://www.tibco.com/ns/no_namespace_schema_location/XSD/G2/SFDCQueryRS/TestQueryRs.xsd" xmlns:pfx25="http://www.tibco.com/ns/no_namespace_schema_location/XSD/G2/SFDCQueryRS/getAccountInfo.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <xsd:import namespace="http://www.siebel.com/xml/RAEM%20Internal%20Product%20Interface" schemaLocation="/WSDL/Siebel WSDL/http___siebel.com_asi__RAEM_Internal_Product_WS_-_TIBCO.WSDL.wsdl"/>
    <xsd:import namespace="http://siebel.com/asi/" schemaLocation="/WSDL/http___siebel.com_asi__RAEM_Internal_Product_WS_-_TIBCO.WSDL.wsdl"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/Services/DealRegistration/GMT_InternalProductRq" schemaLocation="/WSDL/SRFRq.xsd"/>
    <xsd:import namespace="JP Common WS" schemaLocation="/WSDL/Provider/JP Common WS_JP Common WS.WSDL.wsdl"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/Services/Chat_RC/EI_CreateConsumerCaseRq" schemaLocation="/WSDL/Client/EI_JP_CreateConsumerCaseRq.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/Services/Chat_RC/EI_CreateConsumerCaseRs" schemaLocation="/WSDL/Client/EI_JP_CreateConsumerCaseRs.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/Services/Chat_RC/EI_JP_CreateConsumerCaseRq" schemaLocation="/WSDL/Client/JPXSD/EI_JP_CreateConsumerCaseRq.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/Services/Chat_RC/EI_EN_CreateConsumerCaseRq" schemaLocation="/WSDL/Client/ENXSD/EI_EN_CreateConsumerCaseRq.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/Services/Chat_RC/EI_JP_CreateConsumerCaseRs" schemaLocation="/WSDL/Client/JPXSD/EI_JP_CreateConsumerCaseRs.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/Services/Chat_RC/EI_EN_CreateConsumerCaseRs" schemaLocation="/WSDL/Client/ENXSD/EI_EN_CreateConsumerCaseRs.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/Services/Chat_RC/EI_QeuryCaseRq"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/Services/GCC/EI_GCC_CreateCorporateCaseRq" schemaLocation="/WSDL/Client/CorporateXSD/EI_GCC_CreateCorporateCaseRq.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/Services/GCC/EI_GCC_CreateCorporateCaseRs" schemaLocation="/WSDL/Client/CorporateXSD/EI_GCC_CreateCorporateCaseRs.xsd"/>
    <xsd:import namespace="GCC Common WS" schemaLocation="/WSDL/Provider/GCC Common WS_GCC Common WS.WSDL.wsdl"/>
    <xsd:import namespace="http://www.tibco.com/schemas/GCCPortal/Portal/XSD/PortalSRCase.xsd" schemaLocation="/XSD/Portal/PortalSRCase.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/GCCPortal/Portal/XSD/PortalSRCaseResult.xsd" schemaLocation="/XSD/Portal/PortalSRCaseResult.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/schemas/DBLogger" schemaLocation="/XSD/Common/logger.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/Services/Portal/EI_CreatePortalCaseRq" schemaLocation="/WSDL/Client/PortalXSD/EI_CreatePortalCaseRq.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/PSC/PSC_GetAccountInfoRq" schemaLocation="/WSDL/Client/G2XSD/PSC_GetAccountInfoRq.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/GCCPortal/XSD/G2/GetAccountInoResult.xsd" schemaLocation="/XSD/G2/GetAccountInoResult.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/XSD/G2/TestQueryRs.xsd" schemaLocation="/XSD/G2/TestQueryRs.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/XSD/G2/SFDCQueryRS/TestQueryRs.xsd" schemaLocation="/XSD/G2/SFDCQueryRS/TestQueryRs.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/schemas/error" schemaLocation="/XSD/Common/error.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/schemas/errorReport" schemaLocation="/XSD/Common/errorReport.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/GCCPortal/XSD/G2/SFDCQueryRS/getAccountInfo.xsd" schemaLocation="/XSD/G2/SFDCQueryRS/getAccountInfo.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/PSC/PSC_GetSRInfoRq" schemaLocation="/WSDL/Client/G2XSD/PSC_GetSRInfoRq.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/GCCPortal/XSD/G2/GetSRInfoResult.xsd" schemaLocation="/XSD/G2/GetSRInfoResult.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/PSC/PSC_GetSRListRq" schemaLocation="/WSDL/Client/G2XSD/PSC_GetSRListRq.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/GCCPortal/XSD/GetSRListResults.xsd" schemaLocation="/XSD/G2/GetSRListResults.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/GCCPortal/XSD/G2/SFDCQueryRS/getSRInfo.xsd" schemaLocation="/XSD/G2/SFDCQueryRS/getSRInfo.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/PSC/PSC_GetTopSRListRq" schemaLocation="/WSDL/Client/G2XSD/PSC_GetTopSRListRq.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/GCCPortal/XSD/GetTopSRListResults.xsd" schemaLocation="/XSD/G2/GetTopSRListResults.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/PSC/PSC_GetEntitlementInfoRq" schemaLocation="/WSDL/Client/G2XSD/PSC_GetEntitlementInfoRq.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/GCCPortal/XSD/G2/SFDCQueryRS/getEntitlementInfo.xsd" schemaLocation="/XSD/G2/SFDCQueryRS/getEntitlementInfo.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/GCCPortal/XSD/G2/GetEntitlementInfoResult.xsd" schemaLocation="/XSD/G2/GetEntitlementInfoResult.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/SFDC/SFDC_GetEntitlementInfoRq" schemaLocation="/WSDL/Client/G2XSD/SFDC_GetEntitlementInfoRq.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/SFDC/SFDC_GetProductProfileRq" schemaLocation="/WSDL/Client/G2XSD/SFDC_GetProductProfileRq.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/GCCPortal/XSD/G2/GetProductProfileResult.xsd" schemaLocation="/XSD/G2/GetProductProfileResult.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/GCCPortal_For_G2_V1.0/XSD/G2/SFDCQueryRS/getProductProfile.xsd" schemaLocation="/XSD/G2/SFDCQueryRS/getProductProfile.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/SFDC/SFDC_GetProductProfileListRq" schemaLocation="/WSDL/Client/G2XSD/SFDC_GetProductProfileListRq.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/GCCPortal/XSD/GetProductProfileListResults.xsd" schemaLocation="/XSD/G2/GetProductProfileListResults.xsd"/>
    <xsd:import namespace="urn:sobject.enterprise.soap.sforce.com" schemaLocation="/WSDL/Provider/TSSalesforceWSDL.wsdl"/>
    <pd:name>Services/G2Service/SFDC_Query/GetProductProfileList/V1.0/ExecuteRequest.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType ref="pfx42:SFDC_GetProductProfileListRq"/>
    <pd:startX>50</pd:startX>
    <pd:startY>56</pd:startY>
    <pd:returnBindings>
        <group>
            <Response>
                <pfx43:TotalRowCount>
                    <xsl:value-of select="$TotalResult/Output/ns8:queryAllResponse/ns8:result/ns8:size"/>
                </pfx43:TotalRowCount>
                <pfx43:ResultSet1>
                    <xsl:for-each select="$GetProductProfile/group/pfx41:result/pfx41:records">
                        <pfx43:Record1>
                            <pfx40:AccountID>
                                <xsl:value-of select="pfx41:Account_ID__c"/>
                            </pfx40:AccountID>
                            <pfx40:ProductProfileID>
                                <xsl:value-of select="pfx41:ID"/>
                            </pfx40:ProductProfileID>
                            <pfx40:ProfileName>
                                <xsl:value-of select="pfx41:TS_Profile_Name__c"/>
                            </pfx40:ProfileName>
                            <pfx40:ProductName>
                                <xsl:value-of select="pfx41:TS_Product_Name__c"/>
                            </pfx40:ProductName>
                            <pfx40:ProductVersion>
                                <xsl:value-of select="pfx41:TS_Product_Version__c"/>
                            </pfx40:ProductVersion>
                            <pfx40:ProductLanguage>
                                <xsl:value-of select="pfx41:TS_Product_Language__c"/>
                            </pfx40:ProductLanguage>
                            <pfx40:OS>
                                <xsl:value-of select="pfx41:TS_OS__c"/>
                            </pfx40:OS>
                            <pfx40:OSLanguage>
                                <xsl:value-of select="pfx41:TS_OS_Language__c"/>
                            </pfx40:OSLanguage>
                            <pfx40:ServicePack>
                                <xsl:value-of select="pfx41:TS_Service_Pack__c"/>
                            </pfx40:ServicePack>
                            <pfx40:ScanEngineVersion>
                                <xsl:value-of select="pfx41:TS_Scan_Engine_Version__c"/>
                            </pfx40:ScanEngineVersion>
                            <pfx40:PatternType>
                                <xsl:value-of select="pfx41:TS_Pattern_Type__c"/>
                            </pfx40:PatternType>
                            <pfx40:OfficeScanServiceGUID>
                                <xsl:value-of select="pfx41:TS_Office_Scan_Service_GUID__c"/>
                            </pfx40:OfficeScanServiceGUID>
                            <xsl:if test="pfx41:LastModifiedDate">
                                <pfx40:LastUpdatedDate>
                                    <xsl:value-of select="pfx41:LastModifiedDate"/>
                                </pfx40:LastUpdatedDate>
                            </xsl:if>
                        </pfx43:Record1>
                    </xsl:for-each>
                </pfx43:ResultSet1>
            </Response>
        </group>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="group">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="Response" type="pfx43:Resultsets"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>1072</pd:endX>
    <pd:endY>65</pd:endY>
    <pd:errorSchemas>
        <errorReport ref="pfx5:Error"/>
    </pd:errorSchemas>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1302247535834</pd:targetNamespace>
    <pd:activity name="Call Log Process Rq">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>189</pd:x>
        <pd:y>64</pd:y>
        <config>
            <processName>/Services/SharedOperations/Log Process.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:inputBindings>
            <Log>
                <pfx19:DBLogger>
                    <xsl:for-each select="$Start/pfx42:SFDC_GetProductProfileListRq/pfx42:RequestHeader">
                        <pfx19:MessageHeader>
                            <pfx19:MessageKey>
                                <xsl:value-of select="ns7:MessageKey"/>
                            </pfx19:MessageKey>
                            <pfx19:ServiceName>
                                <xsl:value-of select="ns7:ServiceName"/>
                            </pfx19:ServiceName>
                            <pfx19:ServiceVersion>
                                <xsl:value-of select="ns7:ServiceVersion"/>
                            </pfx19:ServiceVersion>
                            <pfx19:SourceID>
                                <xsl:value-of select="ns7:SourceID"/>
                            </pfx19:SourceID>
                            <xsl:if test="ns7:RqTimestamp">
                                <pfx19:RqTimestamp>
                                    <xsl:value-of select="ns7:RqTimestamp"/>
                                </pfx19:RqTimestamp>
                            </xsl:if>
                        </pfx19:MessageHeader>
                    </xsl:for-each>
                    <pfx19:MessageBody>
                        <xsl:copy-of select="$Start/pfx42:SFDC_GetProductProfileListRq/pfx42:RequestBody"/>
                    </pfx19:MessageBody>
                </pfx19:DBLogger>
                <message>
                    <xsl:value-of select="concat(&quot;INPUT Messagekey: &quot;,$Start/pfx42:SFDC_GetProductProfileListRq/pfx42:RequestHeader/ns7:MessageKey)"/>
                </message>
                <messageCode>
                    <xsl:value-of select="'SFDC_GetProductProfileList Rq'"/>
                </messageCode>
            </Log>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Login">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>339</pd:x>
        <pd:y>64</pd:y>
        <config>
            <processName>/Services/G2Service/ShareProcess/Login.process</processName>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Query">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>517</pd:x>
        <pd:y>62</pd:y>
        <config>
            <processName>/Services/G2Service/ShareProcess/Query.process</processName>
        </config>
        <pd:inputBindings>
            <xsl:variable name="Fields" select="&quot;ID,Account_ID__c,TS_OS_Language__c,TS_OS__c,TS_Pattern_Type__c,TS_Product_Language__c,TS_Product_Name__c,TS_Product_Version__c,TS_Profile_Name__c,TS_Scan_Engine_Version__c,TS_Service_Pack__c,TS_Office_Scan_Service_GUID__c,LastModifiedDate&quot;"/>
            <xsl:variable name="Limit" select="if ($Start/pfx42:SFDC_GetProductProfileListRq/pfx42:RequestBody/pfx42:RowStart=0) then &#xA;$Start/pfx42:SFDC_GetProductProfileListRq/pfx42:RequestBody/pfx42:RowEnd &#xA;else &#xA;$Start/pfx42:SFDC_GetProductProfileListRq/pfx42:RequestBody/pfx42:RowEnd - $Start/pfx42:SFDC_GetProductProfileListRq/pfx42:RequestBody/pfx42:RowStart +1"/>
            <xsl:variable name="Paging" select="if ($Start/pfx42:SFDC_GetProductProfileListRq/pfx42:RequestBody/pfx42:RowStart=0 and $Start/pfx42:SFDC_GetProductProfileListRq/pfx42:RequestBody/pfx42:RowEnd=0) &#xA;then &quot;&quot; else &#xA;concat(&quot; Limit &quot;, $Limit,&quot; OFFSET &quot;,$Start/pfx42:SFDC_GetProductProfileListRq/pfx42:RequestBody/pfx42:RowStart)"/>
            <root>
                <Sessionid>
                    <xsl:value-of select="$Login/root/SessionID"/>
                </Sessionid>
                <QueryString>
                    <xsl:value-of select="concat(&quot;SELECT &quot;, $Fields,&#xA;&quot; From TS_Product_Profile__c&quot;,&#xA;&quot; Where Account_ID__c='&quot;,$Start/pfx42:SFDC_GetProductProfileListRq/pfx42:RequestBody/pfx42:AccountID,&quot;'&quot;,&#xA;$Map-Data/QueryCondition/ProfileName,&#xA;$Map-Data/QueryCondition/ProductName,&#xA;$Map-Data/QueryCondition/ProductLanguage,&#xA;$Map-Data/QueryCondition/ProductOS, $Map-Data/QueryCondition/ProductVersion,$Map-Data/QueryCondition/OSLanguage,$Map-Data/QueryCondition/ServicePack,&#xA;$Map-Data/QueryCondition/ScanengineVersion,$Map-Data/QueryCondition/VirusPatternType,&#xA;&quot; Order By TS_Profile_Name__c asc &quot;,&#xA;$Paging)"/>
                </QueryString>
                <ServerURL>
                    <xsl:value-of select="$Login/root/ServerURL"/>
                </ServerURL>
                <messagekey>
                    <xsl:value-of select="$Start/pfx42:SFDC_GetProductProfileListRq/pfx42:RequestHeader/ns7:MessageKey"/>
                </messagekey>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Generate Error">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>473</pd:x>
        <pd:y>268</pd:y>
        <config>
            <faultName>errorReport</faultName>
        </config>
        <pd:coercions>
            <pd:coercion xpath="$_error/ns:ErrorReport/Data/*" element="pfx5:Error"/>
        </pd:coercions>
        <pd:inputBindings>
            <ns2:ActivityInput>
                <data>
                    <xsl:choose>
                        <xsl:when test="exists($_error_Query/pfx5:Error)">
                            <pfx5:Error>
                                <pfx5:error_code>
                                    <xsl:value-of select="'GetEntitlementInfoFail'"/>
                                </pfx5:error_code>
                                <pfx5:stack_trace>
                                    <xsl:value-of select="$_error_Query/pfx5:Error/pfx5:stack_trace"/>
                                </pfx5:stack_trace>
                                <pfx5:process_stack>
                                    <xsl:value-of select="$_error_Query/pfx5:Error/pfx5:process_stack"/>
                                </pfx5:process_stack>
                                <xsl:if test="$_error_Query/pfx5:Error/pfx5:error_message">
                                    <pfx5:error_message>
                                        <xsl:value-of select="$_error_Query/pfx5:Error/pfx5:error_message"/>
                                    </pfx5:error_message>
                                </xsl:if>
                            </pfx5:Error>
                        </xsl:when>
                        <xsl:when test="exists($_error/ns:ErrorReport/Data/pfx5:Error)">
                            <xsl:copy-of select="$_error/ns:ErrorReport/Data/pfx5:Error"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <pfx5:Error>
                                <pfx5:error_code>
                                    <xsl:value-of select="$_error/ns:ErrorReport/MsgCode"/>
                                </pfx5:error_code>
                                <pfx5:stack_trace>
                                    <xsl:value-of select="$_error/ns:ErrorReport/StackTrace"/>
                                </pfx5:stack_trace>
                                <pfx5:process_stack>
                                    <xsl:value-of select="$_error/ns:ErrorReport/ProcessStack"/>
                                </pfx5:process_stack>
                                <xsl:if test="$_error/ns:ErrorReport/Msg">
                                    <pfx5:error_message>
                                        <xsl:value-of select="$_error/ns:ErrorReport/Msg"/>
                                    </pfx5:error_message>
                                </xsl:if>
                            </pfx5:Error>
                        </xsl:otherwise>
                    </xsl:choose>
                </data>
            </ns2:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>282</pd:x>
        <pd:y>267</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="GetProductProfile">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>682</pd:x>
        <pd:y>65</pd:y>
        <config>
            <element>
                <xsd:element name="group">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element ref="pfx41:result"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:coercions>
            <pd:coercion xpath="$Query/Output/ns8:queryAllResponse/ns8:result/ns8:records" type="ns9:TS_Product_Profile__c" cardinality=""/>
        </pd:coercions>
        <pd:inputBindings>
            <group>
                <pfx41:result>
                    <xsl:for-each select="$Query/Output/ns8:queryAllResponse/ns8:result/ns8:records">
                        <pfx41:records>
                            <pfx41:ID>
                                <xsl:value-of select="ns9:Id"/>
                            </pfx41:ID>
                            <xsl:if test="ns9:Account_ID__c">
                                <pfx41:Account_ID__c>
                                    <xsl:value-of select="ns9:Account_ID__c"/>
                                </pfx41:Account_ID__c>
                            </xsl:if>
                            <xsl:if test="ns9:TS_OS_Language__c">
                                <pfx41:TS_OS_Language__c>
                                    <xsl:value-of select="ns9:TS_OS_Language__c"/>
                                </pfx41:TS_OS_Language__c>
                            </xsl:if>
                            <xsl:if test="ns9:TS_OS__c">
                                <pfx41:TS_OS__c>
                                    <xsl:value-of select="ns9:TS_OS__c"/>
                                </pfx41:TS_OS__c>
                            </xsl:if>
                            <xsl:if test="ns9:TS_Pattern_Type__c">
                                <pfx41:TS_Pattern_Type__c>
                                    <xsl:value-of select="ns9:TS_Pattern_Type__c"/>
                                </pfx41:TS_Pattern_Type__c>
                            </xsl:if>
                            <xsl:if test="ns9:TS_Product_Language__c">
                                <pfx41:TS_Product_Language__c>
                                    <xsl:value-of select="ns9:TS_Product_Language__c"/>
                                </pfx41:TS_Product_Language__c>
                            </xsl:if>
                            <xsl:if test="ns9:TS_Product_Name__c">
                                <pfx41:TS_Product_Name__c>
                                    <xsl:value-of select="ns9:TS_Product_Name__c"/>
                                </pfx41:TS_Product_Name__c>
                            </xsl:if>
                            <xsl:if test="ns9:TS_Product_Version__c">
                                <pfx41:TS_Product_Version__c>
                                    <xsl:value-of select="ns9:TS_Product_Version__c"/>
                                </pfx41:TS_Product_Version__c>
                            </xsl:if>
                            <xsl:if test="ns9:TS_Profile_Name__c">
                                <pfx41:TS_Profile_Name__c>
                                    <xsl:value-of select="ns9:TS_Profile_Name__c"/>
                                </pfx41:TS_Profile_Name__c>
                            </xsl:if>
                            <xsl:if test="ns9:TS_Scan_Engine_Version__c">
                                <pfx41:TS_Scan_Engine_Version__c>
                                    <xsl:value-of select="ns9:TS_Scan_Engine_Version__c"/>
                                </pfx41:TS_Scan_Engine_Version__c>
                            </xsl:if>
                            <xsl:if test="ns9:TS_Service_Pack__c">
                                <pfx41:TS_Service_Pack__c>
                                    <xsl:value-of select="ns9:TS_Service_Pack__c"/>
                                </pfx41:TS_Service_Pack__c>
                            </xsl:if>
                            <pfx41:TS_Office_Scan_Service_GUID__c>
                                <xsl:value-of select="ns9:TS_Office_Scan_Service_GUID__c"/>
                            </pfx41:TS_Office_Scan_Service_GUID__c>
                            <xsl:if test="ns9:LastModifiedDate">
                                <pfx41:LastModifiedDate>
                                    <xsl:value-of select="ns9:LastModifiedDate"/>
                                </pfx41:LastModifiedDate>
                            </xsl:if>
                        </pfx41:records>
                    </xsl:for-each>
                </pfx41:result>
            </group>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="TotalResult">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>809</pd:x>
        <pd:y>63</pd:y>
        <config>
            <processName>/Services/G2Service/ShareProcess/Query.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <Sessionid>
                    <xsl:value-of select="$Login/root/SessionID"/>
                </Sessionid>
                <QueryString>
                    <xsl:value-of select="concat(&quot;SELECT COUNT() &quot;,&#xA;&quot; From TS_Product_Profile__c&quot;,&#xA;&quot; Where Account_ID__c='&quot;,$Start/pfx42:SFDC_GetProductProfileListRq/pfx42:RequestBody/pfx42:AccountID,&quot;'&quot;,&#xA;$Map-Data/QueryCondition/ProfileName,&#xA;$Map-Data/QueryCondition/ProductName,&#xA;$Map-Data/QueryCondition/ProductLanguage,&#xA;$Map-Data/QueryCondition/ProductOS, $Map-Data/QueryCondition/ProductVersion,$Map-Data/QueryCondition/OSLanguage,$Map-Data/QueryCondition/ServicePack,&#xA;$Map-Data/QueryCondition/ScanengineVersion,$Map-Data/QueryCondition/VirusPatternType)"/>
                </QueryString>
                <ServerURL>
                    <xsl:value-of select="$Login/root/ServerURL"/>
                </ServerURL>
                <messagekey>
                    <xsl:value-of select="$Start/pfx42:SFDC_GetProductProfileListRq/pfx42:RequestHeader/ns7:MessageKey"/>
                </messagekey>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map Data">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>423</pd:x>
        <pd:y>137</pd:y>
        <config>
            <element>
                <xsd:element name="QueryCondition">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="ProfileName" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="ProductName" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="ProductLanguage" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="ProductOS" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="ProductVersion" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="OSLanguage" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="ServicePack" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="ScanengineVersion" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="VirusPatternType" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <QueryCondition>
                <xsl:choose>
                    <xsl:when test="tib:trim($Start/pfx42:SFDC_GetProductProfileListRq/pfx42:RequestBody/pfx42:ProfileName) !=&quot;&quot;">
                        <ProfileName>
                            <xsl:value-of select="concat(&quot; and TS_Profile_Name__c like '%&quot;,$Start/pfx42:SFDC_GetProductProfileListRq/pfx42:RequestBody/pfx42:ProfileName,&quot;%' &quot;)"/>
                        </ProfileName>
                    </xsl:when>
                    <xsl:otherwise/>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="tib:trim($Start/pfx42:SFDC_GetProductProfileListRq/pfx42:RequestBody/pfx42:ProductName) !=&quot;&quot;">
                        <ProductName>
                            <xsl:value-of select="concat(&quot; and TS_Product_Name__c='&quot;,$Start/pfx42:SFDC_GetProductProfileListRq/pfx42:RequestBody/pfx42:ProductName,&quot;' &quot;)"/>
                        </ProductName>
                    </xsl:when>
                    <xsl:otherwise/>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="tib:trim($Start/pfx42:SFDC_GetProductProfileListRq/pfx42:RequestBody/pfx42:ProductLanguage) !=&quot;&quot;">
                        <ProductLanguage>
                            <xsl:value-of select="concat(&quot; and TS_Product_Language__c='&quot;,$Start/pfx42:SFDC_GetProductProfileListRq/pfx42:RequestBody/pfx42:ProductLanguage,&quot;' &quot;)"/>
                        </ProductLanguage>
                    </xsl:when>
                    <xsl:otherwise/>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="tib:trim($Start/pfx42:SFDC_GetProductProfileListRq/pfx42:RequestBody/pfx42:ProductOS) !=&quot;&quot;">
                        <ProductOS>
                            <xsl:value-of select="concat(&quot; and TS_OS__c='&quot;,$Start/pfx42:SFDC_GetProductProfileListRq/pfx42:RequestBody/pfx42:ProductOS,&quot;' &quot;)"/>
                        </ProductOS>
                    </xsl:when>
                    <xsl:otherwise/>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="tib:trim($Start/pfx42:SFDC_GetProductProfileListRq/pfx42:RequestBody/pfx42:ProductVersion) !=&quot;&quot;">
                        <ProductVersion>
                            <xsl:value-of select="concat(&quot; and TS_Product_Version__c='&quot;,$Start/pfx42:SFDC_GetProductProfileListRq/pfx42:RequestBody/pfx42:ProductVersion,&quot;' &quot;)"/>
                        </ProductVersion>
                    </xsl:when>
                    <xsl:otherwise/>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="tib:trim($Start/pfx42:SFDC_GetProductProfileListRq/pfx42:RequestBody/pfx42:ProductVersion) !=&quot;&quot;">
                        <OSLanguage>
                            <xsl:value-of select="concat(&quot; and TS_OS_Language__c='&quot;,$Start/pfx42:SFDC_GetProductProfileListRq/pfx42:RequestBody/pfx42:OSLanguage,&quot;' &quot;)"/>
                        </OSLanguage>
                    </xsl:when>
                    <xsl:otherwise/>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="tib:trim($Start/pfx42:SFDC_GetProductProfileListRq/pfx42:RequestBody/pfx42:ServicePack) !=&quot;&quot;">
                        <ServicePack>
                            <xsl:value-of select="concat(&quot; and TS_Service_Pack__c='&quot;,$Start/pfx42:SFDC_GetProductProfileListRq/pfx42:RequestBody/pfx42:ServicePack,&quot;' &quot;)"/>
                        </ServicePack>
                    </xsl:when>
                    <xsl:otherwise/>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="tib:trim($Start/pfx42:SFDC_GetProductProfileListRq/pfx42:RequestBody/pfx42:ScanEngineVersion) !=&quot;&quot;">
                        <ScanengineVersion>
                            <xsl:value-of select="concat(&quot; and TS_Scan_Engine_Version__c like '%&quot;,$Start/pfx42:SFDC_GetProductProfileListRq/pfx42:RequestBody/pfx42:ScanEngineVersion,&quot;%' &quot;)"/>
                        </ScanengineVersion>
                    </xsl:when>
                    <xsl:otherwise/>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="tib:trim($Start/pfx42:SFDC_GetProductProfileListRq/pfx42:RequestBody/pfx42:VirusPatternType) !=&quot;&quot;">
                        <VirusPatternType>
                            <xsl:value-of select="concat(&quot; and TS_Pattern_Type__c='&quot;,$Start/pfx42:SFDC_GetProductProfileListRq/pfx42:RequestBody/pfx42:VirusPatternType,&quot;' &quot;)"/>
                        </VirusPatternType>
                    </xsl:when>
                    <xsl:otherwise/>
                </xsl:choose>
            </QueryCondition>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Call Log Process Rq</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call Log Process Rq</pd:from>
        <pd:to>Login</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Login</pd:from>
        <pd:to>Map Data</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Query</pd:from>
        <pd:to>GetProductProfile</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>Generate Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetProductProfile</pd:from>
        <pd:to>TotalResult</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>TotalResult</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map Data</pd:from>
        <pd:to>Query</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>
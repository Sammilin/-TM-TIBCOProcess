<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx16="http://www.trendmicro.com/ESB/Services/GCC/EI_GCC_CreateCorporateCaseRs" xmlns:pfx15="http://www.trendmicro.com/ESB/Services/GCC/EI_GCC_CreateCorporateCaseRq" xmlns:pfx14="http://www.trendmicro.com/ESB/Services/Chat_RC/EI_EN_CreateConsumerCaseRs" xmlns:ns="http://www.tibco.com/pe/EngineTypes" xmlns:pfx13="http://www.trendmicro.com/ESB/Services/Chat_RC/EI_EN_CreateConsumerCaseRq" xmlns:pfx12="http://www.trendmicro.com/ESB/Services/Chat_RC/EI_JP_CreateConsumerCaseRs" xmlns:pfx11="http://www.trendmicro.com/ESB/Services/Chat_RC/EI_JP_CreateConsumerCaseRq" xmlns:pfx10="http://www.trendmicro.com/ESB/Services/Chat_RC/EI_CreateConsumerCaseRs" xmlns:pfx19="http://www.trendmicro.com/ESB/schemas/DBLogger" xmlns:pfx18="http://www.tibco.com/schemas/GCCPortal/Portal/XSD/PortalSRCaseResult.xsd" xmlns:pfx17="http://www.tibco.com/schemas/GCCPortal/Portal/XSD/PortalSRCase.xsd" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns12="http://www.tibco.com/namespaces/tnt/plugins/file" xmlns:ns13="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:pfx="http://www.siebel.com/xml/RAEM%20Internal%20Product%20Interface" xmlns:ns10="http://www.tibco.com/schemas/GCCPortal/XSD/G2/SFDCQueryRS/getSRInfo.xsd" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:TM="java://com.trendmicro.DynamicXMLValidator" xmlns:pfx31="http://www.trendmicro.com/PSC/PSC_GetSRListRq" xmlns:pfx5="http://www.trendmicro.com/ESB/schemas/errorReport" xmlns:pfx32="http://www.tibco.com/schemas/GCCPortal/XSD/GetSRListResults.xsd" xmlns:pfx4="http://www.trendmicro.com/ESB/Services/DealRegistration/DealRegistrationRq" xmlns:pfx3="http://www.trendmicro.com/ESB/Services/OrderCreation/OrderSubmissionRq" xmlns:pfx33="http://www.trendmicro.com/PSC/PSC_GetTopSRListRq" xmlns:pfx34="http://www.tibco.com/schemas/GCCPortal/XSD/GetTopSRListResults.xsd" xmlns:pfx2="http://siebel.com/asi/" xmlns:pfx35="http://www.trendmicro.com/PSC/PSC_GetEntitlementInfoRq" xmlns:pfx9="http://www.trendmicro.com/ESB/Services/Chat_RC/EI_CreateConsumerCaseRq" xmlns:pfx36="http://www.tibco.com/schemas/GCCPortal/XSD/G2/SFDCQueryRS/getEntitlementInfo.xsd" xmlns:pfx8="http://www.trendmicro.com/ESB/Services/Chat_RC/EI_QeuryCaseRq" xmlns:pfx37="http://www.tibco.com/schemas/GCCPortal/XSD/G2/GetEntitlementInfoResult.xsd" xmlns:pfx7="JP Common WS" xmlns:pfx38="http://www.trendmicro.com/SFDC/SFDC_GetEntitlementInfoRq" xmlns:pfx6="http://www.trendmicro.com/ESB/Services/DealRegistration/GMT_InternalProductRq" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx30="http://www.tibco.com/schemas/GCCPortal/XSD/G2/GetSRInfoResult.xsd" xmlns:ns9="urn:sobject.enterprise.soap.sforce.com" xmlns:alppTM="java://com.trendmicro.TMBWUtilities" xmlns:ns5="http://www.siebel.com/xml/GCC%20IO%20Action%20Attachment" xmlns:ns6="GCC_PH_CON_CHAT_WS" xmlns:ns7="http://www.trendmicro.com/ESB/schemas/messageHeader" xmlns:ns8="urn:enterprise.soap.sforce.com" xmlns:ns2="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:ns1="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns4="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:pfx28="http://www.trendmicro.com/PSC/PSC_GetSRInfoRq" xmlns:ns3="GCC Common WS" xmlns:pfx29="http://www.tibco.com/ns/no_namespace_schema_location/XSD/G2/SFDCQueryRS/getSRInfo.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx22="http://www.tibco.com/schemas/GCCPortal/XSD/G2/GetAccountInoResult.xsd" xmlns:pfx23="http://www.tibco.com/ns/no_namespace_schema_location/XSD/G2/TestQueryRs.xsd" xmlns:pfx20="http://www.trendmicro.com/ESB/Services/Portal/EI_CreatePortalCaseRq" xmlns:pfx21="http://www.trendmicro.com/PSC/PSC_GetAccountInfoRq" xmlns:pfx26="http://www.trendmicro.com/ESB/schemas/error" xmlns:pfx27="http://www.tibco.com/schemas/GCCPortal/XSD/G2/SFDCQueryRS/getAccountInfo.xsd" xmlns:pfx24="http://www.tibco.com/ns/no_namespace_schema_location/XSD/G2/SFDCQueryRS/TestQueryRs.xsd" xmlns:pfx25="http://www.tibco.com/ns/no_namespace_schema_location/XSD/G2/SFDCQueryRS/getAccountInfo.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <xsd:import namespace="http://www.siebel.com/xml/RAEM%20Internal%20Product%20Interface" schemaLocation="/WSDL/Siebel WSDL/http___siebel.com_asi__RAEM_Internal_Product_WS_-_TIBCO.WSDL.wsdl"/>
    <xsd:import namespace="http://siebel.com/asi/" schemaLocation="/WSDL/http___siebel.com_asi__RAEM_Internal_Product_WS_-_TIBCO.WSDL.wsdl"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/Services/DealRegistration/GMT_InternalProductRq" schemaLocation="/WSDL/SRFRq.xsd"/>
    <xsd:import namespace="JP Common WS" schemaLocation="/WSDL/Provider/JP Common WS_JP Common WS.WSDL.wsdl"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/Services/Chat_RC/EI_CreateConsumerCaseRq" schemaLocation="/WSDL/Client/EI_JP_CreateConsumerCaseRq.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/Services/Chat_RC/EI_CreateConsumerCaseRs" schemaLocation="/WSDL/Client/EI_JP_CreateConsumerCaseRs.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/Services/Chat_RC/EI_JP_CreateConsumerCaseRq" schemaLocation="/WSDL/Client/JPXSD/EI_JP_CreateConsumerCaseRq.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/Services/Chat_RC/EI_EN_CreateConsumerCaseRq" schemaLocation="/WSDL/Client/ENXSD/EI_EN_CreateConsumerCaseRq.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/Services/Chat_RC/EI_JP_CreateConsumerCaseRs" schemaLocation="/WSDL/Client/JPXSD/EI_JP_CreateConsumerCaseRs.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/Services/Chat_RC/EI_EN_CreateConsumerCaseRs" schemaLocation="/WSDL/Client/ENXSD/EI_EN_CreateConsumerCaseRs.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/Services/Chat_RC/EI_QeuryCaseRq"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/Services/GCC/EI_GCC_CreateCorporateCaseRq" schemaLocation="/WSDL/Client/CorporateXSD/EI_GCC_CreateCorporateCaseRq.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/Services/GCC/EI_GCC_CreateCorporateCaseRs" schemaLocation="/WSDL/Client/CorporateXSD/EI_GCC_CreateCorporateCaseRs.xsd"/>
    <xsd:import namespace="GCC Common WS" schemaLocation="/WSDL/Provider/GCC Common WS_GCC Common WS.WSDL.wsdl"/>
    <xsd:import namespace="http://www.tibco.com/schemas/GCCPortal/Portal/XSD/PortalSRCase.xsd" schemaLocation="/XSD/Portal/PortalSRCase.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/GCCPortal/Portal/XSD/PortalSRCaseResult.xsd" schemaLocation="/XSD/Portal/PortalSRCaseResult.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/schemas/DBLogger" schemaLocation="/XSD/Common/logger.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/Services/Portal/EI_CreatePortalCaseRq" schemaLocation="/WSDL/Client/PortalXSD/EI_CreatePortalCaseRq.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/PSC/PSC_GetAccountInfoRq" schemaLocation="/WSDL/Client/G2XSD/PSC_GetAccountInfoRq.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/GCCPortal/XSD/G2/GetAccountInoResult.xsd" schemaLocation="/XSD/G2/GetAccountInoResult.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/XSD/G2/TestQueryRs.xsd" schemaLocation="/XSD/G2/TestQueryRs.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/XSD/G2/SFDCQueryRS/TestQueryRs.xsd" schemaLocation="/XSD/G2/SFDCQueryRS/TestQueryRs.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/schemas/error" schemaLocation="/XSD/Common/error.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/schemas/errorReport" schemaLocation="/XSD/Common/errorReport.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/GCCPortal/XSD/G2/SFDCQueryRS/getAccountInfo.xsd" schemaLocation="/XSD/G2/SFDCQueryRS/getAccountInfo.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/PSC/PSC_GetSRInfoRq" schemaLocation="/WSDL/Client/G2XSD/PSC_GetSRInfoRq.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/GCCPortal/XSD/G2/GetSRInfoResult.xsd" schemaLocation="/XSD/G2/GetSRInfoResult.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/PSC/PSC_GetSRListRq" schemaLocation="/WSDL/Client/G2XSD/PSC_GetSRListRq.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/GCCPortal/XSD/GetSRListResults.xsd" schemaLocation="/XSD/G2/GetSRListResults.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/GCCPortal/XSD/G2/SFDCQueryRS/getSRInfo.xsd" schemaLocation="/XSD/G2/SFDCQueryRS/getSRInfo.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/PSC/PSC_GetTopSRListRq" schemaLocation="/WSDL/Client/G2XSD/PSC_GetTopSRListRq.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/GCCPortal/XSD/GetTopSRListResults.xsd" schemaLocation="/XSD/G2/GetTopSRListResults.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/PSC/PSC_GetEntitlementInfoRq" schemaLocation="/WSDL/Client/G2XSD/PSC_GetEntitlementInfoRq.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/GCCPortal/XSD/G2/SFDCQueryRS/getEntitlementInfo.xsd" schemaLocation="/XSD/G2/SFDCQueryRS/getEntitlementInfo.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/GCCPortal/XSD/G2/GetEntitlementInfoResult.xsd" schemaLocation="/XSD/G2/GetEntitlementInfoResult.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/SFDC/SFDC_GetEntitlementInfoRq" schemaLocation="/WSDL/Client/G2XSD/SFDC_GetEntitlementInfoRq.xsd"/>
    <xsd:import namespace="urn:sobject.enterprise.soap.sforce.com" schemaLocation="/WSDL/Provider/TSSalesforceWSDL.wsdl"/>
    <pd:name>Services/G2Service/SFDC_Query/GetEntitlementInfo/V1.0/ExecuteRequest.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType ref="pfx38:SFDC_GetEntitlementInfoRq"/>
    <pd:startX>48</pd:startX>
    <pd:startY>61</pd:startY>
    <pd:returnBindings>
        <group>
            <Response>
                <pfx37:ResultSet1>
                    <xsl:for-each select="$GetEntitlementInfoResult/pfx36:result/pfx36:records">
                        <pfx37:Record1>
                            <pfx37:ID>
                                <xsl:value-of select="pfx36:ID"/>
                            </pfx37:ID>
                            <pfx37:Name>
                                <xsl:value-of select="pfx36:Name"/>
                            </pfx37:Name>
                            <pfx37:Type>
                                <xsl:value-of select="pfx36:Type"/>
                            </pfx37:Type>
                            <pfx37:StartDate>
                                <xsl:value-of select="pfx36:StartDate"/>
                            </pfx37:StartDate>
                            <pfx37:EndDate>
                                <xsl:value-of select="pfx36:EndDate"/>
                            </pfx37:EndDate>
                            <pfx37:InitialIncidents>
                                <xsl:value-of select="pfx36:CasesPerEntitlement"/>
                            </pfx37:InitialIncidents>
                            <pfx37:UsedQuantity>
                                <xsl:value-of select="&quot;&quot;"/>
                            </pfx37:UsedQuantity>
                            <pfx37:CurrentIncidents>
                                <xsl:value-of select="pfx36:RemainingCases"/>
                            </pfx37:CurrentIncidents>
                            <pfx37:Region>
                                <xsl:value-of select="pfx36:TS_Support_Region__c"/>
                            </pfx37:Region>
                            <pfx37:HandlingTeam>
                                <xsl:value-of select="pfx36:TS_Handling_Team__c"/>
                            </pfx37:HandlingTeam>
                            <pfx37:ServiceLevel>
                                <xsl:value-of select="pfx36:TS_Service_Level__c"/>
                            </pfx37:ServiceLevel>
                            <xsl:if test="pfx36:Status">
                                <pfx37:Status>
                                    <xsl:value-of select="pfx36:Status"/>
                                </pfx37:Status>
                            </xsl:if>
                            <xsl:if test="pfx36:TS_Entitlement_Status__c">
                                <pfx37:EntitlementStatus>
                                    <xsl:value-of select="pfx36:TS_Entitlement_Status__c"/>
                                </pfx37:EntitlementStatus>
                            </xsl:if>
                        </pfx37:Record1>
                    </xsl:for-each>
                </pfx37:ResultSet1>
            </Response>
        </group>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="group">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="Response" type="pfx37:GetEntitlementInfoResultType"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>805</pd:endX>
    <pd:endY>63</pd:endY>
    <pd:errorSchemas>
        <errorReport ref="pfx5:Error"/>
    </pd:errorSchemas>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1302247535834</pd:targetNamespace>
    <pd:activity name="Call Log Process Rq">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>177</pd:x>
        <pd:y>71</pd:y>
        <config>
            <processName>/Services/SharedOperations/Log Process.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:inputBindings>
            <Log>
                <pfx19:DBLogger>
                    <xsl:for-each select="$Start/pfx38:SFDC_GetEntitlementInfoRq/pfx38:RequestHeader">
                        <pfx19:MessageHeader>
                            <pfx19:MessageKey>
                                <xsl:value-of select="ns7:MessageKey"/>
                            </pfx19:MessageKey>
                            <pfx19:ServiceName>
                                <xsl:value-of select="ns7:ServiceName"/>
                            </pfx19:ServiceName>
                            <pfx19:ServiceVersion>
                                <xsl:value-of select="ns7:ServiceVersion"/>
                            </pfx19:ServiceVersion>
                            <pfx19:SourceID>
                                <xsl:value-of select="ns7:SourceID"/>
                            </pfx19:SourceID>
                            <xsl:if test="ns7:RqTimestamp">
                                <pfx19:RqTimestamp>
                                    <xsl:value-of select="ns7:RqTimestamp"/>
                                </pfx19:RqTimestamp>
                            </xsl:if>
                        </pfx19:MessageHeader>
                    </xsl:for-each>
                    <pfx19:MessageBody>
                        <xsl:copy-of select="$Start/pfx38:SFDC_GetEntitlementInfoRq/pfx38:RequestBody"/>
                    </pfx19:MessageBody>
                </pfx19:DBLogger>
                <message>
                    <xsl:value-of select="concat(&quot;INPUT XML: &quot;,tib:render-xml($Start/pfx38:SFDC_GetEntitlementInfoRq))"/>
                </message>
                <messageCode>
                    <xsl:value-of select="'SFDC_GetEntitlementInfoRQ'"/>
                </messageCode>
            </Log>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Login">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>339</pd:x>
        <pd:y>64</pd:y>
        <config>
            <processName>/Services/G2Service/ShareProcess/Login.process</processName>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Query">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>483</pd:x>
        <pd:y>62</pd:y>
        <config>
            <processName>/Services/G2Service/ShareProcess/Query.process</processName>
        </config>
        <pd:inputBindings>
            <xsl:variable name="Fields" select="&quot;ID,Name,Type,StartDate,EndDate,CasesPerEntitlement,RemainingCases,TS_Service_Level__c,TS_Support_Region__c,TS_Handling_Team__c,Status,TS_Entitlement_Status__c&quot;"/>
            <root>
                <Sessionid>
                    <xsl:value-of select="$Login/root/SessionID"/>
                </Sessionid>
                <xsl:choose>
                    <xsl:when test="tib:trim($Start/pfx38:SFDC_GetEntitlementInfoRq/pfx38:RequestBody/pfx38:AccountID) !=&quot;&quot;  and &#xA;tib:trim($Start/pfx38:SFDC_GetEntitlementInfoRq/pfx38:RequestBody/pfx38:EntitlementID) !=&quot;&quot;">
                        <QueryString>
                            <xsl:value-of select="concat(&quot;SELECT &quot;,&#xA;$Fields,&#xA;&quot; FROM Entitlement &quot;,&#xA;&quot; WHERE AccountId='&quot;,$Start/pfx38:SFDC_GetEntitlementInfoRq/pfx38:RequestBody/pfx38:AccountID,&quot;'&quot;,&#xA;&quot; AND ID='&quot;,$Start/pfx38:SFDC_GetEntitlementInfoRq/pfx38:RequestBody/pfx38:EntitlementID,&quot;'&quot;&#xA;)"/>
                        </QueryString>
                    </xsl:when>
                    <xsl:when test="tib:trim($Start/pfx38:SFDC_GetEntitlementInfoRq/pfx38:RequestBody/pfx38:EntitlementID) !=&quot;&quot;">
                        <QueryString>
                            <xsl:value-of select="concat(&quot;SELECT &quot;,&#xA;$Fields,&#xA;&quot; FROM Entitlement &quot;,&#xA;&quot; WHERE ID='&quot;,$Start/pfx38:SFDC_GetEntitlementInfoRq/pfx38:RequestBody/pfx38:EntitlementID,&quot;'&quot;&#xA;)"/>
                        </QueryString>
                    </xsl:when>
                    <xsl:when test="tib:trim($Start/pfx38:SFDC_GetEntitlementInfoRq/pfx38:RequestBody/pfx38:AccountID) !=&quot;&quot;">
                        <QueryString>
                            <xsl:value-of select="concat(&quot;SELECT &quot;,&#xA;$Fields,&#xA;&quot; FROM Entitlement &quot;,&#xA;&quot; WHERE AccountId='&quot;,$Start/pfx38:SFDC_GetEntitlementInfoRq/pfx38:RequestBody/pfx38:AccountID,&quot;'&quot;&#xA;)"/>
                        </QueryString>
                    </xsl:when>
                    <xsl:otherwise>
                        <QueryString>
                            <xsl:value-of select="concat(&quot;SELECT &quot;,&#xA;$Fields,&#xA;&quot; FROM Entitlement &quot;,&#xA;&quot; LIMIT 1&quot;)"/>
                        </QueryString>
                    </xsl:otherwise>
                </xsl:choose>
                <ServerURL>
                    <xsl:value-of select="$Login/root/ServerURL"/>
                </ServerURL>
                <messagekey>
                    <xsl:value-of select="$Start/pfx38:SFDC_GetEntitlementInfoRq/pfx38:RequestHeader/ns7:MessageKey"/>
                </messagekey>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Generate Error">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>473</pd:x>
        <pd:y>268</pd:y>
        <config>
            <faultName>errorReport</faultName>
        </config>
        <pd:coercions>
            <pd:coercion xpath="$_error/ns:ErrorReport/Data/*" element="pfx5:Error"/>
        </pd:coercions>
        <pd:inputBindings>
            <ns2:ActivityInput>
                <data>
                    <xsl:choose>
                        <xsl:when test="exists($_error_Query/pfx5:Error)">
                            <pfx5:Error>
                                <pfx5:error_code>
                                    <xsl:value-of select="'GetEntitlementInfoFail'"/>
                                </pfx5:error_code>
                                <pfx5:stack_trace>
                                    <xsl:value-of select="$_error_Query/pfx5:Error/pfx5:stack_trace"/>
                                </pfx5:stack_trace>
                                <pfx5:process_stack>
                                    <xsl:value-of select="$_error_Query/pfx5:Error/pfx5:process_stack"/>
                                </pfx5:process_stack>
                                <xsl:if test="$_error_Query/pfx5:Error/pfx5:error_message">
                                    <pfx5:error_message>
                                        <xsl:value-of select="$_error_Query/pfx5:Error/pfx5:error_message"/>
                                    </pfx5:error_message>
                                </xsl:if>
                            </pfx5:Error>
                        </xsl:when>
                        <xsl:when test="exists($_error/ns:ErrorReport/Data/pfx5:Error)">
                            <xsl:copy-of select="$_error/ns:ErrorReport/Data/pfx5:Error"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <pfx5:Error>
                                <pfx5:error_code>
                                    <xsl:value-of select="$_error/ns:ErrorReport/MsgCode"/>
                                </pfx5:error_code>
                                <pfx5:stack_trace>
                                    <xsl:value-of select="$_error/ns:ErrorReport/StackTrace"/>
                                </pfx5:stack_trace>
                                <pfx5:process_stack>
                                    <xsl:value-of select="$_error/ns:ErrorReport/ProcessStack"/>
                                </pfx5:process_stack>
                                <xsl:if test="$_error/ns:ErrorReport/Msg">
                                    <pfx5:error_message>
                                        <xsl:value-of select="$_error/ns:ErrorReport/Msg"/>
                                    </pfx5:error_message>
                                </xsl:if>
                            </pfx5:Error>
                        </xsl:otherwise>
                    </xsl:choose>
                </data>
            </ns2:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>282</pd:x>
        <pd:y>267</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="GetEntitlementInfoResult">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>622</pd:x>
        <pd:y>61</pd:y>
        <config>
            <element ref="pfx36:result"/>
        </config>
        <pd:coercions>
            <pd:coercion xpath="$Query-By-ContactId/Output/ns8:queryAllResponse/ns8:result/ns8:records" type="ns9:EntitlementContact"/>
            <pd:coercion xpath="$Query/Output/ns8:queryAllResponse/ns8:result/ns8:records" type="ns9:Entitlement" cardinality=""/>
        </pd:coercions>
        <pd:inputBindings>
            <pfx36:result>
                <xsl:choose>
                    <xsl:when test="exists($Start/pfx38:SFDC_GetEntitlementInfoRq/pfx38:RequestBody/pfx38:ContactID) and&#xA;tib:trim($Start/pfx38:SFDC_GetEntitlementInfoRq/pfx38:RequestBody/pfx38:ContactID) !=&quot;&quot;">
                        <xsl:for-each select="$Query-By-ContactId/Output/ns8:queryAllResponse/ns8:result/ns8:records">
                            <pfx36:records>
                                <xsl:if test="not((ns9:Entitlement/ns9:Id/@xsi:nil=(&quot;true&quot;)) or (ns9:Entitlement/ns9:Id/@xsi:nil=(&quot;1&quot;)))">
                                    <pfx36:ID>
                                        <xsl:value-of select="ns9:Entitlement/ns9:Id"/>
                                    </pfx36:ID>
                                </xsl:if>
                                <xsl:if test="not((ns9:Entitlement/ns9:Name/@xsi:nil=(&quot;true&quot;)) or (ns9:Entitlement/ns9:Name/@xsi:nil=(&quot;1&quot;)))">
                                    <pfx36:Name>
                                        <xsl:value-of select="ns9:Entitlement/ns9:Name"/>
                                    </pfx36:Name>
                                </xsl:if>
                                <xsl:if test="not((ns9:Entitlement/ns9:Type/@xsi:nil=(&quot;true&quot;)) or (ns9:Entitlement/ns9:Type/@xsi:nil=(&quot;1&quot;)))">
                                    <pfx36:Type>
                                        <xsl:value-of select="ns9:Entitlement/ns9:Type"/>
                                    </pfx36:Type>
                                </xsl:if>
                                <xsl:if test="not((ns9:Entitlement/ns9:StartDate/@xsi:nil=(&quot;true&quot;)) or (ns9:Entitlement/ns9:StartDate/@xsi:nil=(&quot;1&quot;)))">
                                    <pfx36:StartDate>
                                        <xsl:value-of select="ns9:Entitlement/ns9:StartDate"/>
                                    </pfx36:StartDate>
                                </xsl:if>
                                <xsl:if test="not((ns9:Entitlement/ns9:EndDate/@xsi:nil=(&quot;true&quot;)) or (ns9:Entitlement/ns9:EndDate/@xsi:nil=(&quot;1&quot;)))">
                                    <pfx36:EndDate>
                                        <xsl:value-of select="ns9:Entitlement/ns9:EndDate"/>
                                    </pfx36:EndDate>
                                </xsl:if>
                                <xsl:if test="not((ns9:Entitlement/ns9:CasesPerEntitlement/@xsi:nil=(&quot;true&quot;)) or (ns9:Entitlement/ns9:CasesPerEntitlement/@xsi:nil=(&quot;1&quot;)))">
                                    <pfx36:CasesPerEntitlement>
                                        <xsl:value-of select="ns9:Entitlement/ns9:CasesPerEntitlement"/>
                                    </pfx36:CasesPerEntitlement>
                                </xsl:if>
                                <xsl:if test="not((ns9:Entitlement/ns9:RemainingCases/@xsi:nil=(&quot;true&quot;)) or (ns9:Entitlement/ns9:RemainingCases/@xsi:nil=(&quot;1&quot;)))">
                                    <pfx36:RemainingCases>
                                        <xsl:value-of select="ns9:Entitlement/ns9:RemainingCases"/>
                                    </pfx36:RemainingCases>
                                </xsl:if>
                                <xsl:if test="not((ns9:Entitlement/ns9:TS_Service_Level__c/@xsi:nil=(&quot;true&quot;)) or (ns9:Entitlement/ns9:TS_Service_Level__c/@xsi:nil=(&quot;1&quot;)))">
                                    <pfx36:TS_Service_Level__c>
                                        <xsl:value-of select="ns9:Entitlement/ns9:TS_Service_Level__c"/>
                                    </pfx36:TS_Service_Level__c>
                                </xsl:if>
                                <xsl:if test="not((ns9:Entitlement/ns9:TS_Support_Region__c/@xsi:nil=(&quot;true&quot;)) or (ns9:Entitlement/ns9:TS_Support_Region__c/@xsi:nil=(&quot;1&quot;)))">
                                    <pfx36:TS_Support_Region__c>
                                        <xsl:value-of select="ns9:Entitlement/ns9:TS_Support_Region__c"/>
                                    </pfx36:TS_Support_Region__c>
                                </xsl:if>
                                <xsl:if test="not((ns9:Entitlement/ns9:TS_Handling_Team__c/@xsi:nil=(&quot;true&quot;)) or (ns9:Entitlement/ns9:TS_Handling_Team__c/@xsi:nil=(&quot;1&quot;)))">
                                    <pfx36:TS_Handling_Team__c>
                                        <xsl:value-of select="ns9:Entitlement/ns9:TS_Handling_Team__c"/>
                                    </pfx36:TS_Handling_Team__c>
                                </xsl:if>
                                <xsl:if test="not((ns9:Entitlement/ns9:Status/@xsi:nil=(&quot;true&quot;)) or (ns9:Entitlement/ns9:Status/@xsi:nil=(&quot;1&quot;)))">
                                    <pfx36:Status>
                                        <xsl:value-of select="ns9:Entitlement/ns9:Status"/>
                                    </pfx36:Status>
                                </xsl:if>
                                <xsl:if test="not((ns9:Entitlement/ns9:TS_Entitlement_Status__c/@xsi:nil=(&quot;true&quot;)) or (ns9:Entitlement/ns9:TS_Entitlement_Status__c/@xsi:nil=(&quot;1&quot;)))">
                                    <pfx36:TS_Entitlement_Status__c>
                                        <xsl:value-of select="ns9:Entitlement/ns9:TS_Entitlement_Status__c"/>
                                    </pfx36:TS_Entitlement_Status__c>
                                </xsl:if>
                            </pfx36:records>
                        </xsl:for-each>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:for-each select="$Query/Output/ns8:queryAllResponse/ns8:result/ns8:records">
                            <pfx36:records>
                                <pfx36:ID>
                                    <xsl:value-of select="ns9:Id"/>
                                </pfx36:ID>
                                <xsl:if test="ns9:Name">
                                    <pfx36:Name>
                                        <xsl:value-of select="ns9:Name"/>
                                    </pfx36:Name>
                                </xsl:if>
                                <xsl:if test="ns9:Type">
                                    <pfx36:Type>
                                        <xsl:value-of select="ns9:Type"/>
                                    </pfx36:Type>
                                </xsl:if>
                                <xsl:if test="ns9:StartDate">
                                    <pfx36:StartDate>
                                        <xsl:value-of select="ns9:StartDate"/>
                                    </pfx36:StartDate>
                                </xsl:if>
                                <xsl:if test="ns9:EndDate">
                                    <pfx36:EndDate>
                                        <xsl:value-of select="ns9:EndDate"/>
                                    </pfx36:EndDate>
                                </xsl:if>
                                <xsl:if test="ns9:CasesPerEntitlement">
                                    <pfx36:CasesPerEntitlement>
                                        <xsl:value-of select="ns9:CasesPerEntitlement"/>
                                    </pfx36:CasesPerEntitlement>
                                </xsl:if>
                                <xsl:if test="ns9:RemainingCases">
                                    <pfx36:RemainingCases>
                                        <xsl:value-of select="ns9:RemainingCases"/>
                                    </pfx36:RemainingCases>
                                </xsl:if>
                                <xsl:if test="not((ns9:TS_Service_Level__c/@xsi:nil=(&quot;true&quot;)) or (ns9:TS_Service_Level__c/@xsi:nil=(&quot;1&quot;)))">
                                    <pfx36:TS_Service_Level__c>
                                        <xsl:value-of select="ns9:TS_Service_Level__c"/>
                                    </pfx36:TS_Service_Level__c>
                                </xsl:if>
                                <xsl:if test="not((ns9:TS_Support_Region__c/@xsi:nil=(&quot;true&quot;)) or (ns9:TS_Support_Region__c/@xsi:nil=(&quot;1&quot;)))">
                                    <pfx36:TS_Support_Region__c>
                                        <xsl:value-of select="ns9:TS_Support_Region__c"/>
                                    </pfx36:TS_Support_Region__c>
                                </xsl:if>
                                <xsl:if test="not((ns9:TS_Handling_Team__c/@xsi:nil=(&quot;true&quot;)) or (ns9:TS_Handling_Team__c/@xsi:nil=(&quot;1&quot;)))">
                                    <pfx36:TS_Handling_Team__c>
                                        <xsl:value-of select="ns9:TS_Handling_Team__c"/>
                                    </pfx36:TS_Handling_Team__c>
                                </xsl:if>
                                <xsl:if test="not((ns9:Status/@xsi:nil=(&quot;true&quot;)) or (ns9:Status/@xsi:nil=(&quot;1&quot;)))">
                                    <pfx36:Status>
                                        <xsl:value-of select="ns9:Status"/>
                                    </pfx36:Status>
                                </xsl:if>
                                <xsl:if test="not((ns9:TS_Entitlement_Status__c/@xsi:nil=(&quot;true&quot;)) or (ns9:TS_Entitlement_Status__c/@xsi:nil=(&quot;1&quot;)))">
                                    <pfx36:TS_Entitlement_Status__c>
                                        <xsl:value-of select="ns9:TS_Entitlement_Status__c"/>
                                    </pfx36:TS_Entitlement_Status__c>
                                </xsl:if>
                            </pfx36:records>
                        </xsl:for-each>
                    </xsl:otherwise>
                </xsl:choose>
            </pfx36:result>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Query By ContactId">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>482</pd:x>
        <pd:y>154</pd:y>
        <config>
            <processName>/Services/G2Service/ShareProcess/Query.process</processName>
        </config>
        <pd:inputBindings>
            <xsl:variable name="Fields" select="&quot;EntitlementID,Entitlement.AccountId,Entitlement.ID,Entitlement.Name,Entitlement.Type,Entitlement.StartDate,Entitlement.EndDate,Entitlement.CasesPerEntitlement,Entitlement.RemainingCases,Entitlement.TS_Service_Level__c,Entitlement.TS_Support_Region__c,Entitlement.TS_Handling_Team__c,Entitlement.Status,Entitlement.TS_Entitlement_Status__c &quot;"/>
            <xsl:variable name="AccountQuery" select="if (tib:trim($Start/pfx38:SFDC_GetEntitlementInfoRq/pfx38:RequestBody/pfx38:AccountID)!=&quot;&quot;) then &#xA;concat(&quot; and Entitlement.AccountId ='&quot;,$Start/pfx38:SFDC_GetEntitlementInfoRq/pfx38:RequestBody/pfx38:AccountID,&quot;'&quot;)&#xA;else &quot;&quot;"/>
            <xsl:variable name="EntitlementQuery" select="if (tib:trim($Start/pfx38:SFDC_GetEntitlementInfoRq/pfx38:RequestBody/pfx38:EntitlementID)!=&quot;&quot;) then &#xA;concat(&quot; and EntitlementId='&quot;,$Start/pfx38:SFDC_GetEntitlementInfoRq/pfx38:RequestBody/pfx38:EntitlementID,&quot;'&quot;)&#xA;else &quot;&quot;"/>
            <root>
                <Sessionid>
                    <xsl:value-of select="$Login/root/SessionID"/>
                </Sessionid>
                <QueryString>
                    <xsl:value-of select="concat(&quot;Select &quot;,&#xA;$Fields,&#xA;&quot; From EntitlementContact where ContactId='&quot;,$Start/pfx38:SFDC_GetEntitlementInfoRq/pfx38:RequestBody/pfx38:ContactID,&quot;'&quot;,$AccountQuery,$EntitlementQuery)"/>
                </QueryString>
                <ServerURL>
                    <xsl:value-of select="$Login/root/ServerURL"/>
                </ServerURL>
                <messagekey>
                    <xsl:value-of select="$Start/pfx38:SFDC_GetEntitlementInfoRq/pfx38:RequestHeader/ns7:MessageKey"/>
                </messagekey>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Call Log Process Rq</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call Log Process Rq</pd:from>
        <pd:to>Login</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Login</pd:from>
        <pd:to>Query</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Query</pd:from>
        <pd:to>GetEntitlementInfoResult</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>Generate Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetEntitlementInfoResult</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Login</pd:from>
        <pd:to>Query By ContactId</pd:to>
        <pd:xpathDescription>ContactID exists</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>exists($Start/pfx38:SFDC_GetEntitlementInfoRq/pfx38:RequestBody/pfx38:ContactID) and
tib:trim($Start/pfx38:SFDC_GetEntitlementInfoRq/pfx38:RequestBody/pfx38:ContactID) !=""</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Query By ContactId</pd:from>
        <pd:to>GetEntitlementInfoResult</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>
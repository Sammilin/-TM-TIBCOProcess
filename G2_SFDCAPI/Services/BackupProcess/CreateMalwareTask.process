<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:ns2="http://www.siebel.com/xml/GCC-U%20Corporate%20SR%20AMSS%20Escalation%20Input" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns1="AMSS Task Common WS" xmlns:ns="GCC_U_Corporate_SR_AMSS_Escalation_Service" xmlns:ns3="GCC-U_AMSS_Escalation_WS" xmlns:ns0="http://www.trendmicro.com/ESB/schemas/messageHeader" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx2="http://tempuri.org/" xmlns:pfx="http://www.siebel.com/xml/GCC-U%20Corporate%20SR%20AMSS%20Escalation%20Output">
    <pd:name>Services/BackupProcess/CreateMalwareTask.process</pd:name>
    <pd:description>For File upload, requirement:
Create Virus/Supporting File uploaded EscActivity without parent task id</pd:description>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="CreateMalwareTask">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="MalwareTask">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="File" minOccurs="0" maxOccurs="unbounded">
                                    <xsd:complexType>
                                        <xsd:sequence>
                                            <xsd:element name="FileID" type="xsd:string"/>
                                            <xsd:element name="SHA1" type="xsd:string"/>
                                            <xsd:element name="FileName" type="xsd:string"/>
                                            <xsd:element name="FileSize" type="xsd:string"/>
                                            <xsd:element name="FTPLocation" type="xsd:string"/>
                                        </xsd:sequence>
                                    </xsd:complexType>
                                </xsd:element>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="AMSSInboundTaskInput">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="SouceReferenceNumber" type="xsd:string"/>
                                <xsd:element name="PatternVersion" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="PatternBranch" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="PatternType" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="Title" type="xsd:string"/>
                                <xsd:element name="Type" type="xsd:string"/>
                                <xsd:element name="Country" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="FirstName" type="xsd:string"/>
                                <xsd:element name="LastName" type="xsd:string"/>
                                <xsd:element name="OS" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="Entitlement" type="xsd:string"/>
                                <xsd:element name="Priority" type="xsd:string"/>
                                <xsd:element name="Email" type="xsd:string"/>
                                <xsd:element name="Description" type="xsd:string"/>
                                <xsd:element name="Region" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="ParentTaskID" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="ProductName" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="ProductGIC" type="xsd:string" minOccurs="0"/>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="EscalationActivityInput">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="sSRNumber" type="xsd:string"/>
                                <xsd:element name="IoRepresetation">
                                    <xsd:complexType>
                                        <xsd:sequence>
                                            <xsd:element name="AMSSTaskType" type="xsd:string"/>
                                            <xsd:element name="Description" type="xsd:string"/>
                                            <xsd:element name="Title" type="xsd:string"/>
                                            <xsd:element name="Type" type="xsd:string"/>
                                            <xsd:element name="NeuronId" type="xsd:string" minOccurs="0"/>
                                        </xsd:sequence>
                                    </xsd:complexType>
                                </xsd:element>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="UpdateMalwareTaskInput">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="PortalSourceID" type="xsd:string"/>
                                <xsd:element name="SRNumber" type="xsd:string"/>
                                <xsd:element name="ActivityRowID" type="xsd:string"/>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="MessageKey" type="xsd:string"/>
                    <xsd:element name="SourceID" type="xsd:string"/>
                    <xsd:element name="OpenAMSSFlag" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="ArchFileName" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="ArchFileSHA1" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="ArchFileLocation" type="xsd:string" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>64</pd:startX>
    <pd:startY>184</pd:startY>
    <pd:returnBindings>
        <Status>
            <UpdatePSC>
                <xsl:value-of select="$Update-MalwareTask/pfx2:UpdateMalwareTaskResponse/pfx2:UpdateMalwareTaskResult"/>
            </UpdatePSC>
            <xsl:for-each select="$totalLaterUsage/AccumulatedOutput/laterUsage">
                <AMSSTaskID>
                    <xsl:value-of select="TaskID"/>
                </AMSSTaskID>
            </xsl:for-each>
        </Status>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="Status">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="UpdatePSC" type="xsd:string"/>
                    <xsd:element name="AMSSTaskID" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>1045</pd:endX>
    <pd:endY>68</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1327999960971</pd:targetNamespace>
    <pd:group name="Group (1)">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>360</pd:x>
        <pd:y>50</pd:y>
        <pd:width>318</pd:width>
        <pd:height>254</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>inputLoop</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:over>$Start/CreateMalwareTask/MalwareTask/File</pd:over>
            <pd:iterationElementSlot>currentFile</pd:iterationElementSlot>
            <pd:indexSlot>i</pd:indexSlot>
            <pd:outSlot>totalLaterUsage</pd:outSlot>
            <pd:activityOutputName>laterUsage</pd:activityOutputName>
            <pd:accumulateOutput>true</pd:accumulateOutput>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>CreateAMSSInboundTask</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>laterUsage</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>CreateAMSSInboundTask</pd:from>
            <pd:to>laterUsage</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="CreateAMSSInboundTask">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>457</pd:x>
            <pd:y>186</pd:y>
            <config>
                <processName>/Services/SharedOperations/CreateAMSSInboundTask.process</processName>
            </config>
            <pd:inputBindings>
                <CreateAMSSTask>
                    <ns1:AMSS_spcTask_spcCommon_spcWS_InboundTask_Input>
                        <ns1:SHA1>
                            <xsl:value-of select="$currentFile/File/SHA1"/>
                        </ns1:SHA1>
                        <ns1:FirstName>
                            <xsl:value-of select="$Start/CreateMalwareTask/AMSSInboundTaskInput/FirstName"/>
                        </ns1:FirstName>
                        <ns1:FTPLocation>
                            <xsl:value-of select="$currentFile/File/FTPLocation"/>
                        </ns1:FTPLocation>
                        <xsl:if test="exists($Start/CreateMalwareTask/AMSSInboundTaskInput/ParentTaskID)">
                            <xsl:if test="$Start/CreateMalwareTask/AMSSInboundTaskInput/ParentTaskID">
                                <ns1:ParentTaskId>
                                    <xsl:value-of select="$Start/CreateMalwareTask/AMSSInboundTaskInput/ParentTaskID"/>
                                </ns1:ParentTaskId>
                            </xsl:if>
                        </xsl:if>
                        <ns1:SourceReferenceNumber>
                            <xsl:value-of select="$Start/CreateMalwareTask/AMSSInboundTaskInput/SouceReferenceNumber"/>
                        </ns1:SourceReferenceNumber>
                        <xsl:if test="$Start/CreateMalwareTask/AMSSInboundTaskInput/PatternType">
                            <ns1:PanelType>
                                <xsl:value-of select="$Start/CreateMalwareTask/AMSSInboundTaskInput/PatternType"/>
                            </ns1:PanelType>
                        </xsl:if>
                        <xsl:if test="$Start/CreateMalwareTask/AMSSInboundTaskInput/PatternVersion">
                            <ns1:PatternVersion>
                                <xsl:value-of select="$Start/CreateMalwareTask/AMSSInboundTaskInput/PatternVersion"/>
                            </ns1:PatternVersion>
                        </xsl:if>
                        <ns1:Title>
                            <xsl:value-of select="$Start/CreateMalwareTask/AMSSInboundTaskInput/Title"/>
                        </ns1:Title>
                        <xsl:if test="$Start/CreateMalwareTask/AMSSInboundTaskInput/PatternBranch">
                            <ns1:PatternBranch>
                                <xsl:value-of select="$Start/CreateMalwareTask/AMSSInboundTaskInput/PatternBranch"/>
                            </ns1:PatternBranch>
                        </xsl:if>
                        <ns1:Type>
                            <xsl:value-of select="$Start/CreateMalwareTask/AMSSInboundTaskInput/Type"/>
                        </ns1:Type>
                        <xsl:if test="$Start/CreateMalwareTask/AMSSInboundTaskInput/Country">
                            <ns1:Country>
                                <xsl:value-of select="$Start/CreateMalwareTask/AMSSInboundTaskInput/Country"/>
                            </ns1:Country>
                        </xsl:if>
                        <ns1:FileName>
                            <xsl:value-of select="$currentFile/File/FileName"/>
                        </ns1:FileName>
                        <ns1:LastName>
                            <xsl:value-of select="$Start/CreateMalwareTask/AMSSInboundTaskInput/LastName"/>
                        </ns1:LastName>
                        <ns1:OS>
                            <xsl:value-of select="$Start/CreateMalwareTask/AMSSInboundTaskInput/OS"/>
                        </ns1:OS>
                        <ns1:Entitlement>
                            <xsl:value-of select="$Start/CreateMalwareTask/AMSSInboundTaskInput/Entitlement"/>
                        </ns1:Entitlement>
                        <ns1:Priority>
                            <xsl:value-of select="$Start/CreateMalwareTask/AMSSInboundTaskInput/Priority"/>
                        </ns1:Priority>
                        <ns1:Source>
                            <xsl:value-of select="'GCCU'"/>
                        </ns1:Source>
                        <ns1:SubmitDate>
                            <xsl:value-of select="tib:format-dateTime('MM/dd/yyyy HH:mm:ss', tib:current-dateTime-timezone(0, 0))"/>
                        </ns1:SubmitDate>
                        <xsl:if test="$Start/CreateMalwareTask/AMSSInboundTaskInput/ProductName">
                            <ns1:Product>
                                <xsl:value-of select="$Start/CreateMalwareTask/AMSSInboundTaskInput/ProductName"/>
                            </ns1:Product>
                        </xsl:if>
                        <ns1:FileSize>
                            <xsl:value-of select="$currentFile/File/FileSize"/>
                        </ns1:FileSize>
                        <ns1:Email>
                            <xsl:value-of select="$Start/CreateMalwareTask/AMSSInboundTaskInput/Email"/>
                        </ns1:Email>
                        <ns1:Description>
                            <xsl:value-of select="$Start/CreateMalwareTask/AMSSInboundTaskInput/Description"/>
                        </ns1:Description>
                        <ns1:Region>
                            <xsl:value-of select="$Start/CreateMalwareTask/AMSSInboundTaskInput/Region"/>
                        </ns1:Region>
                    </ns1:AMSS_spcTask_spcCommon_spcWS_InboundTask_Input>
                    <RequestHeader>
                        <ns0:MessageKey>
                            <xsl:value-of select="$Start/CreateMalwareTask/MessageKey"/>
                        </ns0:MessageKey>
                        <ns0:ServiceName>
                            <xsl:value-of select="''"/>
                        </ns0:ServiceName>
                        <ns0:ServiceVersion>
                            <xsl:value-of select="''"/>
                        </ns0:ServiceVersion>
                        <ns0:SourceID>
                            <xsl:value-of select="$Start/CreateMalwareTask/SourceID"/>
                        </ns0:SourceID>
                        <ns0:RqTimestamp>
                            <xsl:value-of select="current-dateTime()"/>
                        </ns0:RqTimestamp>
                    </RequestHeader>
                    <RequestSource>
                        <xsl:value-of select="''"/>
                    </RequestSource>
                </CreateAMSSTask>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="laterUsage">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>582</pd:x>
            <pd:y>187</pd:y>
            <config>
                <element>
                    <xsd:element name="laterUsage">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="FileID" type="xsd:string"/>
                                <xsd:element name="TaskID" type="xsd:string"/>
                                <xsd:element name="FileLocation" type="xsd:string"/>
                                <xsd:element name="OriginalFileName" type="xsd:string"/>
                                <xsd:element name="SHA1" type="xsd:string"/>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                </element>
            </config>
            <pd:inputBindings>
                <laterUsage>
                    <FileID>
                        <xsl:value-of select="$currentFile/File/FileID"/>
                    </FileID>
                    <TaskID>
                        <xsl:value-of select="$CreateAMSSInboundTask/ns1:AMSS_spcTask_spcCommon_spcWS_InboundTask_Output/AMSS_spcTask_spcCommon_spcWS_InboundTask_Output/ns1:AMSS_spcTask_spcCommon_spcWS_InboundTask_Output/ns1:TaskId"/>
                    </TaskID>
                    <FileLocation>
                        <xsl:value-of select="$currentFile/File/FTPLocation"/>
                    </FileLocation>
                    <OriginalFileName>
                        <xsl:value-of select="$currentFile/File/FileName"/>
                    </OriginalFileName>
                    <SHA1>
                        <xsl:value-of select="$currentFile/File/SHA1"/>
                    </SHA1>
                </laterUsage>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="Create1stEscalationActivity">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>216</pd:x>
        <pd:y>304</pd:y>
        <config>
            <processName>/Services/SharedOperations/CreateGCCEscalationActivity.process</processName>
        </config>
        <pd:inputBindings>
            <GCCEscalation>
                <MessageHeader>
                    <ns0:MessageKey>
                        <xsl:value-of select="$Start/CreateMalwareTask/MessageKey"/>
                    </ns0:MessageKey>
                    <ns0:ServiceName>
                        <xsl:value-of select="&quot;CreateEscalationActivity&quot;"/>
                    </ns0:ServiceName>
                    <ns0:ServiceVersion>
                        <xsl:value-of select="'V1.0'"/>
                    </ns0:ServiceVersion>
                    <ns0:SourceID>
                        <xsl:value-of select="$Start/CreateMalwareTask/SourceID"/>
                    </ns0:SourceID>
                </MessageHeader>
                <ns3:GCC-U_spcAMSS_spcEscalation_spcWS_CreateAMSSEscRec_Input>
                    <ns2:ListOfGcc-UCorporateSrAmssEscalationInput>
                        <ns2:Gcc-UCorporateSrAmssEscalation-IoRepresentation>
                            <ns2:AMSSTaskType>
                                <xsl:value-of select="$Start/CreateMalwareTask/EscalationActivityInput/IoRepresetation/AMSSTaskType"/>
                            </ns2:AMSSTaskType>
                            <ns2:Description>
                                <xsl:value-of select="$Start/CreateMalwareTask/EscalationActivityInput/IoRepresetation/Description"/>
                            </ns2:Description>
                            <ns2:FileLocation>
                                <xsl:value-of select="$Start/CreateMalwareTask/ArchFileLocation"/>
                            </ns2:FileLocation>
                            <xsl:if test="$Start/CreateMalwareTask/EscalationActivityInput/IoRepresetation/NeuronId">
                                <ns2:NeuronId>
                                    <xsl:value-of select="$Start/CreateMalwareTask/EscalationActivityInput/IoRepresetation/NeuronId"/>
                                </ns2:NeuronId>
                            </xsl:if>
                            <ns2:OriginalFileName>
                                <xsl:value-of select="$Start/CreateMalwareTask/ArchFileName"/>
                            </ns2:OriginalFileName>
                            <ns2:SHA1>
                                <xsl:value-of select="$Start/CreateMalwareTask/ArchFileSHA1"/>
                            </ns2:SHA1>
                            <ns2:Source>
                                <xsl:value-of select="'GCCU'"/>
                            </ns2:Source>
                            <ns2:Title>
                                <xsl:value-of select="$Start/CreateMalwareTask/EscalationActivityInput/IoRepresetation/Title"/>
                            </ns2:Title>
                            <ns2:Type>
                                <xsl:value-of select="$Start/CreateMalwareTask/EscalationActivityInput/IoRepresetation/Type"/>
                            </ns2:Type>
                        </ns2:Gcc-UCorporateSrAmssEscalation-IoRepresentation>
                    </ns2:ListOfGcc-UCorporateSrAmssEscalationInput>
                    <ns3:sSRNumber>
                        <xsl:value-of select="$Start/CreateMalwareTask/EscalationActivityInput/sSRNumber"/>
                    </ns3:sSRNumber>
                    <ns3:sIntegrationSource>
                        <xsl:value-of select="'AMSS'"/>
                    </ns3:sIntegrationSource>
                </ns3:GCC-U_spcAMSS_spcEscalation_spcWS_CreateAMSSEscRec_Input>
            </GCCEscalation>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="CreateEscalationActivity">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:description>Create Esc Activity.
If it is new task, the parent task id is the same with task id.</pd:description>
        <pd:x>762</pd:x>
        <pd:y>71</pd:y>
        <config>
            <processName>/Services/SharedOperations/CreateGCCEscalationActivity.process</processName>
        </config>
        <pd:inputBindings>
            <GCCEscalation>
                <MessageHeader>
                    <ns0:MessageKey>
                        <xsl:value-of select="$Start/CreateMalwareTask/MessageKey"/>
                    </ns0:MessageKey>
                    <ns0:ServiceName>
                        <xsl:value-of select="&quot;CreateEscalationActivity&quot;"/>
                    </ns0:ServiceName>
                    <ns0:ServiceVersion>
                        <xsl:value-of select="'V1.0'"/>
                    </ns0:ServiceVersion>
                    <ns0:SourceID>
                        <xsl:value-of select="$Start/CreateMalwareTask/SourceID"/>
                    </ns0:SourceID>
                </MessageHeader>
                <ns3:GCC-U_spcAMSS_spcEscalation_spcWS_CreateAMSSEscRec_Input>
                    <ns2:ListOfGcc-UCorporateSrAmssEscalationInput>
                        <xsl:for-each select="$totalLaterUsage/AccumulatedOutput/laterUsage">
                            <ns2:Gcc-UCorporateSrAmssEscalation-IoRepresentation>
                                <ns2:AMSSTaskId>
                                    <xsl:value-of select="TaskID"/>
                                </ns2:AMSSTaskId>
                                <ns2:AMSSTaskType>
                                    <xsl:value-of select="$Start/CreateMalwareTask/EscalationActivityInput/IoRepresetation/AMSSTaskType"/>
                                </ns2:AMSSTaskType>
                                <ns2:Description>
                                    <xsl:value-of select="$Start/CreateMalwareTask/EscalationActivityInput/IoRepresetation/Description"/>
                                </ns2:Description>
                                <ns2:FileLocation>
                                    <xsl:value-of select="FileLocation"/>
                                </ns2:FileLocation>
                                <ns2:IntegrationSourceId>
                                    <xsl:value-of select="FileID"/>
                                </ns2:IntegrationSourceId>
                                <xsl:if test="$Start/CreateMalwareTask/EscalationActivityInput/IoRepresetation/NeuronId">
                                    <ns2:NeuronId>
                                        <xsl:value-of select="$Start/CreateMalwareTask/EscalationActivityInput/IoRepresetation/NeuronId"/>
                                    </ns2:NeuronId>
                                </xsl:if>
                                <ns2:OriginalFileName>
                                    <xsl:value-of select="OriginalFileName"/>
                                </ns2:OriginalFileName>
                                <ns2:SHA1>
                                    <xsl:value-of select="SHA1"/>
                                </ns2:SHA1>
                                <ns2:Source>
                                    <xsl:value-of select="'GCCU'"/>
                                </ns2:Source>
                                <ns2:Title>
                                    <xsl:value-of select="$Start/CreateMalwareTask/EscalationActivityInput/IoRepresetation/Title"/>
                                </ns2:Title>
                                <xsl:choose>
                                    <xsl:when test="$Start/CreateMalwareTask/MalwareTask/File[1]/FileName='' and $Start/CreateMalwareTask/MalwareTask/File[1]/FileSize=0 and &#xA;$Start/CreateMalwareTask/EscalationActivityInput/IoRepresetation/AMSSTaskType !='Virus Report L1'">
                                        <ns2:Type>
                                            <xsl:value-of select="'Outbound to AMSS'"/>
                                        </ns2:Type>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <ns2:Type>
                                            <xsl:value-of select="'AMSS Task Created'"/>
                                        </ns2:Type>
                                    </xsl:otherwise>
                                </xsl:choose>
                                <xsl:choose>
                                    <xsl:when test="exists($Start/CreateMalwareTask/AMSSInboundTaskInput/ParentTaskID) and $Start/CreateMalwareTask/AMSSInboundTaskInput/ParentTaskID !=''">
                                        <ns2:AMSSParentTaskId>
                                            <xsl:value-of select="$Start/CreateMalwareTask/AMSSInboundTaskInput/ParentTaskID"/>
                                        </ns2:AMSSParentTaskId>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <ns2:AMSSParentTaskId>
                                            <xsl:value-of select="TaskID"/>
                                        </ns2:AMSSParentTaskId>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </ns2:Gcc-UCorporateSrAmssEscalation-IoRepresentation>
                        </xsl:for-each>
                    </ns2:ListOfGcc-UCorporateSrAmssEscalationInput>
                    <ns3:sSRNumber>
                        <xsl:value-of select="$Start/CreateMalwareTask/EscalationActivityInput/sSRNumber"/>
                    </ns3:sSRNumber>
                    <ns3:sIntegrationSource>
                        <xsl:value-of select="'AMSS'"/>
                    </ns3:sIntegrationSource>
                </ns3:GCC-U_spcAMSS_spcEscalation_spcWS_CreateAMSSEscRec_Input>
            </GCCEscalation>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse Escalation Return">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>764</pd:x>
        <pd:y>263</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term>
                <xsd:element name="PropertySet">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="GCC-UCorporateSRAMSSEscalation-IORepresentation" minOccurs="0" maxOccurs="unbounded">
                                <xsd:complexType>
                                    <xsd:sequence/>
                                    <xsd:attribute name="IntegrationSourceId" type="xsd:string" use="required"/>
                                    <xsd:attribute name="AMSSEscalationRecordId" type="xsd:string" use="required"/>
                                    <xsd:attribute name="DetailResultMessage" type="xsd:string" use="required"/>
                                    <xsd:attribute name="DetailResult" type="xsd:string" use="required"/>
                                </xsd:complexType>
                            </xsd:element>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </term>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$CreateEscalationActivity/ns3:GCC-U_spcAMSS_spcEscalation_spcWS_CreateAMSSEscRec_Output/GCC-U_spcAMSS_spcEscalation_spcWS_CreateAMSSEscRec_Output/ns3:GCC-U_spcAMSS_spcEscalation_spcWS_CreateAMSSEscRec_Output/ns3:sDetailResultXMLString"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Update MalwareTask">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>906</pd:x>
        <pd:y>253</pd:y>
        <config>
            <processName>/Services/SharedOperations/UpdateMalwareTask.process</processName>
        </config>
        <pd:inputBindings>
            <pfx2:UpdateMalwareTask>
                <pfx2:PortalSourceID>
                    <xsl:value-of select="$Start/CreateMalwareTask/UpdateMalwareTaskInput/PortalSourceID"/>
                </pfx2:PortalSourceID>
                <pfx2:SRNumber>
                    <xsl:value-of select="$Start/CreateMalwareTask/UpdateMalwareTaskInput/SRNumber"/>
                </pfx2:SRNumber>
                <pfx2:ActivityRowID>
                    <xsl:value-of select="$Start/CreateMalwareTask/UpdateMalwareTaskInput/ActivityRowID"/>
                </pfx2:ActivityRowID>
                <pfx2:TaskResult>
                    <xsl:for-each select="$Parse-Escalation-Return/PropertySet/GCC-UCorporateSRAMSSEscalation-IORepresentation">
                        <xsl:variable name="index" select="position()"/>
                        <pfx2:MalwareTaskResult>
                            <xsl:if test="$totalLaterUsage/AccumulatedOutput/laterUsage[$index]/FileID">
                                <pfx2:ID>
                                    <xsl:value-of select="$totalLaterUsage/AccumulatedOutput/laterUsage[$index]/FileID"/>
                                </pfx2:ID>
                            </xsl:if>
                            <pfx2:TaskID>
                                <xsl:value-of select="$totalLaterUsage/AccumulatedOutput/laterUsage[$index]/TaskID"/>
                            </pfx2:TaskID>
                            <pfx2:EscActivityRowID>
                                <xsl:value-of select="@AMSSEscalationRecordId"/>
                            </pfx2:EscActivityRowID>
                            <pfx2:Status>
                                <xsl:value-of select="@DetailResult"/>
                            </pfx2:Status>
                            <pfx2:Message>
                                <xsl:value-of select="@DetailResultMessage"/>
                            </pfx2:Message>
                        </pfx2:MalwareTaskResult>
                    </xsl:for-each>
                </pfx2:TaskResult>
            </pfx2:UpdateMalwareTask>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse Escalation File">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>361</pd:x>
        <pd:y>422</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term>
                <xsd:element name="PropertySet">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="GCC-UCorporateSRAMSSEscalation-IORepresentation" minOccurs="0" maxOccurs="unbounded">
                                <xsd:complexType>
                                    <xsd:sequence/>
                                    <xsd:attribute name="IntegrationSourceId" type="xsd:string" use="required"/>
                                    <xsd:attribute name="AMSSEscalationRecordId" type="xsd:string" use="required"/>
                                    <xsd:attribute name="DetailResultMessage" type="xsd:string" use="required"/>
                                    <xsd:attribute name="DetailResult" type="xsd:string" use="required"/>
                                </xsd:complexType>
                            </xsd:element>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </term>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Create1stEscalationActivity/ns3:GCC-U_spcAMSS_spcEscalation_spcWS_CreateAMSSEscRec_Output/GCC-U_spcAMSS_spcEscalation_spcWS_CreateAMSSEscRec_Output/ns3:GCC-U_spcAMSS_spcEscalation_spcWS_CreateAMSSEscRec_Output/ns3:sDetailResultXMLString"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Update MalwareTask No AMSS">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1007</pd:x>
        <pd:y>419</pd:y>
        <config>
            <processName>/Services/SharedOperations/UpdateMalwareTask.process</processName>
        </config>
        <pd:inputBindings>
            <pfx2:UpdateMalwareTask>
                <pfx2:PortalSourceID>
                    <xsl:value-of select="$Start/CreateMalwareTask/UpdateMalwareTaskInput/PortalSourceID"/>
                </pfx2:PortalSourceID>
                <pfx2:SRNumber>
                    <xsl:value-of select="$Start/CreateMalwareTask/UpdateMalwareTaskInput/SRNumber"/>
                </pfx2:SRNumber>
                <pfx2:ActivityRowID>
                    <xsl:value-of select="$Start/CreateMalwareTask/UpdateMalwareTaskInput/ActivityRowID"/>
                </pfx2:ActivityRowID>
                <pfx2:TaskResult>
                    <pfx2:MalwareTaskResult>
                        <pfx2:EscActivityRowID>
                            <xsl:value-of select="$Parse-Escalation-File/PropertySet/GCC-UCorporateSRAMSSEscalation-IORepresentation[1]/@AMSSEscalationRecordId"/>
                        </pfx2:EscActivityRowID>
                        <pfx2:Status>
                            <xsl:value-of select="$Parse-Escalation-File/PropertySet/GCC-UCorporateSRAMSSEscalation-IORepresentation[1]/@DetailResult"/>
                        </pfx2:Status>
                        <pfx2:Message>
                            <xsl:value-of select="$Parse-Escalation-File/PropertySet/GCC-UCorporateSRAMSSEscalation-IORepresentation[1]/@DetailResultMessage"/>
                        </pfx2:Message>
                    </pfx2:MalwareTaskResult>
                </pfx2:TaskResult>
            </pfx2:UpdateMalwareTask>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Create1stEscalationActivity</pd:to>
        <pd:xpathDescription>File Upload</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Start/CreateMalwareTask/EscalationActivityInput/IoRepresetation/Type ='Virus File Uploaded' or $Start/CreateMalwareTask/EscalationActivityInput/IoRepresetation/Type ='Supporting File Uploaded'
or$Start/CreateMalwareTask/EscalationActivityInput/IoRepresetation/Type ='File Uploaded'</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Group (1)</pd:from>
        <pd:to>CreateEscalationActivity</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Update MalwareTask</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CreateEscalationActivity</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CreateEscalationActivity</pd:from>
        <pd:to>Parse Escalation Return</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse Escalation Return</pd:from>
        <pd:to>Update MalwareTask</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Create1stEscalationActivity</pd:from>
        <pd:to>Group (1)</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Group (1)</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Create1stEscalationActivity</pd:from>
        <pd:to>Parse Escalation File</pd:to>
        <pd:xpathDescription>Not Create AMSS</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Start/CreateMalwareTask/EscalationActivityInput/IoRepresetation/Type ='File Uploaded' and $Start/CreateMalwareTask/OpenAMSSFlag='N'</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse Escalation File</pd:from>
        <pd:to>Update MalwareTask No AMSS</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Update MalwareTask No AMSS</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>
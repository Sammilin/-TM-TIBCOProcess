<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:ns="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:TM="java://com.trendmicro.TMBWUtilities" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx3="http://schemas.xmlsoap.org/soap/envelope/" xmlns:pfx2="http://www.trendmicro.com/ESB/MDM/schemas/SMF/callFuzzy_Input" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns14="http://soap.sforce.com/schemas/class/PRMEU_SyncAccountWebService" xmlns:ns15="http://www.trendmicro.com/ESB/MDM/schemas/SMF/UpdateSfCust_Output" xmlns:ns9="http://www.trendmicro.com/ESB/schemas/SMF" xmlns:ns12="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns5="http://www.trendmicro.com/ESB/schemas/Common" xmlns:ns13="http://www.trendmicro.com/ESB/schemas/MDM/SFDC/Customer" xmlns:ns6="http://www.trendmicro.com/ESB/schemas/error" xmlns:pfx="http://www.trendmicro.com/ESB/ACS/schemas/SMF" xmlns:ns7="http://www.trendmicro.com/ESB/MDM/schemas/SMF/CreateSfCust_Input" xmlns:ns10="http://www.trendmicro.com/ESB/MDM/schemas/SMF/CreateSfCust_Output" xmlns:ns8="http://www.trendmicro.com/ESB/MDM/schemas/SMF/ActSfCust_Input" xmlns:ns11="http://www.trendmicro.com/ESB/MDM/schemas/SMF/CommonOutput" xmlns:ns2="http://tempuri.org/" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns1="http://www.trendmicro.com/ESB/FRS/schemas/SMF" xmlns:ns4="http://www.trendmicro.com/ESB/MDM/schemas/SMF/callFuzzy_Output" xmlns:ns3="http://www.tibco.com/pe/EngineTypes" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <xsd:import namespace="http://www.trendmicro.com/ESB/ACS/schemas/SMF" schemaLocation="/XSD/Common/ACSMessage.xsd"/>
    <xsd:import namespace="http://schemas.xmlsoap.org/soap/envelope/" schemaLocation="/XSD/Common/soap.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/MDM/schemas/SMF/callFuzzy_Output" schemaLocation="/WSDL/Provider/SearchCustomer_Output.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/MDM/schemas/SMF/callFuzzy_Input" schemaLocation="/WSDL/Provider/MDMService/SearchCustomer_Input.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/MDM/schemas/SMF/ActSfCust_Input" schemaLocation="/WSDL/Provider/SFDC/ActSfCust_Input.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/MDM/schemas/SMF/CreateSfCust_Output" schemaLocation="/WSDL/Provider/SFDC/CreateSfCust_Output.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/MDM/schemas/SMF/CommonOutput" schemaLocation="/WSDL/Provider/CommonOutput.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/schemas/error" schemaLocation="/XSD/Common/error.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/MDM/schemas/SMF/CreateSfCust_Input" schemaLocation="/WSDL/Provider/SFDC/CreateSfCust_Input.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/schemas/SMF" schemaLocation="/XSD/Common/SMF.xsd"/>
    <pd:name>Services/CreateSfCust/V1.0/Main.process</pd:name>
    <pd:startName>JMS Queue Receiver</pd:startName>
    <pd:startX>0</pd:startX>
    <pd:startY>0</pd:startY>
    <pd:returnBindings/>
    <pd:starter name="JMS Queue Receiver">
        <pd:type>com.tibco.plugin.jms.JMSQueueEventSource</pd:type>
        <pd:resourceType>ae.activities.JMSQueueEventSource</pd:resourceType>
        <pd:x>103</pd:x>
        <pd:y>68</pd:y>
        <config>
            <PermittedMessageType>Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
                <destination>%%Services/CreateSfCust/V1.0/DestinationQueue%%</destination>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/Resources/JMS/JMS Connection.sharedjmscon</ConnectionReference>
            <ApplicationProperties>/Resources/JMS/JMS Application Properties.sharedjmsapp</ApplicationProperties>
        </config>
        <pd:inputBindings/>
    </pd:starter>
    <pd:endName>End</pd:endName>
    <pd:endX>1192</pd:endX>
    <pd:endY>343</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables>
        <Variable0>
            <xsd:element name="root">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="GUID" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
        </Variable0>
    </pd:processVariables>
    <pd:targetNamespace>http://xmlns.example.com/1334229875067</pd:targetNamespace>
    <pd:activity name="Parse XML">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>249</pd:x>
        <pd:y>68</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx3:Envelope"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$JMS-Queue-Receiver/ns:ActivityOutput/Body"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>918</pd:x>
        <pd:y>511</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Error Handling">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1055</pd:x>
        <pd:y>513</pd:y>
        <config>
            <processName>/Services/SharedServices/Error Handling Process.process</processName>
        </config>
        <pd:coercions>
            <pd:coercion xpath="$_error/ns3:ErrorReport/Data/*" element="ns6:Error"/>
            <pd:coercion xpath="$Parse-XML/pfx3:Envelope/pfx3:Body/*" element="ns7:SMF"/>
        </pd:coercions>
        <pd:inputBindings>
            <group>
                <xsl:choose>
                    <xsl:when test="exists($_error_Parse-XML/ActivityErrors)">
                        <pfx:SMFHeader>
                            <ns5:MessageKey>
                                <xsl:value-of select="$Variable0/root/GUID"/>
                            </ns5:MessageKey>
                            <ns5:ServiceName>
                                <xsl:value-of select="&quot;CreateSfCust&quot;"/>
                            </ns5:ServiceName>
                            <ns5:ServiceVersion>
                                <xsl:value-of select="&quot;V1.0&quot;"/>
                            </ns5:ServiceVersion>
                            <ns5:SourceID>
                                <xsl:value-of select="&quot;N/A&quot;"/>
                            </ns5:SourceID>
                            <ns5:SourceIP>
                                <xsl:value-of select="&quot;N/A&quot;"/>
                            </ns5:SourceIP>
                            <ns5:RsTimestamp>
                                <xsl:value-of select="current-dateTime()"/>
                            </ns5:RsTimestamp>
                        </pfx:SMFHeader>
                    </xsl:when>
                    <xsl:otherwise>
                        <pfx:SMFHeader>
                            <ns5:MessageKey>
                                <xsl:value-of select="$Variable0/root/GUID"/>
                            </ns5:MessageKey>
                            <ns5:ServiceName>
                                <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF[1]/ns7:SMFHeader/ns5:ServiceName"/>
                            </ns5:ServiceName>
                            <ns5:ServiceVersion>
                                <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF[1]/ns7:SMFHeader/ns5:ServiceVersion"/>
                            </ns5:ServiceVersion>
                            <ns5:SourceID>
                                <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF[1]/ns7:SMFHeader/ns5:SourceID"/>
                            </ns5:SourceID>
                            <ns5:SourceIP>
                                <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF[1]/ns7:SMFHeader/ns5:SourceIP"/>
                            </ns5:SourceIP>
                            <ns5:RqTimestamp>
                                <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF[1]/ns7:SMFHeader/ns5:RqTimestamp"/>
                            </ns5:RqTimestamp>
                            <ns5:RsTimestamp>
                                <xsl:value-of select="current-dateTime()"/>
                            </ns5:RsTimestamp>
                        </pfx:SMFHeader>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="exists($_error/ns3:ErrorReport/Data/ns6:Error) and empty($_error/ns3:ErrorReport/Data/ns6:Error)=&quot;false&quot;">
                        <xsl:copy-of select="$_error/ns3:ErrorReport/Data/ns6:Error"/>
                    </xsl:when>
                    <xsl:otherwise>
                        <ns6:Error>
                            <ns6:src>
                                <xsl:value-of select="$_error/ns3:ErrorReport/ProcessStack"/>
                            </ns6:src>
                            <ns6:error_code>
                                <xsl:value-of select="$_error/ns3:ErrorReport/MsgCode"/>
                            </ns6:error_code>
                            <ns6:error_message>
                                <xsl:value-of select="$_error/ns3:ErrorReport/Msg"/>
                            </ns6:error_message>
                            <ns6:stack_trace>
                                <xsl:value-of select="$_error/ns3:ErrorReport/StackTrace"/>
                            </ns6:stack_trace>
                        </ns6:Error>
                    </xsl:otherwise>
                </xsl:choose>
                <Source>
                    <xsl:value-of select="$JMS-Queue-Receiver/ns:ActivityOutput/Body"/>
                </Source>
                <Retry>
                    <xsl:value-of select="0"/>
                </Retry>
            </group>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Reply to JMS Message">
        <pd:type>com.tibco.plugin.jms.JMSReplyActivity</pd:type>
        <pd:resourceType>ae.activities.JMSReplyActivity</pd:resourceType>
        <pd:x>1041</pd:x>
        <pd:y>352</pd:y>
        <config>
            <PermittedMessageType>Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
                <EventSource>JMS Queue Receiver</EventSource>
            </ConfigurableHeaders>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <Body>
                    <xsl:value-of select="$Render-XML/xmlString"/>
                </Body>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Reply Error to JMS Message">
        <pd:type>com.tibco.plugin.jms.JMSReplyActivity</pd:type>
        <pd:resourceType>ae.activities.JMSReplyActivity</pd:resourceType>
        <pd:x>1197</pd:x>
        <pd:y>519</pd:y>
        <config>
            <PermittedMessageType>XML Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
                <EventSource>JMS Queue Receiver</EventSource>
            </ConfigurableHeaders>
            <InDataxsdString ref="pfx3:Envelope"/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <Body>
                    <pfx3:Envelope>
                        <pfx3:Body>
                            <xsl:choose>
                                <xsl:when test="exists($_error_Parse-XML/ActivityErrors)">
                                    <ns10:SMF>
                                        <ns10:SMFHeader>
                                            <ns5:MessageKey>
                                                <xsl:value-of select="&quot;SFDC  Parsing Error&quot;"/>
                                            </ns5:MessageKey>
                                            <ns5:ServiceName>
                                                <xsl:value-of select="&quot;CreateSfCust&quot;"/>
                                            </ns5:ServiceName>
                                            <ns5:ServiceVersion>
                                                <xsl:value-of select="&quot;V1.0&quot;"/>
                                            </ns5:ServiceVersion>
                                            <ns5:SourceID>
                                                <xsl:value-of select="&quot;N/A&quot;"/>
                                            </ns5:SourceID>
                                            <ns5:SourceIP>
                                                <xsl:value-of select="&quot;N/A&quot;"/>
                                            </ns5:SourceIP>
                                            <ns5:RsTimestamp>
                                                <xsl:value-of select="current-dateTime()"/>
                                            </ns5:RsTimestamp>
                                        </ns10:SMFHeader>
                                        <ns10:SMFBody>
                                            <ns11:ProcessStatus>
                                                <xsl:value-of select="&quot;F&quot;"/>
                                            </ns11:ProcessStatus>
                                            <ns11:ErrorMessage>
                                                <xsl:value-of select="&quot;E02 Request Message XML Format Error.&quot;"/>
                                            </ns11:ErrorMessage>
                                        </ns10:SMFBody>
                                    </ns10:SMF>
                                </xsl:when>
                                <xsl:otherwise>
                                    <ns10:SMF>
                                        <ns10:SMFHeader>
                                            <ns5:MessageKey>
                                                <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF[1]/ns7:SMFHeader/ns5:MessageKey"/>
                                            </ns5:MessageKey>
                                            <ns5:ServiceName>
                                                <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF[1]/ns7:SMFHeader/ns5:ServiceName"/>
                                            </ns5:ServiceName>
                                            <ns5:ServiceVersion>
                                                <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF[1]/ns7:SMFHeader/ns5:ServiceVersion"/>
                                            </ns5:ServiceVersion>
                                            <ns5:SourceID>
                                                <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF[1]/ns7:SMFHeader/ns5:SourceID"/>
                                            </ns5:SourceID>
                                            <ns5:SourceIP>
                                                <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF[1]/ns7:SMFHeader/ns5:SourceIP"/>
                                            </ns5:SourceIP>
                                            <ns5:RqTimestamp>
                                                <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF[1]/ns7:SMFHeader/ns5:RqTimestamp"/>
                                            </ns5:RqTimestamp>
                                            <ns5:RsTimestamp>
                                                <xsl:value-of select="current-dateTime()"/>
                                            </ns5:RsTimestamp>
                                        </ns10:SMFHeader>
                                        <ns10:SMFBody>
                                            <ns11:ProcessStatus>
                                                <xsl:value-of select="&quot;F&quot;"/>
                                            </ns11:ProcessStatus>
                                            <ns11:ErrorMessage>
                                                <xsl:value-of select="&quot;E99 BW General Error.&quot;"/>
                                            </ns11:ErrorMessage>
                                        </ns10:SMFBody>
                                    </ns10:SMF>
                                </xsl:otherwise>
                            </xsl:choose>
                        </pfx3:Body>
                    </pfx3:Envelope>
                </Body>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:group name="Group">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>61</pd:x>
        <pd:y>142</pd:y>
        <pd:width>765</pd:width>
        <pd:height>412</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>inputLoop</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:over>$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF/ns7:SMFBody</pd:over>
            <pd:iterationElementSlot>cu</pd:iterationElementSlot>
            <pd:indexSlot>i</pd:indexSlot>
            <pd:outSlot>TotalOutput</pd:outSlot>
            <pd:activityOutputName>Map Data</pd:activityOutputName>
            <pd:accumulateOutput>true</pd:accumulateOutput>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Assign</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>JMS Queue Sender (Update Sf MDM_ID)</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Logging Output Message</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>MDM_CreateCustomer</pd:from>
            <pd:to>Map Data</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>MDM_UpdateCustomer</pd:from>
            <pd:to>Map Data</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Logging Input Message</pd:from>
            <pd:to>MDM_CreateCustomer</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Logging Input Message</pd:from>
            <pd:to>MDM_UpdateCustomer</pd:to>
            <pd:xpathDescription>Exists MDM_ID</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>exists($Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF/ns7:SMFBody[$i]/ns13:MdmPartnerId) and
tib:trim($Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF/ns7:SMFBody[$i]/ns13:MdmPartnerId) !=""</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>Map Data</pd:from>
            <pd:to>Logging Output Message</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>MDM_CreateCustomer</pd:from>
            <pd:to>Map-Data-1</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-3407821</pd:lineColor>
            <pd:conditionType>error</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>MDM_UpdateCustomer</pd:from>
            <pd:to>Map-Data-1</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-65485</pd:lineColor>
            <pd:conditionType>error</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Map-Data-1</pd:from>
            <pd:to>Error-Handling-1</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Error-Handling-1</pd:from>
            <pd:to>Map Data</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Assign</pd:from>
            <pd:to>Logging Input Message</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Logging Output Message</pd:from>
            <pd:to>JMS Queue Sender (Update Sf MDM_ID)</pd:to>
            <pd:xpathDescription>success</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>$Map-Data/root/ErrorFlag="false"</pd:xpath>
        </pd:transition>
        <pd:activity name="MDM_CreateCustomer">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>311</pd:x>
            <pd:y>222</pd:y>
            <config>
                <processName>/Services/CreateSfCust/V1.0/ExecuteRequest.process</processName>
                <processNameXPath/>
                <customId/>
            </config>
            <pd:inputBindings>
                <ns9:SMF>
                    <xsl:for-each select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF/ns7:SMFHeader">
                        <ns9:SMFHeader>
                            <ns5:MessageKey>
                                <xsl:value-of select="$Variable0/root/GUID"/>
                            </ns5:MessageKey>
                            <ns5:ServiceName>
                                <xsl:value-of select="&quot;CreateSfCust&quot;"/>
                            </ns5:ServiceName>
                            <ns5:ServiceVersion>
                                <xsl:value-of select="ns5:ServiceVersion"/>
                            </ns5:ServiceVersion>
                            <ns5:SourceID>
                                <xsl:value-of select="ns5:SourceID"/>
                            </ns5:SourceID>
                            <xsl:if test="ns5:SourceIP">
                                <ns5:SourceIP>
                                    <xsl:value-of select="ns5:SourceIP"/>
                                </ns5:SourceIP>
                            </xsl:if>
                            <xsl:if test="ns5:RqTimestamp">
                                <ns5:RqTimestamp>
                                    <xsl:value-of select="ns5:RqTimestamp"/>
                                </ns5:RqTimestamp>
                            </xsl:if>
                            <xsl:if test="ns5:RsTimestamp">
                                <ns5:RsTimestamp>
                                    <xsl:value-of select="ns5:RsTimestamp"/>
                                </ns5:RsTimestamp>
                            </xsl:if>
                        </ns9:SMFHeader>
                    </xsl:for-each>
                    <ns9:SMFBody>
                        <ns9:SFDC>
                            <xsl:for-each select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF/ns7:SMFBody[$i]">
                                <ns9:Customer>
                                    <ns13:SfdcPartnerId>
                                        <xsl:value-of select="ns13:SfdcPartnerId"/>
                                    </ns13:SfdcPartnerId>
                                    <xsl:if test="ns13:MdmPartnerId">
                                        <ns13:MdmPartnerId>
                                            <xsl:copy-of select="ns13:MdmPartnerId/@xsi:nil"/>
                                            <xsl:value-of select="ns13:MdmPartnerId"/>
                                        </ns13:MdmPartnerId>
                                    </xsl:if>
                                    <ns13:Active>
                                        <xsl:value-of select="ns13:Active"/>
                                    </ns13:Active>
                                    <ns13:AccountName>
                                        <xsl:value-of select="ns13:AccountName"/>
                                    </ns13:AccountName>
                                    <ns13:AccountType>
                                        <xsl:value-of select="ns13:AccountType"/>
                                    </ns13:AccountType>
                                    <xsl:if test="ns13:AccountOtherType">
                                        <ns13:AccountOtherType>
                                            <xsl:value-of select="ns13:AccountOtherType"/>
                                        </ns13:AccountOtherType>
                                    </xsl:if>
                                    <xsl:if test="ns13:AccountStatus">
                                        <ns13:AccountStatus>
                                            <xsl:value-of select="ns13:AccountStatus"/>
                                        </ns13:AccountStatus>
                                    </xsl:if>
                                    <xsl:if test="ns13:AKA">
                                        <ns13:AKA>
                                            <xsl:value-of select="ns13:AKA"/>
                                        </ns13:AKA>
                                    </xsl:if>
                                    <xsl:if test="ns13:VatNumber">
                                        <ns13:VatNumber>
                                            <xsl:value-of select="ns13:VatNumber"/>
                                        </ns13:VatNumber>
                                    </xsl:if>
                                    <xsl:if test="ns13:MainPhoneNumber">
                                        <ns13:MainPhoneNumber>
                                            <xsl:value-of select="ns13:MainPhoneNumber"/>
                                        </ns13:MainPhoneNumber>
                                    </xsl:if>
                                    <xsl:if test="ns13:Fax">
                                        <ns13:Fax>
                                            <xsl:value-of select="ns13:Fax"/>
                                        </ns13:Fax>
                                    </xsl:if>
                                    <ns13:Country>
                                        <xsl:value-of select="ns13:Country"/>
                                    </ns13:Country>
                                    <xsl:if test="ns13:Website">
                                        <ns13:Website>
                                            <xsl:value-of select="ns13:Website"/>
                                        </ns13:Website>
                                    </xsl:if>
                                    <xsl:if test="ns13:EmailDomain">
                                        <ns13:EmailDomain>
                                            <xsl:value-of select="ns13:EmailDomain"/>
                                        </ns13:EmailDomain>
                                    </xsl:if>
                                    <xsl:if test="ns13:NavisionID">
                                        <ns13:NavisionID>
                                            <xsl:value-of select="ns13:NavisionID"/>
                                        </ns13:NavisionID>
                                    </xsl:if>
                                    <xsl:if test="ns13:DUNSName">
                                        <ns13:DUNSName>
                                            <xsl:value-of select="ns13:DUNSName"/>
                                        </ns13:DUNSName>
                                    </xsl:if>
                                    <xsl:if test="ns13:DUNS">
                                        <ns13:DUNS>
                                            <xsl:value-of select="ns13:DUNS"/>
                                        </ns13:DUNS>
                                    </xsl:if>
                                    <xsl:if test="ns13:DUNSDirectParent">
                                        <ns13:DUNSDirectParent>
                                            <xsl:value-of select="ns13:DUNSDirectParent"/>
                                        </ns13:DUNSDirectParent>
                                    </xsl:if>
                                    <xsl:if test="ns13:DUNSGlobalParent">
                                        <ns13:DUNSGlobalParent>
                                            <xsl:value-of select="ns13:DUNSGlobalParent"/>
                                        </ns13:DUNSGlobalParent>
                                    </xsl:if>
                                    <ns13:BillingCity>
                                        <xsl:value-of select="ns13:BillingCity"/>
                                    </ns13:BillingCity>
                                    <ns13:BillingCountry>
                                        <xsl:value-of select="ns13:BillingCountry"/>
                                    </ns13:BillingCountry>
                                    <ns13:BillingPostalCode>
                                        <xsl:value-of select="ns13:BillingPostalCode"/>
                                    </ns13:BillingPostalCode>
                                    <ns13:BillingState>
                                        <xsl:value-of select="ns13:BillingState"/>
                                    </ns13:BillingState>
                                    <ns13:BillingStreet>
                                        <xsl:value-of select="ns13:BillingStreet"/>
                                    </ns13:BillingStreet>
                                    <xsl:if test="ns13:ParentAccount">
                                        <ns13:ParentAccount>
                                            <xsl:value-of select="ns13:ParentAccount"/>
                                        </ns13:ParentAccount>
                                    </xsl:if>
                                    <ns13:PartnerTier>
                                        <xsl:value-of select="ns13:PartnerTier"/>
                                    </ns13:PartnerTier>
                                    <xsl:if test="ns13:MergedToSfdcPartnerId">
                                        <ns13:MergedToSfdcPartnerId>
                                            <xsl:value-of select="ns13:MergedToSfdcPartnerId"/>
                                        </ns13:MergedToSfdcPartnerId>
                                    </xsl:if>
                                    <ns13:recordType>
                                        <xsl:value-of select="ns13:recordType"/>
                                    </ns13:recordType>
                                </ns9:Customer>
                            </xsl:for-each>
                        </ns9:SFDC>
                    </ns9:SMFBody>
                </ns9:SMF>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="MDM_UpdateCustomer">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>316</pd:x>
            <pd:y>484</pd:y>
            <config>
                <processName>/Services/UpdateSfCust/V1.0/ExecuteRequest.process</processName>
            </config>
            <pd:inputBindings>
                <ns9:SMF>
                    <xsl:for-each select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF/ns7:SMFHeader">
                        <ns9:SMFHeader>
                            <ns5:MessageKey>
                                <xsl:value-of select="$Variable0/root/GUID"/>
                            </ns5:MessageKey>
                            <ns5:ServiceName>
                                <xsl:value-of select="&quot;UpdateSfCust&quot;"/>
                            </ns5:ServiceName>
                            <ns5:ServiceVersion>
                                <xsl:value-of select="ns5:ServiceVersion"/>
                            </ns5:ServiceVersion>
                            <ns5:SourceID>
                                <xsl:value-of select="ns5:SourceID"/>
                            </ns5:SourceID>
                            <xsl:if test="ns5:SourceIP">
                                <ns5:SourceIP>
                                    <xsl:value-of select="ns5:SourceIP"/>
                                </ns5:SourceIP>
                            </xsl:if>
                            <xsl:if test="ns5:RqTimestamp">
                                <ns5:RqTimestamp>
                                    <xsl:value-of select="ns5:RqTimestamp"/>
                                </ns5:RqTimestamp>
                            </xsl:if>
                        </ns9:SMFHeader>
                    </xsl:for-each>
                    <ns9:SMFBody>
                        <ns9:SFDC>
                            <xsl:for-each select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF/ns7:SMFBody[$i]">
                                <ns9:Customer>
                                    <ns13:SfdcPartnerId>
                                        <xsl:value-of select="ns13:SfdcPartnerId"/>
                                    </ns13:SfdcPartnerId>
                                    <xsl:if test="ns13:MdmPartnerId">
                                        <ns13:MdmPartnerId>
                                            <xsl:copy-of select="ns13:MdmPartnerId/@xsi:nil"/>
                                            <xsl:value-of select="ns13:MdmPartnerId"/>
                                        </ns13:MdmPartnerId>
                                    </xsl:if>
                                    <ns13:Active>
                                        <xsl:value-of select="ns13:Active"/>
                                    </ns13:Active>
                                    <ns13:AccountName>
                                        <xsl:value-of select="ns13:AccountName"/>
                                    </ns13:AccountName>
                                    <ns13:AccountType>
                                        <xsl:value-of select="ns13:AccountType"/>
                                    </ns13:AccountType>
                                    <xsl:if test="ns13:AccountOtherType">
                                        <ns13:AccountOtherType>
                                            <xsl:value-of select="ns13:AccountOtherType"/>
                                        </ns13:AccountOtherType>
                                    </xsl:if>
                                    <xsl:if test="ns13:AccountStatus">
                                        <ns13:AccountStatus>
                                            <xsl:value-of select="ns13:AccountStatus"/>
                                        </ns13:AccountStatus>
                                    </xsl:if>
                                    <xsl:if test="ns13:AKA">
                                        <ns13:AKA>
                                            <xsl:value-of select="ns13:AKA"/>
                                        </ns13:AKA>
                                    </xsl:if>
                                    <xsl:if test="ns13:VatNumber">
                                        <ns13:VatNumber>
                                            <xsl:value-of select="ns13:VatNumber"/>
                                        </ns13:VatNumber>
                                    </xsl:if>
                                    <xsl:if test="ns13:MainPhoneNumber">
                                        <ns13:MainPhoneNumber>
                                            <xsl:value-of select="ns13:MainPhoneNumber"/>
                                        </ns13:MainPhoneNumber>
                                    </xsl:if>
                                    <xsl:if test="ns13:Fax">
                                        <ns13:Fax>
                                            <xsl:value-of select="ns13:Fax"/>
                                        </ns13:Fax>
                                    </xsl:if>
                                    <ns13:Country>
                                        <xsl:value-of select="ns13:Country"/>
                                    </ns13:Country>
                                    <xsl:if test="ns13:Website">
                                        <ns13:Website>
                                            <xsl:value-of select="ns13:Website"/>
                                        </ns13:Website>
                                    </xsl:if>
                                    <xsl:if test="ns13:EmailDomain">
                                        <ns13:EmailDomain>
                                            <xsl:value-of select="ns13:EmailDomain"/>
                                        </ns13:EmailDomain>
                                    </xsl:if>
                                    <xsl:if test="ns13:NavisionID">
                                        <ns13:NavisionID>
                                            <xsl:value-of select="ns13:NavisionID"/>
                                        </ns13:NavisionID>
                                    </xsl:if>
                                    <xsl:if test="ns13:DUNSName">
                                        <ns13:DUNSName>
                                            <xsl:value-of select="ns13:DUNSName"/>
                                        </ns13:DUNSName>
                                    </xsl:if>
                                    <xsl:if test="ns13:DUNS">
                                        <ns13:DUNS>
                                            <xsl:value-of select="ns13:DUNS"/>
                                        </ns13:DUNS>
                                    </xsl:if>
                                    <xsl:if test="ns13:DUNSDirectParent">
                                        <ns13:DUNSDirectParent>
                                            <xsl:value-of select="ns13:DUNSDirectParent"/>
                                        </ns13:DUNSDirectParent>
                                    </xsl:if>
                                    <xsl:if test="ns13:DUNSGlobalParent">
                                        <ns13:DUNSGlobalParent>
                                            <xsl:value-of select="ns13:DUNSGlobalParent"/>
                                        </ns13:DUNSGlobalParent>
                                    </xsl:if>
                                    <ns13:BillingCity>
                                        <xsl:value-of select="ns13:BillingCity"/>
                                    </ns13:BillingCity>
                                    <ns13:BillingCountry>
                                        <xsl:value-of select="ns13:BillingCountry"/>
                                    </ns13:BillingCountry>
                                    <ns13:BillingPostalCode>
                                        <xsl:value-of select="ns13:BillingPostalCode"/>
                                    </ns13:BillingPostalCode>
                                    <ns13:BillingState>
                                        <xsl:value-of select="ns13:BillingState"/>
                                    </ns13:BillingState>
                                    <ns13:BillingStreet>
                                        <xsl:value-of select="ns13:BillingStreet"/>
                                    </ns13:BillingStreet>
                                    <xsl:if test="ns13:ParentAccount">
                                        <ns13:ParentAccount>
                                            <xsl:value-of select="ns13:ParentAccount"/>
                                        </ns13:ParentAccount>
                                    </xsl:if>
                                    <ns13:PartnerTier>
                                        <xsl:value-of select="ns13:PartnerTier"/>
                                    </ns13:PartnerTier>
                                    <xsl:if test="ns13:MergedToSfdcPartnerId">
                                        <ns13:MergedToSfdcPartnerId>
                                            <xsl:value-of select="ns13:MergedToSfdcPartnerId"/>
                                        </ns13:MergedToSfdcPartnerId>
                                    </xsl:if>
                                    <ns13:recordType>
                                        <xsl:value-of select="ns13:recordType"/>
                                    </ns13:recordType>
                                </ns9:Customer>
                            </xsl:for-each>
                        </ns9:SFDC>
                    </ns9:SMFBody>
                </ns9:SMF>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Map Data">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>569</pd:x>
            <pd:y>383</pd:y>
            <config>
                <element>
                    <xsd:element name="root">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="output" type="ns11:SFDCPartnerOutputType"/>
                                <xsd:element ref="ns6:Error" minOccurs="0"/>
                                <xsd:element name="ErrorFlag" type="xsd:boolean"/>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                </element>
            </config>
            <pd:inputBindings>
                <root>
                    <xsl:choose>
                        <xsl:when test="exists($Map-Data-1/root/ns6:Error)">
                            <xsl:copy-of select="$Map-Data-1/root/output"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:choose>
                                <xsl:when test="exists($MDM_CreateCustomer/ns10:SMF/ns10:SMFBody)">
                                    <output>
                                        <xsl:copy-of select="$MDM_CreateCustomer/ns10:SMF/ns10:SMFBody/ancestor-or-self::*/namespace::node()"/>
                                        <xsl:copy-of select="$MDM_CreateCustomer/ns10:SMF/ns10:SMFBody/@*"/>
                                        <xsl:copy-of select="$MDM_CreateCustomer/ns10:SMF/ns10:SMFBody/node()"/>
                                    </output>
                                </xsl:when>
                                <xsl:otherwise>
                                    <output>
                                        <xsl:copy-of select="$MDM_UpdateCustomer/ns15:SMF/ns15:SMFBody/ancestor-or-self::*/namespace::node()"/>
                                        <xsl:copy-of select="$MDM_UpdateCustomer/ns15:SMF/ns15:SMFBody/@*"/>
                                        <xsl:copy-of select="$MDM_UpdateCustomer/ns15:SMF/ns15:SMFBody/node()"/>
                                    </output>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:choose>
                        <xsl:when test="exists($Map-Data-1/root/ns6:Error)">
                            <xsl:copy-of select="$Map-Data-1/root/ns6:Error"/>
                            <ErrorFlag>
                                <xsl:value-of select="&quot;true&quot;"/>
                            </ErrorFlag>
                        </xsl:when>
                        <xsl:otherwise>
                            <ErrorFlag>
                                <xsl:value-of select="&quot;false&quot;"/>
                            </ErrorFlag>
                        </xsl:otherwise>
                    </xsl:choose>
                </root>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Logging Input Message">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>191</pd:x>
            <pd:y>370</pd:y>
            <config>
                <processName>/Services/SharedServices/MDM Logging Process.process</processName>
                <spawn>true</spawn>
            </config>
            <pd:coercions>
                <pd:coercion xpath="$Parse-XML/pfx3:Envelope/pfx3:Body/*" element="ns7:SMF" cardinality=""/>
            </pd:coercions>
            <pd:inputBindings>
                <group>
                    <MessageKey>
                        <xsl:value-of select="$Variable0/root/GUID"/>
                    </MessageKey>
                    <ServiceName>
                        <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF[$i]/ns7:SMFHeader/ns5:ServiceName"/>
                    </ServiceName>
                    <ServiceVersion>
                        <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF[$i]/ns7:SMFHeader/ns5:ServiceVersion"/>
                    </ServiceVersion>
                    <SourceID>
                        <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF[$i]/ns7:SMFHeader/ns5:SourceID"/>
                    </SourceID>
                    <SourceIP>
                        <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF[$i]/ns7:SMFHeader/ns5:SourceIP"/>
                    </SourceIP>
                    <RqTimestamp>
                        <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF[$i]/ns7:SMFHeader/ns5:RqTimestamp"/>
                    </RqTimestamp>
                    <RsTimestamp>
                        <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF[$i]/ns7:SMFHeader/ns5:RsTimestamp"/>
                    </RsTimestamp>
                    <MessageBody>
                        <xsl:value-of select="tib:render-xml($Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF/ns7:SMFBody[$i], 1)"/>
                    </MessageBody>
                    <errlog_flag>
                        <xsl:value-of select="&quot;N&quot;"/>
                    </errlog_flag>
                    <datasource>
                        <xsl:value-of select="&quot;SFDC&quot;"/>
                    </datasource>
                    <xsl:if test="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF/ns7:SMFBody[$i]/ns13:MdmPartnerId">
                        <gold_id>
                            <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF/ns7:SMFBody[$i]/ns13:MdmPartnerId"/>
                        </gold_id>
                    </xsl:if>
                    <source_company_id>
                        <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF/ns7:SMFBody[$i]/ns13:SfdcPartnerId"/>
                    </source_company_id>
                </group>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Logging Output Message">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>568</pd:x>
            <pd:y>249</pd:y>
            <config>
                <processName>/Services/SharedServices/MDM Logging Process.process</processName>
                <spawn>true</spawn>
            </config>
            <pd:inputBindings>
                <group>
                    <MessageKey>
                        <xsl:value-of select="$Variable0/root/GUID"/>
                    </MessageKey>
                    <ServiceName>
                        <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF/ns7:SMFHeader/ns5:ServiceName"/>
                    </ServiceName>
                    <ServiceVersion>
                        <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF/ns7:SMFHeader/ns5:ServiceVersion"/>
                    </ServiceVersion>
                    <SourceID>
                        <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF/ns7:SMFHeader/ns5:SourceID"/>
                    </SourceID>
                    <xsl:if test="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF/ns7:SMFHeader/ns5:SourceIP">
                        <SourceIP>
                            <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF/ns7:SMFHeader/ns5:SourceIP"/>
                        </SourceIP>
                    </xsl:if>
                    <xsl:if test="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF/ns7:SMFHeader/ns5:RqTimestamp">
                        <RqTimestamp>
                            <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF/ns7:SMFHeader/ns5:RqTimestamp"/>
                        </RqTimestamp>
                    </xsl:if>
                    <RsTimestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </RsTimestamp>
                    <MessageBody>
                        <xsl:value-of select="tib:render-xml($Map-Data/root/output, 1)"/>
                    </MessageBody>
                    <errlog_flag>
                        <xsl:value-of select="&quot;N&quot;"/>
                    </errlog_flag>
                    <datasource>
                        <xsl:value-of select="$MDM_CreateCustomer/ns10:SMF/ns10:SMFHeader/ns5:SourceID"/>
                    </datasource>
                    <gold_id>
                        <xsl:value-of select="$Map-Data/root/output/ns11:ExternalPartnerId"/>
                    </gold_id>
                    <source_company_id>
                        <xsl:value-of select="$Map-Data/root/output/ns11:SfdcPartnerId"/>
                    </source_company_id>
                </group>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Map-Data-1">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>314</pd:x>
            <pd:y>338</pd:y>
            <config>
                <element>
                    <xsd:element name="root">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="output" type="ns11:SFDCPartnerOutputType"/>
                                <xsd:element ref="ns6:Error" minOccurs="0"/>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                </element>
            </config>
            <pd:inputBindings>
                <root>
                    <output>
                        <ns11:ProcessStatus>
                            <xsl:value-of select="&quot;F&quot;"/>
                        </ns11:ProcessStatus>
                        <ns11:SfdcPartnerId>
                            <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF/ns7:SMFBody[$i]/ns13:SfdcPartnerId"/>
                        </ns11:SfdcPartnerId>
                        <xsl:if test="not(($Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF/ns7:SMFBody[$i]/ns13:MdmPartnerId/@xsi:nil=(&quot;true&quot;)) or ($Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF/ns7:SMFBody[$i]/ns13:MdmPartnerId/@xsi:nil=(&quot;1&quot;)))">
                            <ns11:ExternalPartnerId>
                                <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF/ns7:SMFBody[$i]/ns13:MdmPartnerId"/>
                            </ns11:ExternalPartnerId>
                        </xsl:if>
                        <ns11:ErrorMessage>
                            <xsl:value-of select="&quot;E99 BW General Error.&quot;"/>
                        </ns11:ErrorMessage>
                    </output>
                    <xsl:choose>
                        <xsl:when test="exists($_error_MDM_CreateCustomer)">
                            <xsl:copy-of select="$_error_MDM_CreateCustomer/ns6:Error"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:copy-of select="$_error_MDM_UpdateCustomer/ns6:Error"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </root>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Error-Handling-1">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>442</pd:x>
            <pd:y>363</pd:y>
            <config>
                <processName>/Services/SharedServices/Error Handling Process.process</processName>
            </config>
            <pd:coercions>
                <pd:coercion xpath="$_error/ns3:ErrorReport/Data/*" element="ns6:Error"/>
                <pd:coercion xpath="$Parse-XML/pfx3:Envelope/pfx3:Body/*" element="ns7:SMF"/>
            </pd:coercions>
            <pd:inputBindings>
                <group>
                    <pfx:SMFHeader>
                        <ns5:MessageKey>
                            <xsl:value-of select="$Variable0/root/GUID"/>
                        </ns5:MessageKey>
                        <ns5:ServiceName>
                            <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF[1]/ns7:SMFHeader/ns5:ServiceName"/>
                        </ns5:ServiceName>
                        <ns5:ServiceVersion>
                            <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF[1]/ns7:SMFHeader/ns5:ServiceVersion"/>
                        </ns5:ServiceVersion>
                        <ns5:SourceID>
                            <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF[1]/ns7:SMFHeader/ns5:SourceID"/>
                        </ns5:SourceID>
                        <ns5:SourceIP>
                            <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF[1]/ns7:SMFHeader/ns5:SourceIP"/>
                        </ns5:SourceIP>
                        <ns5:RqTimestamp>
                            <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF[1]/ns7:SMFHeader/ns5:RqTimestamp"/>
                        </ns5:RqTimestamp>
                        <ns5:RsTimestamp>
                            <xsl:value-of select="current-dateTime()"/>
                        </ns5:RsTimestamp>
                    </pfx:SMFHeader>
                    <xsl:copy-of select="$Map-Data-1/root/ns6:Error"/>
                    <Source>
                        <xsl:value-of select="$JMS-Queue-Receiver/ns:ActivityOutput/Body"/>
                    </Source>
                    <Retry>
                        <xsl:value-of select="0"/>
                    </Retry>
                </group>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Assign">
            <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
            <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
            <pd:x>129</pd:x>
            <pd:y>228</pd:y>
            <config>
                <variableName>Variable0</variableName>
            </config>
            <pd:inputBindings>
                <root>
                    <GUID>
                        <xsl:value-of select="TM:getGUID()"/>
                    </GUID>
                </root>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="JMS Queue Sender (Update Sf MDM_ID)">
            <pd:type>com.tibco.plugin.jms.JMSQueueSendActivity</pd:type>
            <pd:resourceType>ae.activities.JMSQueueSendActivity</pd:resourceType>
            <pd:x>695</pd:x>
            <pd:y>392</pd:y>
            <config>
                <PermittedMessageType>XML Text</PermittedMessageType>
                <SessionAttributes>
                    <transacted>false</transacted>
                    <acknowledgeMode>1</acknowledgeMode>
                    <maxSessions>1</maxSessions>
                    <destination>%%ExternalServices/SFDC/UpdateSfCustByMDMID/V1.0/DestinationQueue%%</destination>
                </SessionAttributes>
                <ConfigurableHeaders>
                    <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                    <JMSExpiration>0</JMSExpiration>
                    <JMSPriority>4</JMSPriority>
                </ConfigurableHeaders>
                <ConnectionReference>/Resources/JMS/JMS Connection.sharedjmscon</ConnectionReference>
                <InDataxsdString ref="ns9:SMF"/>
            </config>
            <pd:inputBindings>
                <ns:ActivityInput>
                    <Body>
                        <ns9:SMF>
                            <xsl:for-each select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF/ns7:SMFHeader">
                                <ns9:SMFHeader>
                                    <ns5:MessageKey>
                                        <xsl:value-of select="$Variable0/root/GUID"/>
                                    </ns5:MessageKey>
                                    <ns5:ServiceName>
                                        <xsl:value-of select="&quot;UpdateSfCustByMDMID&quot;"/>
                                    </ns5:ServiceName>
                                    <ns5:ServiceVersion>
                                        <xsl:value-of select="ns5:ServiceVersion"/>
                                    </ns5:ServiceVersion>
                                    <ns5:SourceID>
                                        <xsl:value-of select="ns5:SourceID"/>
                                    </ns5:SourceID>
                                    <xsl:if test="ns5:SourceIP">
                                        <ns5:SourceIP>
                                            <xsl:value-of select="ns5:SourceIP"/>
                                        </ns5:SourceIP>
                                    </xsl:if>
                                    <xsl:if test="ns5:RqTimestamp">
                                        <ns5:RqTimestamp>
                                            <xsl:value-of select="ns5:RqTimestamp"/>
                                        </ns5:RqTimestamp>
                                    </xsl:if>
                                </ns9:SMFHeader>
                            </xsl:for-each>
                            <ns9:SMFBody>
                                <ns9:SFDC>
                                    <xsl:for-each select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF/ns7:SMFBody[$i]">
                                        <ns9:Customer>
                                            <ns13:SfdcPartnerId>
                                                <xsl:value-of select="$Map-Data/root/output/ns11:SfdcPartnerId"/>
                                            </ns13:SfdcPartnerId>
                                            <ns13:MdmPartnerId>
                                                <xsl:choose>
                                                    <xsl:when test="exists($Map-Data/root/output/ns11:ExternalPartnerId)">
                                                        <xsl:value-of select="$Map-Data/root/output/ns11:ExternalPartnerId"/>
                                                    </xsl:when>
                                                    <xsl:otherwise>
                                                        <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                                    </xsl:otherwise>
                                                </xsl:choose>
                                            </ns13:MdmPartnerId>
                                            <ns13:Active>
                                                <xsl:value-of select="ns13:Active"/>
                                            </ns13:Active>
                                            <ns13:AccountName>
                                                <xsl:value-of select="ns13:AccountName"/>
                                            </ns13:AccountName>
                                            <ns13:AccountType>
                                                <xsl:value-of select="ns13:AccountType"/>
                                            </ns13:AccountType>
                                            <xsl:if test="ns13:AccountOtherType">
                                                <ns13:AccountOtherType>
                                                    <xsl:value-of select="ns13:AccountOtherType"/>
                                                </ns13:AccountOtherType>
                                            </xsl:if>
                                            <xsl:if test="ns13:AccountStatus">
                                                <ns13:AccountStatus>
                                                    <xsl:value-of select="ns13:AccountStatus"/>
                                                </ns13:AccountStatus>
                                            </xsl:if>
                                            <xsl:if test="ns13:AKA">
                                                <ns13:AKA>
                                                    <xsl:value-of select="ns13:AKA"/>
                                                </ns13:AKA>
                                            </xsl:if>
                                            <xsl:if test="ns13:VatNumber">
                                                <ns13:VatNumber>
                                                    <xsl:value-of select="ns13:VatNumber"/>
                                                </ns13:VatNumber>
                                            </xsl:if>
                                            <xsl:if test="ns13:MainPhoneNumber">
                                                <ns13:MainPhoneNumber>
                                                    <xsl:value-of select="ns13:MainPhoneNumber"/>
                                                </ns13:MainPhoneNumber>
                                            </xsl:if>
                                            <xsl:if test="ns13:Fax">
                                                <ns13:Fax>
                                                    <xsl:value-of select="ns13:Fax"/>
                                                </ns13:Fax>
                                            </xsl:if>
                                            <ns13:Country>
                                                <xsl:value-of select="ns13:Country"/>
                                            </ns13:Country>
                                            <xsl:if test="ns13:Website">
                                                <ns13:Website>
                                                    <xsl:value-of select="ns13:Website"/>
                                                </ns13:Website>
                                            </xsl:if>
                                            <xsl:if test="ns13:EmailDomain">
                                                <ns13:EmailDomain>
                                                    <xsl:value-of select="ns13:EmailDomain"/>
                                                </ns13:EmailDomain>
                                            </xsl:if>
                                            <xsl:if test="ns13:NavisionID">
                                                <ns13:NavisionID>
                                                    <xsl:value-of select="ns13:NavisionID"/>
                                                </ns13:NavisionID>
                                            </xsl:if>
                                            <xsl:if test="ns13:DUNSName">
                                                <ns13:DUNSName>
                                                    <xsl:value-of select="ns13:DUNSName"/>
                                                </ns13:DUNSName>
                                            </xsl:if>
                                            <xsl:if test="ns13:DUNS">
                                                <ns13:DUNS>
                                                    <xsl:value-of select="ns13:DUNS"/>
                                                </ns13:DUNS>
                                            </xsl:if>
                                            <xsl:if test="ns13:DUNSDirectParent">
                                                <ns13:DUNSDirectParent>
                                                    <xsl:value-of select="ns13:DUNSDirectParent"/>
                                                </ns13:DUNSDirectParent>
                                            </xsl:if>
                                            <xsl:if test="ns13:DUNSGlobalParent">
                                                <ns13:DUNSGlobalParent>
                                                    <xsl:value-of select="ns13:DUNSGlobalParent"/>
                                                </ns13:DUNSGlobalParent>
                                            </xsl:if>
                                            <ns13:BillingCity>
                                                <xsl:value-of select="ns13:BillingCity"/>
                                            </ns13:BillingCity>
                                            <ns13:BillingCountry>
                                                <xsl:value-of select="ns13:BillingCountry"/>
                                            </ns13:BillingCountry>
                                            <ns13:BillingPostalCode>
                                                <xsl:value-of select="ns13:BillingPostalCode"/>
                                            </ns13:BillingPostalCode>
                                            <ns13:BillingState>
                                                <xsl:value-of select="ns13:BillingState"/>
                                            </ns13:BillingState>
                                            <ns13:BillingStreet>
                                                <xsl:value-of select="ns13:BillingStreet"/>
                                            </ns13:BillingStreet>
                                            <xsl:if test="ns13:ParentAccount">
                                                <ns13:ParentAccount>
                                                    <xsl:value-of select="ns13:ParentAccount"/>
                                                </ns13:ParentAccount>
                                            </xsl:if>
                                            <ns13:PartnerTier>
                                                <xsl:value-of select="ns13:PartnerTier"/>
                                            </ns13:PartnerTier>
                                            <xsl:if test="ns13:MergedToSfdcPartnerId">
                                                <ns13:MergedToSfdcPartnerId>
                                                    <xsl:value-of select="ns13:MergedToSfdcPartnerId"/>
                                                </ns13:MergedToSfdcPartnerId>
                                            </xsl:if>
                                            <xsl:if test="ns13:recordType">
                                                <ns13:recordType>
                                                    <xsl:value-of select="ns13:recordType"/>
                                                </ns13:recordType>
                                            </xsl:if>
                                        </ns9:Customer>
                                    </xsl:for-each>
                                </ns9:SFDC>
                            </ns9:SMFBody>
                        </ns9:SMF>
                    </Body>
                </ns:ActivityInput>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="Render XML">
        <pd:type>com.tibco.plugin.xml.XMLRendererActivity</pd:type>
        <pd:resourceType>ae.activities.XMLRendererActivity</pd:resourceType>
        <pd:x>904</pd:x>
        <pd:y>343</pd:y>
        <config>
            <renderAsText>text</renderAsText>
            <validateInput>false</validateInput>
            <term ref="pfx3:Envelope"/>
        </config>
        <pd:inputBindings>
            <pfx3:Envelope>
                <pfx3:Body>
                    <ns10:SMF>
                        <ns10:SMFHeader>
                            <ns5:MessageKey>
                                <xsl:value-of select="$Variable0/root/GUID"/>
                            </ns5:MessageKey>
                            <ns5:ServiceName>
                                <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF/ns7:SMFHeader/ns5:ServiceName"/>
                            </ns5:ServiceName>
                            <ns5:ServiceVersion>
                                <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF/ns7:SMFHeader/ns5:ServiceVersion"/>
                            </ns5:ServiceVersion>
                            <ns5:SourceID>
                                <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF/ns7:SMFHeader/ns5:SourceID"/>
                            </ns5:SourceID>
                            <ns5:SourceIP>
                                <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF/ns7:SMFHeader/ns5:SourceIP"/>
                            </ns5:SourceIP>
                            <ns5:RqTimestamp>
                                <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF/ns7:SMFHeader/ns5:RqTimestamp"/>
                            </ns5:RqTimestamp>
                            <ns5:RsTimestamp>
                                <xsl:value-of select="current-dateTime()"/>
                            </ns5:RsTimestamp>
                        </ns10:SMFHeader>
                        <xsl:for-each select="$TotalOutput/AccumulatedOutput/root">
                            <ns10:SMFBody>
                                <ns11:ProcessStatus>
                                    <xsl:value-of select="output/ns11:ProcessStatus"/>
                                </ns11:ProcessStatus>
                                <xsl:if test="output/ns11:SfdcPartnerId">
                                    <ns11:SfdcPartnerId>
                                        <xsl:value-of select="output/ns11:SfdcPartnerId"/>
                                    </ns11:SfdcPartnerId>
                                </xsl:if>
                                <xsl:if test="output/ns11:ExternalPartnerId">
                                    <ns11:ExternalPartnerId>
                                        <xsl:value-of select="output/ns11:ExternalPartnerId"/>
                                    </ns11:ExternalPartnerId>
                                </xsl:if>
                                <xsl:if test="output/ns11:ErrorMessage">
                                    <ns11:ErrorMessage>
                                        <xsl:value-of select="output/ns11:ErrorMessage"/>
                                    </ns11:ErrorMessage>
                                </xsl:if>
                            </ns10:SMFBody>
                        </xsl:for-each>
                    </ns10:SMF>
                </pfx3:Body>
            </pfx3:Envelope>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Logging-Input-Message-1">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>415</pd:x>
        <pd:y>65</pd:y>
        <config>
            <processName>/Services/SharedServices/MDM Logging Process.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:coercions>
            <pd:coercion xpath="$Parse-XML/pfx3:Envelope/pfx3:Body/*" element="ns7:SMF" cardinality=""/>
        </pd:coercions>
        <pd:inputBindings>
            <group>
                <MessageKey>
                    <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF[1]/ns7:SMFHeader/ns5:MessageKey"/>
                </MessageKey>
                <ServiceName>
                    <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF[1]/ns7:SMFHeader/ns5:ServiceName"/>
                </ServiceName>
                <ServiceVersion>
                    <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF[1]/ns7:SMFHeader/ns5:ServiceVersion"/>
                </ServiceVersion>
                <SourceID>
                    <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF[1]/ns7:SMFHeader/ns5:SourceID"/>
                </SourceID>
                <SourceIP>
                    <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF[1]/ns7:SMFHeader/ns5:SourceIP"/>
                </SourceIP>
                <RqTimestamp>
                    <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF[1]/ns7:SMFHeader/ns5:RqTimestamp"/>
                </RqTimestamp>
                <RsTimestamp>
                    <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF[1]/ns7:SMFHeader/ns5:RsTimestamp"/>
                </RsTimestamp>
                <MessageBody>
                    <xsl:value-of select="tib:render-xml($Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF, 1)"/>
                </MessageBody>
                <errlog_flag>
                    <xsl:value-of select="&quot;N&quot;"/>
                </errlog_flag>
                <datasource>
                    <xsl:value-of select="&quot;SFDC&quot;"/>
                </datasource>
                <gold_id>
                    <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF/ns7:SMFBody[1]/ns13:MdmPartnerId"/>
                </gold_id>
                <source_company_id>
                    <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF/ns7:SMFBody[1]/ns13:SfdcPartnerId"/>
                </source_company_id>
            </group>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Logging-Output-Message-1">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>984</pd:x>
        <pd:y>236</pd:y>
        <config>
            <processName>/Services/SharedServices/MDM Logging Process.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:inputBindings>
            <group>
                <MessageKey>
                    <xsl:value-of select="$Variable0/root/GUID"/>
                </MessageKey>
                <ServiceName>
                    <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF/ns7:SMFHeader/ns5:ServiceName"/>
                </ServiceName>
                <ServiceVersion>
                    <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF/ns7:SMFHeader/ns5:ServiceVersion"/>
                </ServiceVersion>
                <SourceID>
                    <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF/ns7:SMFHeader/ns5:SourceID"/>
                </SourceID>
                <xsl:if test="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF/ns7:SMFHeader/ns5:SourceIP">
                    <SourceIP>
                        <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF/ns7:SMFHeader/ns5:SourceIP"/>
                    </SourceIP>
                </xsl:if>
                <xsl:if test="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF/ns7:SMFHeader/ns5:RqTimestamp">
                    <RqTimestamp>
                        <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF/ns7:SMFHeader/ns5:RqTimestamp"/>
                    </RqTimestamp>
                </xsl:if>
                <RsTimestamp>
                    <xsl:value-of select="current-dateTime()"/>
                </RsTimestamp>
                <MessageBody>
                    <xsl:value-of select="tib:render-xml($Render-XML/xmlString, 1)"/>
                </MessageBody>
                <errlog_flag>
                    <xsl:value-of select="&quot;N&quot;"/>
                </errlog_flag>
                <datasource>
                    <xsl:value-of select="$MDM_CreateCustomer/ns10:SMF/ns10:SMFHeader/ns5:SourceID"/>
                </datasource>
                <gold_id>
                    <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF/ns7:SMFBody[1]/ns13:MdmPartnerId"/>
                </gold_id>
                <source_company_id>
                    <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/ns7:SMF/ns7:SMFBody[1]/ns13:SfdcPartnerId"/>
                </source_company_id>
            </group>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>JMS Queue Receiver</pd:from>
        <pd:to>Parse XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>Error Handling</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Error Handling</pd:from>
        <pd:to>Reply Error to JMS Message</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Reply to JMS Message</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Reply Error to JMS Message</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>Render XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Render XML</pd:from>
        <pd:to>Logging-Output-Message-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>Logging-Input-Message-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Logging-Input-Message-1</pd:from>
        <pd:to>Group</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Logging-Output-Message-1</pd:from>
        <pd:to>Reply to JMS Message</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>
<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:ns9="http://www.tibco.com/schemas/MDMService/WSDL/Provider/SFDC/Schema.xsd" xmlns:TM="java://com.trendmicro.TMBWUtilities" xmlns:ns5="http://www.trendmicro.com/ESB/schemas/Common" xmlns:ns13="http://www.trendmicro.com/ESB/MDM/schemas/SMF/CreateSfContact_Input" xmlns:ns6="http://www.trendmicro.com/ESB/schemas/error" xmlns:ns10="http://www.trendmicro.com/ESB/MDM/schemas/SMF/CommonOutput" xmlns:ns7="http://www.trendmicro.com/ESB/MDM/schemas/SMF/SearchCustomer_Input" xmlns:pfx="http://www.trendmicro.com/ESB/ACS/schemas/SMF" xmlns:ns11="http://www.tibco.com/schemas/MDMService/WSDL/Provider/MDMService/Schema.xsd" xmlns:ns8="http://www.trendmicro.com/ESB/MDM/schemas/SMF/SearchCustomer_Output" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns2="http://tempuri.org/" xmlns:ns1="http://www.trendmicro.com/ESB/FRS/schemas/SMF" xmlns:ns4="http://www.trendmicro.com/ESB/MDM/schemas/SMF/callFuzzy_Output" xmlns:ns3="http://www.tibco.com/pe/EngineTypes" xmlns:pfx5="http://applications.dnb.com/webservice/schema/" xmlns:pfx4="http://www.tibco.com/schemas/MDMService/WSDL/Provider/SFDC/RetrieveCustomer_Input" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx3="http://schemas.xmlsoap.org/soap/envelope/" xmlns:pfx2="http://www.trendmicro.com/ESB/MDM/schemas/SMF/callFuzzy_Input" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <xs:import xmlns:xs="http://www.w3.org/2001/XMLSchema" namespace="http://www.trendmicro.com/ESB/ACS/schemas/SMF" schemaLocation="/XSD/Common/ACSMessage.xsd"/>
    <xs:import xmlns:xs="http://www.w3.org/2001/XMLSchema" namespace="http://schemas.xmlsoap.org/soap/envelope/" schemaLocation="/XSD/Common/soap.xsd"/>
    <xs:import xmlns:xs="http://www.w3.org/2001/XMLSchema" namespace="http://www.trendmicro.com/ESB/schemas/error" schemaLocation="/XSD/Common/error.xsd"/>
    <xs:import xmlns:xs="http://www.w3.org/2001/XMLSchema" namespace="http://www.trendmicro.com/ESB/MDM/schemas/SMF/SearchCustomer_Output" schemaLocation="/WSDL/Provider/SearchCustomer_Output.xsd"/>
    <xs:import xmlns:xs="http://www.w3.org/2001/XMLSchema" namespace="http://www.trendmicro.com/ESB/MDM/schemas/SMF/SearchCustomer_Input" schemaLocation="/WSDL/Provider/MDMService/SearchCustomer_Input.xsd"/>
    <xs:import xmlns:xs="http://www.w3.org/2001/XMLSchema" namespace="http://www.trendmicro.com/ESB/MDM/schemas/SMF/CreateSfContact_Input" schemaLocation="/WSDL/Provider/SFDC/CreateSfContact_Input.xsd"/>
    <xs:import xmlns:xs="http://www.w3.org/2001/XMLSchema" namespace="http://www.tibco.com/schemas/MDMService/WSDL/Provider/SFDC/RetrieveCustomer_Input" schemaLocation="/WSDL/Provider/MDMService/RetrieveCustomer_Input.xsd"/>
    <xs:import xmlns:xs="http://www.w3.org/2001/XMLSchema" namespace="http://www.tibco.com/schemas/MDMService/WSDL/Provider/MDMService/Schema.xsd" schemaLocation="/WSDL/Provider/MDMService/RetrieveCustomerOutput.xsd"/>
    <pd:name>Services/RetrieveCustomer/V1.0/Main.process</pd:name>
    <pd:startName>JMS Queue Receiver</pd:startName>
    <pd:startX>0</pd:startX>
    <pd:startY>0</pd:startY>
    <pd:returnBindings/>
    <pd:starter name="JMS Queue Receiver">
        <pd:type>com.tibco.plugin.jms.JMSQueueEventSource</pd:type>
        <pd:resourceType>ae.activities.JMSQueueEventSource</pd:resourceType>
        <pd:x>90</pd:x>
        <pd:y>106</pd:y>
        <config>
            <PermittedMessageType>Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
                <destination>%%Services/RetrieveCustomer/V1.0/DestinationQueue%%</destination>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/Resources/JMS/JMS Connection.sharedjmscon</ConnectionReference>
        </config>
        <pd:inputBindings/>
    </pd:starter>
    <pd:endName>End</pd:endName>
    <pd:endX>983</pd:endX>
    <pd:endY>113</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1334229875067</pd:targetNamespace>
    <pd:activity name="Parse XML">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>223</pd:x>
        <pd:y>108</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx3:Envelope"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$JMS-Queue-Receiver/ns:ActivityOutput/Body"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>719</pd:x>
        <pd:y>324</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Error Handling">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>855</pd:x>
        <pd:y>325</pd:y>
        <config>
            <processName>/Services/SharedServices/Error Handling Process.process</processName>
        </config>
        <pd:coercions>
            <pd:coercion xpath="$_error/ns3:ErrorReport/Data/*" element="ns6:Error"/>
            <pd:coercion xpath="$Parse-XML/pfx3:Envelope/pfx3:Body/*" element="pfx4:SMF"/>
        </pd:coercions>
        <pd:inputBindings>
            <group>
                <xsl:choose>
                    <xsl:when test="exists($_error_Parse-XML/ActivityErrors)">
                        <pfx:SMFHeader>
                            <ns5:MessageKey>
                                <xsl:value-of select="&quot;&quot;"/>
                            </ns5:MessageKey>
                            <ns5:ServiceName>
                                <xsl:value-of select="&quot;RetrieveCustomer&quot;"/>
                            </ns5:ServiceName>
                            <ns5:ServiceVersion>
                                <xsl:value-of select="&quot;V1.0&quot;"/>
                            </ns5:ServiceVersion>
                            <ns5:SourceID>
                                <xsl:value-of select="&quot;N/A&quot;"/>
                            </ns5:SourceID>
                            <ns5:SourceIP>
                                <xsl:value-of select="&quot;N/A&quot;"/>
                            </ns5:SourceIP>
                            <ns5:RsTimestamp>
                                <xsl:value-of select="current-dateTime()"/>
                            </ns5:RsTimestamp>
                        </pfx:SMFHeader>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:for-each select="$Parse-XML/pfx3:Envelope/pfx3:Body/pfx4:SMF[1]/pfx4:SMFHeader">
                            <pfx:SMFHeader>
                                <ns5:MessageKey>
                                    <xsl:value-of select="ns5:MessageKey"/>
                                </ns5:MessageKey>
                                <ns5:ServiceName>
                                    <xsl:value-of select="ns5:ServiceName"/>
                                </ns5:ServiceName>
                                <ns5:ServiceVersion>
                                    <xsl:value-of select="ns5:ServiceVersion"/>
                                </ns5:ServiceVersion>
                                <ns5:SourceID>
                                    <xsl:value-of select="ns5:SourceID"/>
                                </ns5:SourceID>
                                <xsl:if test="ns5:SourceIP">
                                    <ns5:SourceIP>
                                        <xsl:value-of select="ns5:SourceIP"/>
                                    </ns5:SourceIP>
                                </xsl:if>
                                <xsl:if test="ns5:RqTimestamp">
                                    <ns5:RqTimestamp>
                                        <xsl:value-of select="ns5:RqTimestamp"/>
                                    </ns5:RqTimestamp>
                                </xsl:if>
                                <ns5:RsTimestamp>
                                    <xsl:value-of select="current-dateTime()"/>
                                </ns5:RsTimestamp>
                            </pfx:SMFHeader>
                        </xsl:for-each>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="exists($_error/ns3:ErrorReport/Data/ns6:Error)">
                        <xsl:copy-of select="$_error/ns3:ErrorReport/Data/ns6:Error"/>
                    </xsl:when>
                    <xsl:otherwise>
                        <ns6:Error>
                            <ns6:src>
                                <xsl:value-of select="$_error/ns3:ErrorReport/ProcessStack"/>
                            </ns6:src>
                            <ns6:error_code>
                                <xsl:value-of select="$_error/ns3:ErrorReport/MsgCode"/>
                            </ns6:error_code>
                            <ns6:error_message>
                                <xsl:value-of select="$_error/ns3:ErrorReport/Msg"/>
                            </ns6:error_message>
                            <ns6:stack_trace>
                                <xsl:value-of select="$_error/ns3:ErrorReport/StackTrace"/>
                            </ns6:stack_trace>
                        </ns6:Error>
                    </xsl:otherwise>
                </xsl:choose>
                <Source>
                    <xsl:value-of select="$JMS-Queue-Receiver/ns:ActivityOutput/Body"/>
                </Source>
                <Retry>
                    <xsl:value-of select="0"/>
                </Retry>
            </group>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Reply to JMS Message">
        <pd:type>com.tibco.plugin.jms.JMSReplyActivity</pd:type>
        <pd:resourceType>ae.activities.JMSReplyActivity</pd:resourceType>
        <pd:x>859</pd:x>
        <pd:y>120</pd:y>
        <config>
            <PermittedMessageType>Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
                <EventSource>JMS Queue Receiver</EventSource>
            </ConfigurableHeaders>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <Body>
                    <xsl:value-of select="$Render-XML/xmlString"/>
                </Body>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Reply Error to JMS Message">
        <pd:type>com.tibco.plugin.jms.JMSReplyActivity</pd:type>
        <pd:resourceType>ae.activities.JMSReplyActivity</pd:resourceType>
        <pd:x>984</pd:x>
        <pd:y>339</pd:y>
        <config>
            <PermittedMessageType>XML Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
                <EventSource>JMS Queue Receiver</EventSource>
            </ConfigurableHeaders>
            <InDataxsdString ref="pfx3:Envelope"/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <Body>
                    <pfx3:Envelope>
                        <pfx3:Body>
                            <xsl:choose>
                                <xsl:when test="exists($_error/ns3:ErrorReport/Data/ns6:Error)">
                                    <pfx3:Fault>
                                        <faultcode>
                                            <xsl:value-of select="$_error/ns3:ErrorReport/Data/ns6:Error/ns6:error_code"/>
                                        </faultcode>
                                        <faultstring>
                                            <xsl:value-of select="$_error/ns3:ErrorReport/Data/ns6:Error/ns6:error_message"/>
                                        </faultstring>
                                    </pfx3:Fault>
                                </xsl:when>
                                <xsl:otherwise>
                                    <pfx3:Fault>
                                        <faultcode>
                                            <xsl:value-of select="$_error/ns3:ErrorReport/MsgCode"/>
                                        </faultcode>
                                        <faultstring>
                                            <xsl:value-of select="$_error/ns3:ErrorReport/Msg"/>
                                        </faultstring>
                                    </pfx3:Fault>
                                </xsl:otherwise>
                            </xsl:choose>
                        </pfx3:Body>
                    </pfx3:Envelope>
                </Body>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Render XML">
        <pd:type>com.tibco.plugin.xml.XMLRendererActivity</pd:type>
        <pd:resourceType>ae.activities.XMLRendererActivity</pd:resourceType>
        <pd:x>597</pd:x>
        <pd:y>105</pd:y>
        <config>
            <renderAsText>text</renderAsText>
            <validateInput>false</validateInput>
            <term ref="pfx3:Envelope"/>
        </config>
        <pd:inputBindings>
            <pfx3:Envelope>
                <pfx3:Body>
                    <xsl:choose>
                        <xsl:when test="$callRetrieve/ns11:SMF/ns11:SMFBody/ns11:row/ns11:Result=0">
                            <ns11:SMF>
                                <xsl:copy-of select="$callRetrieve/ns11:SMF/ns11:SMFHeader"/>
                                <ns11:SMFBody>
                                    <xsl:choose>
                                        <xsl:when test="$AdvancedCompanySearch/pfx5:AdvancedCompanySearchResponse/pfx5:return/pfx5:companies/pfx5:totalHits>0">
                                            <xsl:for-each select="$AdvancedCompanySearch/pfx5:AdvancedCompanySearchResponse/pfx5:return/pfx5:companies/pfx5:hit/pfx5:companyResults">
                                                <ns11:row>
                                                    <xsl:if test="not((pfx5:address1/@xsi:nil=(&quot;true&quot;)) or (pfx5:address1/@xsi:nil=(&quot;1&quot;)))">
                                                        <ns11:Address>
                                                            <xsl:value-of select="pfx5:address1"/>
                                                        </ns11:Address>
                                                    </xsl:if>
                                                    <xsl:if test="pfx5:city">
                                                        <ns11:City>
                                                            <xsl:value-of select="pfx5:city"/>
                                                        </ns11:City>
                                                    </xsl:if>
                                                    <xsl:if test="pfx5:country">
                                                        <ns11:Country>
                                                            <xsl:value-of select="pfx5:country"/>
                                                        </ns11:Country>
                                                    </xsl:if>
                                                    <xsl:if test="not((pfx5:hqPhone/@xsi:nil=(&quot;true&quot;)) or (pfx5:hqPhone/@xsi:nil=(&quot;1&quot;)))">
                                                        <ns11:Phone_No>
                                                            <xsl:value-of select="pfx5:hqPhone"/>
                                                        </ns11:Phone_No>
                                                    </xsl:if>
                                                    <xsl:if test="pfx5:duns">
                                                        <ns11:DUNS>
                                                            <xsl:value-of select="pfx5:duns"/>
                                                        </ns11:DUNS>
                                                    </xsl:if>
                                                    <xsl:if test="not((pfx5:companyName/@xsi:nil=(&quot;true&quot;)) or (pfx5:companyName/@xsi:nil=(&quot;1&quot;)))">
                                                        <ns11:DUNSName>
                                                            <xsl:value-of select="pfx5:companyName"/>
                                                        </ns11:DUNSName>
                                                    </xsl:if>
                                                    <xsl:if test="not((pfx5:parentDuns/@xsi:nil=(&quot;true&quot;)) or (pfx5:parentDuns/@xsi:nil=(&quot;1&quot;)))">
                                                        <ns11:ImmediateParentDuns>
                                                            <xsl:value-of select="pfx5:parentDuns"/>
                                                        </ns11:ImmediateParentDuns>
                                                    </xsl:if>
                                                    <xsl:if test="not((pfx5:ultimateParentDuns/@xsi:nil=(&quot;true&quot;)) or (pfx5:ultimateParentDuns/@xsi:nil=(&quot;1&quot;)))">
                                                        <ns11:DUNSGlobalParent>
                                                            <xsl:value-of select="pfx5:ultimateParentDuns"/>
                                                        </ns11:DUNSGlobalParent>
                                                    </xsl:if>
                                                </ns11:row>
                                            </xsl:for-each>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <ns11:row>
                                                <ns11:Result>
                                                    <xsl:value-of select="0"/>
                                                </ns11:Result>
                                            </ns11:row>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                </ns11:SMFBody>
                            </ns11:SMF>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:copy-of select="$callRetrieve/ns11:SMF"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </pfx3:Body>
            </pfx3:Envelope>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="callRetrieve">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>413</pd:x>
        <pd:y>108</pd:y>
        <config>
            <processName>/ExternalServices/MDM_Server/callCustomerRetrieve.process</processName>
        </config>
        <pd:coercions>
            <pd:coercion xpath="$Parse-XML/pfx3:Envelope/pfx3:Body/*" element="pfx4:SMF"/>
        </pd:coercions>
        <pd:inputBindings>
            <pfx4:SMF>
                <xsl:copy-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/pfx4:SMF/pfx4:SMFHeader"/>
                <xsl:for-each select="$Parse-XML/pfx3:Envelope/pfx3:Body/pfx4:SMF/pfx4:SMFBody">
                    <pfx4:SMFBody>
                        <pfx4:Name>
                            <xsl:value-of select="pfx4:Name"/>
                        </pfx4:Name>
                        <pfx4:country>
                            <xsl:value-of select="pfx4:country"/>
                        </pfx4:country>
                        <xsl:choose>
                            <xsl:when test="tib:index-of(current()/pfx4:emaildomain, &quot;@&quot;) >-1">
                                <pfx4:emaildomain>
                                    <xsl:value-of select="substring-after(pfx4:emaildomain,&quot;@&quot;)"/>
                                </pfx4:emaildomain>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx4:emaildomain>
                                    <xsl:value-of select="pfx4:emaildomain"/>
                                </pfx4:emaildomain>
                            </xsl:otherwise>
                        </xsl:choose>
                        <pfx4:website>
                            <xsl:value-of select="pfx4:website"/>
                        </pfx4:website>
                        <xsl:if test="pfx4:gold_id">
                            <pfx4:gold_id>
                                <xsl:value-of select="pfx4:gold_id"/>
                            </pfx4:gold_id>
                        </xsl:if>
                    </pfx4:SMFBody>
                </xsl:for-each>
            </pfx4:SMF>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Logging Input Message">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>318</pd:x>
        <pd:y>199</pd:y>
        <config>
            <processName>/Services/SharedServices/MDM Logging Process.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:coercions>
            <pd:coercion xpath="$Parse-XML/pfx3:Envelope/pfx3:Body/*" element="pfx4:SMF"/>
        </pd:coercions>
        <pd:inputBindings>
            <group>
                <MessageKey>
                    <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/pfx4:SMF[1]/pfx4:SMFHeader/ns5:MessageKey"/>
                </MessageKey>
                <ServiceName>
                    <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/pfx4:SMF[1]/pfx4:SMFHeader/ns5:ServiceName"/>
                </ServiceName>
                <ServiceVersion>
                    <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/pfx4:SMF[1]/pfx4:SMFHeader/ns5:ServiceVersion"/>
                </ServiceVersion>
                <SourceID>
                    <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/pfx4:SMF[1]/pfx4:SMFHeader/ns5:SourceID"/>
                </SourceID>
                <SourceIP>
                    <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/pfx4:SMF[1]/pfx4:SMFHeader/ns5:SourceIP"/>
                </SourceIP>
                <RqTimestamp>
                    <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/pfx4:SMF[1]/pfx4:SMFHeader/ns5:RqTimestamp"/>
                </RqTimestamp>
                <RsTimestamp>
                    <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/pfx4:SMF[1]/pfx4:SMFHeader/ns5:RsTimestamp"/>
                </RsTimestamp>
                <MessageBody>
                    <xsl:value-of select="tib:render-xml($Parse-XML/pfx3:Envelope,1)"/>
                </MessageBody>
                <errlog_flag>
                    <xsl:value-of select="&quot;N&quot;"/>
                </errlog_flag>
                <datasource>
                    <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/pfx4:SMF[1]/pfx4:SMFHeader/ns5:SourceID"/>
                </datasource>
            </group>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Logging Output Message">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>717</pd:x>
        <pd:y>118</pd:y>
        <config>
            <processName>/Services/SharedServices/MDM Logging Process.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:inputBindings>
            <group>
                <MessageKey>
                    <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/pfx4:SMF[1]/pfx4:SMFHeader/ns5:MessageKey"/>
                </MessageKey>
                <ServiceName>
                    <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/pfx4:SMF[1]/pfx4:SMFHeader/ns5:ServiceName"/>
                </ServiceName>
                <ServiceVersion>
                    <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/pfx4:SMF[1]/pfx4:SMFHeader/ns5:ServiceVersion"/>
                </ServiceVersion>
                <SourceID>
                    <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/pfx4:SMF[1]/pfx4:SMFHeader/ns5:SourceID"/>
                </SourceID>
                <SourceIP>
                    <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/pfx4:SMF[1]/pfx4:SMFHeader/ns5:SourceIP"/>
                </SourceIP>
                <RqTimestamp>
                    <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/pfx4:SMF[1]/pfx4:SMFHeader/ns5:RqTimestamp"/>
                </RqTimestamp>
                <RsTimestamp>
                    <xsl:value-of select="current-dateTime()"/>
                </RsTimestamp>
                <MessageBody>
                    <xsl:value-of select="substring-after($Render-XML/xmlString, '&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>')"/>
                </MessageBody>
                <errlog_flag>
                    <xsl:value-of select="&quot;N&quot;"/>
                </errlog_flag>
                <xsl:if test="$Parse-XML/pfx3:Envelope/pfx3:Body/pfx4:SMF[1]/pfx4:SMFHeader/ns5:SourceID">
                    <datasource>
                        <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/pfx4:SMF[1]/pfx4:SMFHeader/ns5:SourceID"/>
                    </datasource>
                </xsl:if>
            </group>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="AdvancedCompanySearch">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>548</pd:x>
        <pd:y>238</pd:y>
        <config>
            <processName>/ExternalServices/Hoovers/AdvancedCompanySearch.process</processName>
        </config>
        <pd:inputBindings>
            <pfx5:AdvancedCompanySearchRequest>
                <pfx5:bal>
                    <pfx5:maxRecords>
                        <xsl:value-of select="20"/>
                    </pfx5:maxRecords>
                    <pfx5:sortDirection>
                        <xsl:value-of select="&quot;Ascending&quot;"/>
                    </pfx5:sortDirection>
                    <pfx5:location>
                        <xsl:choose>
                            <xsl:when test="count($SQL-Direct/jdbcGeneralActivityOutput/unknownResultset/row)>0">
                                <pfx5:county>
                                    <pfx5:countyId>
                                        <xsl:value-of select="&quot;&quot;"/>
                                    </pfx5:countyId>
                                    <pfx5:state>
                                        <xsl:value-of select="&quot;&quot;"/>
                                    </pfx5:state>
                                    <pfx5:countryId>
                                        <xsl:value-of select="$SQL-Direct/jdbcGeneralActivityOutput/unknownResultset[1]/row[1]/column[name='hoovers_id']/value"/>
                                    </pfx5:countryId>
                                </pfx5:county>
                            </xsl:when>
                            <xsl:otherwise/>
                        </xsl:choose>
                    </pfx5:location>
                    <pfx5:specialtyCriteria>
                        <xsl:if test="$Parse-XML/pfx3:Envelope/pfx3:Body/pfx4:SMF[1]/pfx4:SMFBody[1]/pfx4:Name">
                            <pfx5:companyName>
                                <xsl:value-of select="$Parse-XML/pfx3:Envelope/pfx3:Body/pfx4:SMF[1]/pfx4:SMFBody[1]/pfx4:Name"/>
                            </pfx5:companyName>
                        </xsl:if>
                    </pfx5:specialtyCriteria>
                </pfx5:bal>
            </pfx5:AdvancedCompanySearchRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="SQL Direct">
        <pd:type>com.tibco.plugin.jdbc.JDBCGeneralActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCGeneralActivity</pd:resourceType>
        <pd:x>415</pd:x>
        <pd:y>243</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <maxRows>100</maxRows>
            <jdbcSharedConfig>/Resources/Database/MDM Server JDBC Connection.sharedjdbc</jdbcSharedConfig>
        </config>
        <pd:inputBindings>
            <jdbcGeneralActivityInput>
                <statement>
                    <xsl:value-of select="concat(&quot;exec [EMEA_MDM].[PRC_SELECT_COUNTRY_BY_NAME] 'SFDC','&quot;,$Parse-XML/pfx3:Envelope/pfx3:Body/pfx4:SMF[1]/pfx4:SMFBody[1]/pfx4:country,&quot;'&quot;)"/>
                </statement>
            </jdbcGeneralActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Save receiver enrichement data">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>707</pd:x>
        <pd:y>247</pd:y>
        <config>
            <processName>/Services/Enrichment/Save receiver enrichment data.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:inputBindings>
            <root>
                <xsl:for-each select="$Parse-XML/pfx3:Envelope/pfx3:Body/pfx4:SMF[1]/pfx4:SMFHeader">
                    <pfx:SMFHeader>
                        <ns5:MessageKey>
                            <xsl:value-of select="TM:getGUID()"/>
                        </ns5:MessageKey>
                        <ns5:ServiceName>
                            <xsl:value-of select="ns5:ServiceName"/>
                        </ns5:ServiceName>
                        <ns5:ServiceVersion>
                            <xsl:value-of select="ns5:ServiceVersion"/>
                        </ns5:ServiceVersion>
                        <ns5:SourceID>
                            <xsl:value-of select="ns5:SourceID"/>
                        </ns5:SourceID>
                        <xsl:if test="ns5:SourceIP">
                            <ns5:SourceIP>
                                <xsl:value-of select="ns5:SourceIP"/>
                            </ns5:SourceIP>
                        </xsl:if>
                        <xsl:if test="ns5:RqTimestamp">
                            <ns5:RqTimestamp>
                                <xsl:value-of select="ns5:RqTimestamp"/>
                            </ns5:RqTimestamp>
                        </xsl:if>
                        <ns5:RsTimestamp>
                            <xsl:value-of select="current-dateTime()"/>
                        </ns5:RsTimestamp>
                    </pfx:SMFHeader>
                </xsl:for-each>
                <HooversRSXml>
                    <xsl:value-of select="tib:render-xml($AdvancedCompanySearch/pfx5:AdvancedCompanySearchResponse,1)"/>
                </HooversRSXml>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>JMS Queue Receiver</pd:from>
        <pd:to>Parse XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>Error Handling</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Error Handling</pd:from>
        <pd:to>Reply Error to JMS Message</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Reply to JMS Message</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>Logging Input Message</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Reply Error to JMS Message</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Render XML</pd:from>
        <pd:to>Logging Output Message</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>callRetrieve</pd:from>
        <pd:to>Render XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Logging Input Message</pd:from>
        <pd:to>callRetrieve</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Logging Output Message</pd:from>
        <pd:to>Reply to JMS Message</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>callRetrieve</pd:from>
        <pd:to>SQL Direct</pd:to>
        <pd:xpathDescription>Result=0</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>count($callRetrieve/ns11:SMF/ns11:SMFBody/ns11:row)=0 or $callRetrieve/ns11:SMF/ns11:SMFBody/ns11:row/ns11:Result =0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>AdvancedCompanySearch</pd:from>
        <pd:to>Render XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SQL Direct</pd:from>
        <pd:to>AdvancedCompanySearch</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>AdvancedCompanySearch</pd:from>
        <pd:to>Save receiver enrichement data</pd:to>
        <pd:xpathDescription>get Value</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$AdvancedCompanySearch/pfx5:AdvancedCompanySearchResponse/pfx5:return/pfx5:companies/pfx5:hits&gt;0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Save receiver enrichement data</pd:from>
        <pd:to>Render XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>
<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx15="http://www.trendmicro.com/ESB/schemas/MDM/Hoovers" xmlns:pfx14="http://applications.dnb.com/webservice/schema/" xmlns:ns="http://www.trendmicro.com/ESB/FRS/schemas/SMF" xmlns:pfx13="http://www.trendmicro.com/ESB/MDM/schemas/SMF/SearchCustomer_Output" xmlns:pfx12="http://www.trendmicro.com/ESB/MDM/schemas/SMF/SearchCustomer_Input" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:pfx11="http://www.trendmicro.com/ESB/MDM/schemas/SMF/callFuzzy_Output" xmlns:pfx10="http://www.trendmicro.com/ESB/MDM/schemas/SMF/callFuzzy_Input" xmlns:pfx41="http://coretech.trendmicro.com/frs/charon/" xmlns:TM2="java://com.trendmicro.getTIBCOGlobalVariable" xmlns:ns21="http://xmlns.tibco.com/encodings/mime" xmlns:pfx5="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:pfx4="http://www.trendmicro.com/ESB/schemas/errorReport" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx3="http://www.trendmicro.com/ESB/PeopleSoft/schemas/DBLogger" xmlns:pfx2="http://tempuri.org/" xmlns:pfx9="http://schemas.xmlsoap.org/soap/envelope/" xmlns:pfx8="http://www.trendmicro.com/ESB/MDM/schemas/SMF" xmlns:pfx7="http://www.trendmicro.com/ESB/schemas/error" xmlns:pfx6="http://xmlns.oracle.com/Enterprise/HCM/services/TM_EMPLOYEE_LIST.1" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx="http://www.trendmicro.com/ESB/ACS/schemas/SMF" xmlns:ns2="http://www.tibco.com/pe/DeployedVarsType" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns1="http://www.tibco.com/pe/EngineTypes" xmlns:ns4="http://schemas.tibco.com/bw/plugins/http/5.0/httpExceptions" xmlns:ns3="http://tibco.com/namespaces/tnt/plugins/soap" xmlns:ns0="www.tibco.com/plugin/Sleep" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx21="http://Anti.Malware.Tracker-Service.org/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <xsd:import namespace="http://www.trendmicro.com/ESB/schemas/error" schemaLocation="/XSD/Common/error.xsd"/>
    <xsd:import namespace="http://schemas.xmlsoap.org/soap/envelope/" schemaLocation="/XSD/Common/soap.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/ACS/schemas/SMF"/>
    <xsd:import namespace="http://tempuri.org/" schemaLocation="/WSDL/Client/MDMServerWSDL.wsdl"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/MDM/schemas/SMF/SearchCustomer_Input" schemaLocation="/WSDL/Provider/MDMService/SearchCustomer_Input.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/MDM/schemas/SMF/SearchCustomer_Output" schemaLocation="/WSDL/Provider/MDMService/SearchCustomer_Output.xsd"/>
    <xsd:import namespace="http://applications.dnb.com/webservice/schema/" schemaLocation="/WSDL/Client/HooversWSDL.wsdl"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/schemas/MDM/Hoovers" schemaLocation="/XSD/Client/Hoovers/Enrichment.xsd"/>
    <wsdl:import namespace="http://tempuri.org/" location="/WSDL/Client/ACS WSDL.wsdl"/>
    <wsdl:import namespace="http://applications.dnb.com/webservice/schema/" location="/WSDL/Client/HooversWSDL.wsdl"/>
    <pd:name>ExternalServices/Hoovers/GetCompanyDetail.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType ref="pfx14:GetCompanyDetailRequest"/>
    <pd:startX>74</pd:startX>
    <pd:startY>181</pd:startY>
    <pd:returnBindings>
        <pfx15:CompanyDetail>
            <pfx15:companyId>
                <xsl:copy-of select="$SOAPRequestReply/outputMessage/pfx14:GetCompanyDetailResponse/pfx14:return/pfx14:companyId/@xsi:nil"/>
                <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx14:GetCompanyDetailResponse/pfx14:return/pfx14:companyId"/>
            </pfx15:companyId>
            <pfx15:duns>
                <xsl:copy-of select="$SOAPRequestReply/outputMessage/pfx14:GetCompanyDetailResponse/pfx14:return/pfx14:duns/@xsi:nil"/>
                <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx14:GetCompanyDetailResponse/pfx14:return/pfx14:duns"/>
            </pfx15:duns>
            <pfx15:companyType>
                <xsl:copy-of select="$SOAPRequestReply/outputMessage/pfx14:GetCompanyDetailResponse/pfx14:return/pfx14:companyType/@xsi:nil"/>
                <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx14:GetCompanyDetailResponse/pfx14:return/pfx14:companyType"/>
            </pfx15:companyType>
            <pfx15:locationType>
                <xsl:copy-of select="$SOAPRequestReply/outputMessage/pfx14:GetCompanyDetailResponse/pfx14:return/pfx14:locationType/@xsi:nil"/>
                <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx14:GetCompanyDetailResponse/pfx14:return/pfx14:locationType"/>
            </pfx15:locationType>
            <pfx15:ultimateParentDuns>
                <xsl:copy-of select="$SOAPRequestReply/outputMessage/pfx14:GetCompanyDetailResponse/pfx14:return/pfx14:ultimateParentDuns/@xsi:nil"/>
                <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx14:GetCompanyDetailResponse/pfx14:return/pfx14:ultimateParentDuns"/>
            </pfx15:ultimateParentDuns>
            <pfx15:ultimateParentName>
                <xsl:copy-of select="$SOAPRequestReply/outputMessage/pfx14:GetCompanyDetailResponse/pfx14:return/pfx14:ultimateParentName/@xsi:nil"/>
                <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx14:GetCompanyDetailResponse/pfx14:return/pfx14:ultimateParentName"/>
            </pfx15:ultimateParentName>
            <pfx15:parentDuns>
                <xsl:copy-of select="$SOAPRequestReply/outputMessage/pfx14:GetCompanyDetailResponse/pfx14:return/pfx14:parentDuns/@xsi:nil"/>
                <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx14:GetCompanyDetailResponse/pfx14:return/pfx14:parentDuns"/>
            </pfx15:parentDuns>
            <pfx15:parentName>
                <xsl:copy-of select="$SOAPRequestReply/outputMessage/pfx14:GetCompanyDetailResponse/pfx14:return/pfx14:parentName/@xsi:nil"/>
                <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx14:GetCompanyDetailResponse/pfx14:return/pfx14:parentName"/>
            </pfx15:parentName>
            <pfx15:name>
                <xsl:copy-of select="$SOAPRequestReply/outputMessage/pfx14:GetCompanyDetailResponse/pfx14:return/pfx14:name/@xsi:nil"/>
                <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx14:GetCompanyDetailResponse/pfx14:return/pfx14:name"/>
            </pfx15:name>
            <pfx15:industries>
                <xsl:value-of select="tib:render-xml($SOAPRequestReply/outputMessage/pfx14:GetCompanyDetailResponse/pfx14:return/pfx14:industries,true())"/>
            </pfx15:industries>
            <xsl:for-each select="$SOAPRequestReply/outputMessage/pfx14:GetCompanyDetailResponse/pfx14:return/pfx14:keyNumbersHistory/pfx14:annualKeyNumbersHistory/pfx14:keyNumbers">
                <pfx15:KeyNumbersHistory>
                    <pfx15:sales>
                        <xsl:copy-of select="pfx14:sales/@xsi:nil"/>
                        <xsl:value-of select="pfx14:sales"/>
                    </pfx15:sales>
                    <pfx15:employeesAtThisLocation>
                        <xsl:copy-of select="pfx14:employeesAtThisLocation/@xsi:nil"/>
                        <xsl:value-of select="pfx14:employeesAtThisLocation"/>
                    </pfx15:employeesAtThisLocation>
                    <pfx15:totalEmployeeGrowthPercent>
                        <xsl:copy-of select="pfx14:totalEmployeeGrowthPercent/@xsi:nil"/>
                        <xsl:value-of select="pfx14:totalEmployeeGrowthPercent"/>
                    </pfx15:totalEmployeeGrowthPercent>
                    <pfx15:employeesTotal>
                        <xsl:copy-of select="pfx14:employeesTotal/@xsi:nil"/>
                        <xsl:value-of select="pfx14:employeesTotal"/>
                    </pfx15:employeesTotal>
                    <pfx15:researchAndDevelopment>
                        <xsl:copy-of select="pfx14:researchAndDevelopment/@xsi:nil"/>
                        <xsl:value-of select="pfx14:researchAndDevelopment"/>
                    </pfx15:researchAndDevelopment>
                    <pfx15:advertising>
                        <xsl:copy-of select="pfx14:advertising/@xsi:nil"/>
                        <xsl:value-of select="pfx14:advertising"/>
                    </pfx15:advertising>
                    <pfx15:fiscal-period>
                        <xsl:copy-of select="pfx14:fiscal-period/@xsi:nil"/>
                        <xsl:value-of select="pfx14:fiscal-period"/>
                    </pfx15:fiscal-period>
                </pfx15:KeyNumbersHistory>
            </xsl:for-each>
            <xsl:for-each select="$SOAPRequestReply/outputMessage/pfx14:GetCompanyDetailResponse/pfx14:return/pfx14:locations/pfx14:location">
                <pfx15:locations>
                    <pfx15:address1>
                        <xsl:copy-of select="pfx14:address1/@xsi:nil"/>
                        <xsl:value-of select="pfx14:address1"/>
                    </pfx15:address1>
                    <pfx15:address2>
                        <xsl:copy-of select="pfx14:address2/@xsi:nil"/>
                        <xsl:value-of select="pfx14:address2"/>
                    </pfx15:address2>
                    <pfx15:city>
                        <xsl:copy-of select="pfx14:city/@xsi:nil"/>
                        <xsl:value-of select="pfx14:city"/>
                    </pfx15:city>
                    <pfx15:county>
                        <xsl:copy-of select="pfx14:county/@xsi:nil"/>
                        <xsl:value-of select="pfx14:county"/>
                    </pfx15:county>
                    <pfx15:state>
                        <xsl:copy-of select="pfx14:state/@xsi:nil"/>
                        <xsl:value-of select="pfx14:state"/>
                    </pfx15:state>
                    <pfx15:country>
                        <xsl:copy-of select="pfx14:country/@xsi:nil"/>
                        <xsl:value-of select="pfx14:country"/>
                    </pfx15:country>
                    <pfx15:countryId>
                        <xsl:copy-of select="pfx14:countryId/@xsi:nil"/>
                        <xsl:value-of select="pfx14:countryId"/>
                    </pfx15:countryId>
                    <pfx15:zip>
                        <xsl:copy-of select="pfx14:zip/@xsi:nil"/>
                        <xsl:value-of select="pfx14:zip"/>
                    </pfx15:zip>
                    <pfx15:zip4>
                        <xsl:copy-of select="pfx14:zip4/@xsi:nil"/>
                        <xsl:value-of select="pfx14:zip4"/>
                    </pfx15:zip4>
                    <pfx15:addressType>
                        <xsl:copy-of select="pfx14:addressType/@xsi:nil"/>
                        <xsl:value-of select="pfx14:addressType"/>
                    </pfx15:addressType>
                </pfx15:locations>
            </xsl:for-each>
            <pfx15:ownershipYear>
                <xsl:copy-of select="$SOAPRequestReply/outputMessage/pfx14:GetCompanyDetailResponse/pfx14:return/pfx14:ownershipYear/@xsi:nil"/>
                <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx14:GetCompanyDetailResponse/pfx14:return/pfx14:ownershipYear"/>
            </pfx15:ownershipYear>
            <pfx15:phones>
                <xsl:for-each select="$SOAPRequestReply/outputMessage/pfx14:GetCompanyDetailResponse/pfx14:return/pfx14:phones/pfx14:faxNumber">
                    <pfx15:faxNumber>
                        <pfx15:countryCode>
                            <xsl:copy-of select="pfx14:countryCode/@xsi:nil"/>
                            <xsl:value-of select="pfx14:countryCode"/>
                        </pfx15:countryCode>
                        <pfx15:areacode>
                            <xsl:copy-of select="pfx14:areaCode/@xsi:nil"/>
                            <xsl:value-of select="pfx14:areaCode"/>
                        </pfx15:areacode>
                        <pfx15:phoneNumber>
                            <xsl:copy-of select="pfx14:phoneNumber/@xsi:nil"/>
                            <xsl:value-of select="pfx14:phoneNumber"/>
                        </pfx15:phoneNumber>
                    </pfx15:faxNumber>
                </xsl:for-each>
                <xsl:for-each select="$SOAPRequestReply/outputMessage/pfx14:GetCompanyDetailResponse/pfx14:return/pfx14:phones/pfx14:phoneNumber">
                    <pfx15:phoneNumber>
                        <pfx15:countryCode>
                            <xsl:copy-of select="pfx14:countryCode/@xsi:nil"/>
                            <xsl:value-of select="pfx14:countryCode"/>
                        </pfx15:countryCode>
                        <pfx15:areaCode>
                            <xsl:copy-of select="pfx14:areaCode/@xsi:nil"/>
                            <xsl:value-of select="pfx14:areaCode"/>
                        </pfx15:areaCode>
                        <pfx15:phoneNumber>
                            <xsl:copy-of select="pfx14:phoneNumber/@xsi:nil"/>
                            <xsl:value-of select="pfx14:phoneNumber"/>
                        </pfx15:phoneNumber>
                    </pfx15:phoneNumber>
                </xsl:for-each>
            </pfx15:phones>
            <pfx15:synopsis>
                <xsl:copy-of select="$SOAPRequestReply/outputMessage/pfx14:GetCompanyDetailResponse/pfx14:return/pfx14:synopsis/@xsi:nil"/>
                <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx14:GetCompanyDetailResponse/pfx14:return/pfx14:synopsis"/>
            </pfx15:synopsis>
            <pfx15:top-excutives>
                <xsl:value-of select="tib:render-xml($SOAPRequestReply/outputMessage/pfx14:GetCompanyDetailResponse/pfx14:return/pfx14:top-executives,true())"/>
            </pfx15:top-excutives>
            <pfx15:keyFinancials>
                <xsl:for-each select="$SOAPRequestReply/outputMessage/pfx14:GetCompanyDetailResponse/pfx14:return/pfx14:keyFinancials/pfx14:marketValueInfo">
                    <pfx15:marketValueInfo>
                        <xsl:if test="pfx14:marketValue">
                            <pfx15:marketValue>
                                <xsl:copy-of select="pfx14:marketValue/@xsi:nil"/>
                                <xsl:value-of select="pfx14:marketValue"/>
                            </pfx15:marketValue>
                        </xsl:if>
                        <xsl:if test="pfx14:marketValueDate">
                            <pfx15:marketValueDate>
                                <xsl:copy-of select="pfx14:marketValueDate/@xsi:nil"/>
                                <xsl:value-of select="pfx14:marketValueDate"/>
                            </pfx15:marketValueDate>
                        </xsl:if>
                    </pfx15:marketValueInfo>
                </xsl:for-each>
                <xsl:for-each select="$SOAPRequestReply/outputMessage/pfx14:GetCompanyDetailResponse/pfx14:return/pfx14:keyFinancials/pfx14:incomeAssets">
                    <pfx15:incomesAssets>
                        <xsl:if test="pfx14:period">
                            <pfx15:period>
                                <xsl:copy-of select="pfx14:period/@xsi:nil"/>
                                <xsl:value-of select="pfx14:period"/>
                            </pfx15:period>
                        </xsl:if>
                        <xsl:if test="pfx14:assets">
                            <pfx15:assets>
                                <xsl:copy-of select="pfx14:assets/@xsi:nil"/>
                                <xsl:value-of select="pfx14:assets"/>
                            </pfx15:assets>
                        </xsl:if>
                        <xsl:if test="pfx14:salesGrowthPercent">
                            <pfx15:salesGrowthPercent>
                                <xsl:copy-of select="pfx14:salesGrowthPercent/@xsi:nil"/>
                                <xsl:value-of select="pfx14:salesGrowthPercent"/>
                            </pfx15:salesGrowthPercent>
                        </xsl:if>
                        <xsl:if test="pfx14:netIncome">
                            <pfx15:netIncome>
                                <xsl:copy-of select="pfx14:netIncome/@xsi:nil"/>
                                <xsl:value-of select="pfx14:netIncome"/>
                            </pfx15:netIncome>
                        </xsl:if>
                    </pfx15:incomesAssets>
                </xsl:for-each>
            </pfx15:keyFinancials>
            <pfx15:ethnicity>
                <xsl:copy-of select="$SOAPRequestReply/outputMessage/pfx14:GetCompanyDetailResponse/pfx14:return/pfx14:ethnicity/@xsi:nil"/>
                <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx14:GetCompanyDetailResponse/pfx14:return/pfx14:ethnicity"/>
            </pfx15:ethnicity>
            <pfx15:womenOwned>
                <xsl:copy-of select="$SOAPRequestReply/outputMessage/pfx14:GetCompanyDetailResponse/pfx14:return/pfx14:womenOwned/@xsi:nil"/>
                <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx14:GetCompanyDetailResponse/pfx14:return/pfx14:womenOwned"/>
            </pfx15:womenOwned>
            <pfx15:yearFounded>
                <xsl:copy-of select="$SOAPRequestReply/outputMessage/pfx14:GetCompanyDetailResponse/pfx14:return/pfx14:yearFounded/@xsi:nil"/>
                <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx14:GetCompanyDetailResponse/pfx14:return/pfx14:yearFounded"/>
            </pfx15:yearFounded>
            <pfx15:legalStatus>
                <xsl:copy-of select="$SOAPRequestReply/outputMessage/pfx14:GetCompanyDetailResponse/pfx14:return/pfx14:legalStatus/@xsi:nil"/>
                <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx14:GetCompanyDetailResponse/pfx14:return/pfx14:legalStatus"/>
            </pfx15:legalStatus>
            <xsl:for-each select="$SOAPRequestReply/outputMessage/pfx14:GetCompanyDetailResponse/pfx14:return/pfx14:rankings">
                <pfx15:rankings>
                    <xsl:for-each select="pfx14:rank">
                        <pfx15:rank>
                            <xsl:if test="pfx14:rankNumber">
                                <pfx15:rankNumber>
                                    <xsl:copy-of select="pfx14:rankNumber/@xsi:nil"/>
                                    <xsl:value-of select="pfx14:rankNumber"/>
                                </pfx15:rankNumber>
                            </xsl:if>
                            <xsl:if test="pfx14:definition">
                                <pfx15:definition>
                                    <xsl:copy-of select="pfx14:definition/@xsi:nil"/>
                                    <xsl:value-of select="pfx14:definition"/>
                                </pfx15:definition>
                            </xsl:if>
                        </pfx15:rank>
                    </xsl:for-each>
                </pfx15:rankings>
            </xsl:for-each>
        </pfx15:CompanyDetail>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType ref="pfx15:CompanyDetail"/>
    <pd:endX>630</pd:endX>
    <pd:endY>183</pd:endY>
    <pd:errorSchemas>
        <errorReport ref="pfx7:Error"/>
    </pd:errorSchemas>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1314244713029</pd:targetNamespace>
    <pd:activity name="Generate Error">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>514</pd:x>
        <pd:y>397</pd:y>
        <config>
            <faultName>errorReport</faultName>
        </config>
        <pd:coercions>
            <pd:coercion xpath="$_error/ns1:ErrorReport/Data/*" element="pfx7:Error"/>
        </pd:coercions>
        <pd:inputBindings>
            <pfx5:ActivityInput>
                <message>
                    <xsl:value-of select="$_error/ns1:ErrorReport/Msg"/>
                </message>
                <xsl:if test="$_error/ns1:ErrorReport/MsgCode">
                    <messageCode>
                        <xsl:value-of select="$_error/ns1:ErrorReport/MsgCode"/>
                    </messageCode>
                </xsl:if>
                <data>
                    <xsl:choose>
                        <xsl:when test="exists($_error/ns1:ErrorReport/Data/pfx7:Error)">
                            <xsl:copy-of select="$_error/ns1:ErrorReport/Data/pfx7:Error"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <pfx7:Error>
                                <pfx7:src>
                                    <xsl:value-of select="$_error/ns1:ErrorReport/ProcessStack"/>
                                </pfx7:src>
                                <pfx7:error_code>
                                    <xsl:value-of select="$_error/ns1:ErrorReport/MsgCode"/>
                                </pfx7:error_code>
                                <pfx7:error_message>
                                    <xsl:value-of select="concat(&quot;BW response error: &quot;,$_error/ns1:ErrorReport/Msg)"/>
                                </pfx7:error_message>
                                <pfx7:stack_trace>
                                    <xsl:value-of select="$_error/ns1:ErrorReport/StackTrace"/>
                                </pfx7:stack_trace>
                            </pfx7:Error>
                        </xsl:otherwise>
                    </xsl:choose>
                </data>
            </pfx5:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:group name="Group">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>188</pd:x>
        <pd:y>28</pd:y>
        <pd:width>324</pd:width>
        <pd:height>288</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>repeat</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:indexSlot>i</pd:indexSlot>
            <pd:activityOutputName/>
            <pd:repeatCondition>false() or exists($SOAPRequestReply/outputMessage/pfx14:GetCompanyDetailResponse/pfx14:return)</pd:repeatCondition>
            <pd:accumulateOutput>false</pd:accumulateOutput>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>SOAPRequestReply</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Sleep</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>SOAPRequestReply</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Null</pd:from>
            <pd:to>Generate-Error-1</pd:to>
            <pd:xpathDescription>Error</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-65485</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>$i&gt;5</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>Null</pd:from>
            <pd:to>Sleep</pd:to>
            <pd:xpathDescription>IOException</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>SOAPRequestReply</pd:from>
            <pd:to>Null</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-65485</pd:lineColor>
            <pd:conditionType>error</pd:conditionType>
        </pd:transition>
        <pd:activity name="Null">
            <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
            <pd:resourceType>ae.activities.null</pd:resourceType>
            <pd:x>262</pd:x>
            <pd:y>202</pd:y>
            <config/>
            <pd:inputBindings/>
        </pd:activity>
        <pd:activity name="Sleep">
            <pd:type>com.tibco.plugin.timer.SleepActivity</pd:type>
            <pd:resourceType>ae.activities.sleep</pd:resourceType>
            <pd:x>434</pd:x>
            <pd:y>202</pd:y>
            <config/>
            <pd:inputBindings>
                <ns0:SleepInputSchema>
                    <IntervalInMillisec>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/ExternalServices/MDMServer/WebService/RetryInterval_secs * 1000"/>
                    </IntervalInMillisec>
                </ns0:SleepInputSchema>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Generate-Error-1">
            <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
            <pd:resourceType>ae.activities.throw</pd:resourceType>
            <pd:x>355</pd:x>
            <pd:y>261</pd:y>
            <config>
                <faultName>errorReport</faultName>
            </config>
            <pd:inputBindings>
                <pfx5:ActivityInput>
                    <message>
                        <xsl:value-of select="$_error/ns1:ErrorReport/Msg"/>
                    </message>
                    <xsl:if test="$_error/ns1:ErrorReport/MsgCode">
                        <messageCode>
                            <xsl:value-of select="$_error/ns1:ErrorReport/MsgCode"/>
                        </messageCode>
                    </xsl:if>
                    <data>
                        <pfx7:Error>
                            <pfx7:src>
                                <xsl:value-of select="$_error/ns1:ErrorReport/ProcessStack"/>
                            </pfx7:src>
                            <pfx7:error_code>
                                <xsl:value-of select="$_error/ns1:ErrorReport/MsgCode"/>
                            </pfx7:error_code>
                            <pfx7:error_message>
                                <xsl:value-of select="$_error/ns1:ErrorReport/Msg"/>
                            </pfx7:error_message>
                            <pfx7:stack_trace>
                                <xsl:value-of select="$_error/ns1:ErrorReport/StackTrace"/>
                            </pfx7:stack_trace>
                        </pfx7:Error>
                    </data>
                </pfx5:ActivityInput>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="SOAPRequestReply">
            <pd:type>com.tibco.plugin.soap.SOAPSendReceiveActivity</pd:type>
            <pd:resourceType>ae.activities.SOAPSendReceiveUI</pd:resourceType>
            <pd:x>338</pd:x>
            <pd:y>98</pd:y>
            <config>
                <timeout>0</timeout>
                <soapAttachmentStyle>SwA</soapAttachmentStyle>
                <service>pfx14:HooversAPI-34</service>
                <servicePort>HooversAPI-34Soap11</servicePort>
                <operation>GetCompanyDetail</operation>
                <soapAction/>
                <endpointURL>http://hapi-dev.hoovers.com/HooversAPI-34</endpointURL>
            </config>
            <pd:inputBindings>
                <inputMessage>
                    <headers>
                        <Header.parameters>
                            <pfx14:API-KEY>
                                <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/ExternalServices/Hoovers/WebService/API-KEY"/>
                            </pfx14:API-KEY>
                        </Header.parameters>
                    </headers>
                    <pfx14:GetCompanyDetailRequest>
                        <pfx14:uniqueId>
                            <xsl:value-of select="$Start/pfx14:GetCompanyDetailRequest/pfx14:uniqueId"/>
                        </pfx14:uniqueId>
                    </pfx14:GetCompanyDetailRequest>
                </inputMessage>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>Generate Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65485</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Group</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>
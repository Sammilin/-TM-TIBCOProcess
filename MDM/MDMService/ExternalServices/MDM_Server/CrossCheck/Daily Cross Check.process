<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="http://www.trendmicro.com/ESB/schemas/MDM/EMEA_ERP/Customer" xmlns:TM="java://com.trendmicro.TMBWUtilities" xmlns:ns12="http://www.trendmicro.com/ESB/ACS/schemas/SMF" xmlns:ns5="http://www.tibco.com/pe/EngineTypes" xmlns:ns6="http://www.trendmicro.com/ESB/schemas/error" xmlns:ns7="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:pfx="http://www.trendmicro.com/ESB/schemas/MDM/MDMServer" xmlns:ns8="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns2="http://www.trendmicro.com/ESB/schemas/Common" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns1="http://www.trendmicro.com/ESB/schemas/SMF" xmlns:ns4="http://www.trendmicro.com/ESB/schemas/MDM/SFDC/Customer" xmlns:ns3="http://www.trendmicro.com/ESB/schemas/MDM/EMEA_ERP/Contact" xmlns:ns52="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:ns0="http://www.trendmicro.com/ESB/schemas/MDM/TeO/Customer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <xsd:import namespace="http://www.trendmicro.com/ESB/schemas/MDM/MDMServer" schemaLocation="/XSD/Client/MDMServer/MDMServer.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/schemas/SMF" schemaLocation="/XSD/Common/SMF.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/schemas/error" schemaLocation="/XSD/Common/error.xsd"/>
    <pd:name>ExternalServices/MDM_Server/CrossCheck/Daily Cross Check.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="DataSource" type="xsd:string"/>
                    <xsd:element name="Type" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="TraceID" type="xsd:string" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>150</pd:startX>
    <pd:startY>63</pd:startY>
    <pd:returnBindings/>
    <pd:endName>End</pd:endName>
    <pd:endX>1050</pd:endX>
    <pd:endY>334</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1347526390161</pd:targetNamespace>
    <pd:activity name="Get CS Result">
        <pd:type>com.tibco.plugin.jdbc.JDBCGeneralActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCGeneralActivity</pd:resourceType>
        <pd:x>270</pd:x>
        <pd:y>62</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <maxRows>0</maxRows>
            <jdbcSharedConfig>/Resources/Database/MDM Server JDBC Connection.sharedjdbc</jdbcSharedConfig>
        </config>
        <pd:inputBindings>
            <jdbcGeneralActivityInput>
                <statement>
                    <xsl:value-of select="concat(&quot;Execute EMEA_MDM.PRC_SELECT_CROSSCHECK_RESULT '&quot;, $Start/root/DataSource,&quot;'&quot;)"/>
                </statement>
                <timeout>
                    <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/Services/CrossCheck/DBTimeOut"/>
                </timeout>
            </jdbcGeneralActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map Data">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>443</pd:x>
        <pd:y>62</pd:y>
        <config>
            <element>
                <xsd:element name="group">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="crosscheck_result" type="pfx:CrossCheckType" minOccurs="0" maxOccurs="unbounded"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <group>
                <xsl:for-each select="$Get-CS-Result/jdbcGeneralActivityOutput/unknownResultset/row">
                    <crosscheck_result>
                        <pfx:data_source>
                            <xsl:value-of select="column[name='data_source']/value"/>
                        </pfx:data_source>
                        <pfx:message_type>
                            <xsl:value-of select="column[name='message_type']/value"/>
                        </pfx:message_type>
                        <xsl:if test="column[name='contact_id']/value">
                            <pfx:contact_id>
                                <xsl:value-of select="column[name='contact_id']/value"/>
                            </pfx:contact_id>
                        </xsl:if>
                        <pfx:source_company_id>
                            <xsl:value-of select="column[name='source_company_id']/value"/>
                        </pfx:source_company_id>
                        <xsl:if test="column[name='source_contact_id']/value">
                            <pfx:source_contact_id>
                                <xsl:value-of select="column[name='source_contact_id']/value"/>
                            </pfx:source_contact_id>
                        </xsl:if>
                        <pfx:target_table>
                            <xsl:value-of select="column[name='target_table']/value"/>
                        </pfx:target_table>
                        <pfx:source_table>
                            <xsl:value-of select="column[name='source_table']/value"/>
                        </pfx:source_table>
                        <pfx:log_date>
                            <xsl:value-of select="column[name='log_date']/value"/>
                        </pfx:log_date>
                        <pfx:gold_id>
                            <xsl:value-of select="column[name='gold_id']/value"/>
                        </pfx:gold_id>
                        <xsl:if test="column[name='address_id']/value">
                            <pfx:address_id>
                                <xsl:value-of select="column[name='address_id']/value"/>
                            </pfx:address_id>
                        </xsl:if>
                        <xsl:if test="column[name='source_location_id']/value">
                            <pfx:source_location_id>
                                <xsl:value-of select="column[name='source_location_id']/value"/>
                            </pfx:source_location_id>
                        </xsl:if>
                        <pfx:batch_id>
                            <xsl:value-of select="column[name='batch_id']/value"/>
                        </pfx:batch_id>
                    </crosscheck_result>
                </xsl:for-each>
            </group>
        </pd:inputBindings>
    </pd:activity>
    <pd:group name="Group">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>138</pd:x>
        <pd:y>122</pd:y>
        <pd:width>834</pd:width>
        <pd:height>418</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>inputLoop</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:over>$Map-Data/group/crosscheck_result</pd:over>
            <pd:iterationElementSlot>current</pd:iterationElementSlot>
            <pd:indexSlot>i</pd:indexSlot>
            <pd:activityOutputName/>
            <pd:accumulateOutput>false</pd:accumulateOutput>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>GetRallyView</pd:to>
            <pd:xpathDescription>RALLYING</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>upper-case($current/crosscheck_result/pfx:data_source)="RALLYING"</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>GetNavisionView</pd:to>
            <pd:xpathDescription>Navision or Teo</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>upper-case($current/crosscheck_result/pfx:data_source)="NAVISION"  or
upper-case($current/crosscheck_result/pfx:data_source)="TEO"</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>GetSFDCView</pd:to>
            <pd:xpathDescription>SFDC</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>upper-case($current/crosscheck_result/pfx:data_source)="SFDC"</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>CrossCheck ExecuteRequest</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Error Handling Process</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>GetNavisionView</pd:from>
            <pd:to>SelectCompanyByGoldID</pd:to>
            <pd:xpathDescription>Teo</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>upper-case($current/crosscheck_result/pfx:data_source)="TEO" and 
lower-case($current/crosscheck_result/pfx:target_table)="customer" and 
lower-case($current/crosscheck_result/pfx:message_type) = "update"</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>GetSFDCView</pd:from>
            <pd:to>SelectSourceID</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>GetRallyView</pd:from>
            <pd:to>SelectSourceID</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>SelectCompanyByGoldID</pd:from>
            <pd:to>SelectSourceID</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>GetNavisionView</pd:from>
            <pd:to>SelectSourceID</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>CrossCheck MDM ExcuteData Mapping</pd:from>
            <pd:to>CrossCheck ExecuteRequest</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>SelectSourceID</pd:from>
            <pd:to>CrossCheck MDM ExcuteData Mapping</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Catch</pd:from>
            <pd:to>Error Handling Process</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="GetNavisionView">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>301</pd:x>
            <pd:y>190</pd:y>
            <config>
                <processName>/ExternalServices/MDM_Server/CrossCheck/GetNavisionView.process</processName>
            </config>
            <pd:inputBindings>
                <root>
                    <Type>
                        <xsl:value-of select="lower-case($current/crosscheck_result/pfx:target_table)"/>
                    </Type>
                    <xsl:choose>
                        <xsl:when test="lower-case($current/crosscheck_result/pfx:target_table)= &quot;customer&quot;">
                            <source_id>
                                <xsl:value-of select="$current/crosscheck_result/pfx:source_company_id"/>
                            </source_id>
                        </xsl:when>
                        <xsl:otherwise>
                            <source_id>
                                <xsl:value-of select="$current/crosscheck_result/pfx:source_contact_id"/>
                            </source_id>
                        </xsl:otherwise>
                    </xsl:choose>
                </root>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="GetSFDCView">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>306</pd:x>
            <pd:y>317</pd:y>
            <config>
                <processName>/ExternalServices/MDM_Server/CrossCheck/GetSFDCView.process</processName>
            </config>
            <pd:inputBindings>
                <root>
                    <Type>
                        <xsl:value-of select="$current/crosscheck_result/pfx:target_table"/>
                    </Type>
                    <xsl:choose>
                        <xsl:when test="lower-case($current/crosscheck_result/pfx:target_table)= &quot;customer&quot;">
                            <source_id>
                                <xsl:value-of select="$current/crosscheck_result/pfx:source_company_id"/>
                            </source_id>
                        </xsl:when>
                        <xsl:when test="lower-case($current/crosscheck_result/pfx:target_table)= &quot;contact&quot;">
                            <source_id>
                                <xsl:value-of select="$current/crosscheck_result/pfx:source_contact_id"/>
                            </source_id>
                        </xsl:when>
                        <xsl:otherwise>
                            <source_id>
                                <xsl:value-of select="$current/crosscheck_result/pfx:source_location_id"/>
                            </source_id>
                        </xsl:otherwise>
                    </xsl:choose>
                </root>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="GetRallyView">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>313</pd:x>
            <pd:y>426</pd:y>
            <config>
                <processName>/ExternalServices/MDM_Server/CrossCheck/GetRallyView.process</processName>
            </config>
            <pd:inputBindings>
                <root>
                    <source_id>
                        <xsl:value-of select="$current/crosscheck_result/pfx:source_company_id"/>
                    </source_id>
                </root>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="CrossCheck MDM ExcuteData Mapping">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>626</pd:x>
            <pd:y>313</pd:y>
            <config>
                <element ref="ns1:SMF"/>
            </config>
            <pd:inputBindings>
                <ns1:SMF>
                    <ns1:SMFHeader>
                        <ns2:MessageKey>
                            <xsl:value-of select="TM:getGUID()"/>
                        </ns2:MessageKey>
                        <xsl:choose>
                            <xsl:when test="$current/crosscheck_result/pfx:data_source=&quot;NAVISION&quot;">
                                <xsl:choose>
                                    <xsl:when test="$current/crosscheck_result/pfx:target_table=&quot;Customer&quot;">
                                        <ns2:ServiceName>
                                            <xsl:value-of select="if ($current/crosscheck_result/pfx:message_type=&quot;create&quot;) then &quot;CreateNavCust&quot;  else 'UpdateNavCust'"/>
                                        </ns2:ServiceName>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <ns2:ServiceName>
                                            <xsl:value-of select="if ($current/crosscheck_result/pfx:message_type=&quot;create&quot;) then &quot;CreateNavContact&quot;  else 'UpdateNavContact'"/>
                                        </ns2:ServiceName>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:when>
                            <xsl:when test="$current/crosscheck_result/pfx:data_source=&quot;TEO&quot;">
                                <xsl:choose>
                                    <xsl:when test="$current/crosscheck_result/pfx:target_table=&quot;Customer&quot;">
                                        <ns2:ServiceName>
                                            <xsl:value-of select="if ($current/crosscheck_result/pfx:message_type=&quot;create&quot;) then &quot;CreateTeOCust&quot;  else 'UpdateTeOCust'"/>
                                        </ns2:ServiceName>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <ns2:ServiceName>
                                            <xsl:value-of select="if ($current/crosscheck_result/pfx:message_type=&quot;create&quot;) then &quot;CreateTeOContact&quot;  else 'UpdateTeOContact'"/>
                                        </ns2:ServiceName>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:when>
                            <xsl:when test="$current/crosscheck_result/pfx:data_source=&quot;SFDC&quot;">
                                <xsl:choose>
                                    <xsl:when test="lower-case($current/crosscheck_result/pfx:target_table)='customer'">
                                        <ns2:ServiceName>
                                            <xsl:value-of select="if ($current/crosscheck_result/pfx:message_type=&quot;create&quot;) then &quot;CreateSfCust&quot;  else 'UpdateSfCust'"/>
                                        </ns2:ServiceName>
                                    </xsl:when>
                                    <xsl:when test="lower-case($current/crosscheck_result/pfx:target_table)='contact'">
                                        <ns2:ServiceName>
                                            <xsl:value-of select="if ($current/crosscheck_result/pfx:message_type=&quot;create&quot;) then &quot;CreateSfContact&quot;  else 'UpdateSfContact'"/>
                                        </ns2:ServiceName>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <ns2:ServiceName>
                                            <xsl:value-of select="if ($current/crosscheck_result/pfx:message_type=&quot;create&quot;) then 'CreateSfLocation'  else 'UpdateSfLocation'"/>
                                        </ns2:ServiceName>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:when>
                            <xsl:otherwise>
                                <ns2:ServiceName>
                                    <xsl:value-of select="&quot;UpdateRalCust&quot;"/>
                                </ns2:ServiceName>
                            </xsl:otherwise>
                        </xsl:choose>
                        <ns2:ServiceVersion>
                            <xsl:value-of select="&quot;V1.0&quot;"/>
                        </ns2:ServiceVersion>
                        <ns2:SourceID>
                            <xsl:value-of select="&quot;MDM&quot;"/>
                        </ns2:SourceID>
                        <ns2:SourceIP>
                            <xsl:value-of select="TM:getIPAddress()"/>
                        </ns2:SourceIP>
                        <ns2:RqTimestamp>
                            <xsl:value-of select="current-dateTime()"/>
                        </ns2:RqTimestamp>
                    </ns1:SMFHeader>
                    <ns1:SMFBody>
                        <xsl:choose>
                            <xsl:when test="$current/crosscheck_result/pfx:data_source=&quot;NAVISION&quot; or $current/crosscheck_result/pfx:data_source=&quot;TEO&quot;">
                                <ns1:Navision>
                                    <xsl:choose>
                                        <xsl:when test="lower-case($current/crosscheck_result/pfx:target_table)=&quot;customer&quot;">
                                            <ns1:Customer>
                                                <xsl:copy-of select="$GetNavisionView/root/Customer/ns:Customer"/>
                                            </ns1:Customer>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <ns1:Contact>
                                                <xsl:copy-of select="$GetNavisionView/root/Contact/ns3:Contact"/>
                                            </ns1:Contact>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                </ns1:Navision>
                            </xsl:when>
                            <xsl:when test="$current/crosscheck_result/pfx:data_source=&quot;SFDC&quot;">
                                <ns1:SFDC>
                                    <xsl:choose>
                                        <xsl:when test="lower-case($current/crosscheck_result/pfx:target_table)=&quot;customer&quot;">
                                            <xsl:for-each select="$GetSFDCView/root/Customer[1]">
                                                <ns1:Customer>
                                                    <ns4:SfdcPartnerId>
                                                        <xsl:value-of select="ns4:SfdcPartnerId"/>
                                                    </ns4:SfdcPartnerId>
                                                    <xsl:if test="ns4:MdmPartnerId">
                                                        <ns4:MdmPartnerId>
                                                            <xsl:copy-of select="ns4:MdmPartnerId/@xsi:nil"/>
                                                            <xsl:value-of select="ns4:MdmPartnerId"/>
                                                        </ns4:MdmPartnerId>
                                                    </xsl:if>
                                                    <ns4:Active>
                                                        <xsl:value-of select="ns4:Active"/>
                                                    </ns4:Active>
                                                    <ns4:AccountName>
                                                        <xsl:value-of select="ns4:AccountName"/>
                                                    </ns4:AccountName>
                                                    <ns4:AccountType>
                                                        <xsl:value-of select="ns4:AccountType"/>
                                                    </ns4:AccountType>
                                                    <xsl:if test="ns4:AccountOtherType">
                                                        <ns4:AccountOtherType>
                                                            <xsl:value-of select="ns4:AccountOtherType"/>
                                                        </ns4:AccountOtherType>
                                                    </xsl:if>
                                                    <xsl:if test="ns4:AccountStatus">
                                                        <ns4:AccountStatus>
                                                            <xsl:value-of select="ns4:AccountStatus"/>
                                                        </ns4:AccountStatus>
                                                    </xsl:if>
                                                    <xsl:if test="ns4:AKA">
                                                        <ns4:AKA>
                                                            <xsl:value-of select="ns4:AKA"/>
                                                        </ns4:AKA>
                                                    </xsl:if>
                                                    <xsl:if test="ns4:VatNumber">
                                                        <ns4:VatNumber>
                                                            <xsl:value-of select="ns4:VatNumber"/>
                                                        </ns4:VatNumber>
                                                    </xsl:if>
                                                    <xsl:if test="ns4:MainPhoneNumber">
                                                        <ns4:MainPhoneNumber>
                                                            <xsl:value-of select="ns4:MainPhoneNumber"/>
                                                        </ns4:MainPhoneNumber>
                                                    </xsl:if>
                                                    <xsl:if test="ns4:Fax">
                                                        <ns4:Fax>
                                                            <xsl:value-of select="ns4:Fax"/>
                                                        </ns4:Fax>
                                                    </xsl:if>
                                                    <ns4:Country>
                                                        <xsl:value-of select="ns4:Country"/>
                                                    </ns4:Country>
                                                    <xsl:if test="ns4:Website">
                                                        <ns4:Website>
                                                            <xsl:value-of select="ns4:Website"/>
                                                        </ns4:Website>
                                                    </xsl:if>
                                                    <xsl:if test="ns4:EmailDomain">
                                                        <ns4:EmailDomain>
                                                            <xsl:value-of select="ns4:EmailDomain"/>
                                                        </ns4:EmailDomain>
                                                    </xsl:if>
                                                    <xsl:if test="ns4:NavisionID">
                                                        <ns4:NavisionID>
                                                            <xsl:value-of select="ns4:NavisionID"/>
                                                        </ns4:NavisionID>
                                                    </xsl:if>
                                                    <xsl:if test="ns4:DUNSName">
                                                        <ns4:DUNSName>
                                                            <xsl:value-of select="ns4:DUNSName"/>
                                                        </ns4:DUNSName>
                                                    </xsl:if>
                                                    <xsl:if test="ns4:DUNS">
                                                        <ns4:DUNS>
                                                            <xsl:value-of select="ns4:DUNS"/>
                                                        </ns4:DUNS>
                                                    </xsl:if>
                                                    <xsl:if test="ns4:DUNSDirectParent">
                                                        <ns4:DUNSDirectParent>
                                                            <xsl:value-of select="ns4:DUNSDirectParent"/>
                                                        </ns4:DUNSDirectParent>
                                                    </xsl:if>
                                                    <xsl:if test="ns4:DUNSGlobalParent">
                                                        <ns4:DUNSGlobalParent>
                                                            <xsl:value-of select="ns4:DUNSGlobalParent"/>
                                                        </ns4:DUNSGlobalParent>
                                                    </xsl:if>
                                                    <ns4:BillingCity>
                                                        <xsl:value-of select="ns4:BillingCity"/>
                                                    </ns4:BillingCity>
                                                    <ns4:BillingCountry>
                                                        <xsl:value-of select="ns4:BillingCountry"/>
                                                    </ns4:BillingCountry>
                                                    <ns4:BillingPostalCode>
                                                        <xsl:value-of select="ns4:BillingPostalCode"/>
                                                    </ns4:BillingPostalCode>
                                                    <ns4:BillingState>
                                                        <xsl:value-of select="ns4:BillingState"/>
                                                    </ns4:BillingState>
                                                    <ns4:BillingStreet>
                                                        <xsl:value-of select="ns4:BillingStreet"/>
                                                    </ns4:BillingStreet>
                                                    <xsl:if test="ns4:ParentAccount">
                                                        <ns4:ParentAccount>
                                                            <xsl:value-of select="ns4:ParentAccount"/>
                                                        </ns4:ParentAccount>
                                                    </xsl:if>
                                                    <ns4:PartnerTier>
                                                        <xsl:value-of select="ns4:PartnerTier"/>
                                                    </ns4:PartnerTier>
                                                    <xsl:if test="ns4:MergedToSfdcPartnerId">
                                                        <ns4:MergedToSfdcPartnerId>
                                                            <xsl:value-of select="ns4:MergedToSfdcPartnerId"/>
                                                        </ns4:MergedToSfdcPartnerId>
                                                    </xsl:if>
                                                    <ns4:recordType>
                                                        <xsl:value-of select="ns4:recordType"/>
                                                    </ns4:recordType>
                                                </ns1:Customer>
                                            </xsl:for-each>
                                        </xsl:when>
                                        <xsl:when test="lower-case($current/crosscheck_result/pfx:target_table)=&quot;contact&quot;">
                                            <xsl:for-each select="$GetSFDCView/root/Contact[1]">
                                                <ns1:Contact>
                                                    <ns4:MdmPartnerId>
                                                        <xsl:value-of select="ns4:MdmPartnerId"/>
                                                    </ns4:MdmPartnerId>
                                                    <xsl:if test="ns4:MdmContactId">
                                                        <ns4:MdmContactId>
                                                            <xsl:value-of select="ns4:MdmContactId"/>
                                                        </ns4:MdmContactId>
                                                    </xsl:if>
                                                    <xsl:if test="ns4:MdmLocationId">
                                                        <ns4:MdmLocationId>
                                                            <xsl:value-of select="ns4:MdmLocationId"/>
                                                        </ns4:MdmLocationId>
                                                    </xsl:if>
                                                    <ns4:SfdcContactId>
                                                        <xsl:value-of select="ns4:SfdcContactId"/>
                                                    </ns4:SfdcContactId>
                                                    <ns4:Salutation>
                                                        <xsl:value-of select="ns4:Salutation"/>
                                                    </ns4:Salutation>
                                                    <ns4:firstName>
                                                        <xsl:value-of select="ns4:firstName"/>
                                                    </ns4:firstName>
                                                    <ns4:lastName>
                                                        <xsl:value-of select="ns4:lastName"/>
                                                    </ns4:lastName>
                                                    <ns4:sfdcPartnerId>
                                                        <xsl:value-of select="ns4:sfdcPartnerId"/>
                                                    </ns4:sfdcPartnerId>
                                                    <xsl:if test="ns4:title">
                                                        <ns4:title>
                                                            <xsl:value-of select="ns4:title"/>
                                                        </ns4:title>
                                                    </xsl:if>
                                                    <xsl:if test="ns4:jobFunction">
                                                        <ns4:jobFunction>
                                                            <xsl:value-of select="ns4:jobFunction"/>
                                                        </ns4:jobFunction>
                                                    </xsl:if>
                                                    <xsl:if test="ns4:language">
                                                        <ns4:language>
                                                            <xsl:value-of select="ns4:language"/>
                                                        </ns4:language>
                                                    </xsl:if>
                                                    <xsl:if test="ns4:sfdcLocationId">
                                                        <ns4:sfdcLocationId>
                                                            <xsl:value-of select="ns4:sfdcLocationId"/>
                                                        </ns4:sfdcLocationId>
                                                    </xsl:if>
                                                    <ns4:DirectLine>
                                                        <xsl:value-of select="ns4:DirectLine"/>
                                                    </ns4:DirectLine>
                                                    <xsl:if test="ns4:HomePhone">
                                                        <ns4:HomePhone>
                                                            <xsl:value-of select="ns4:HomePhone"/>
                                                        </ns4:HomePhone>
                                                    </xsl:if>
                                                    <xsl:if test="ns4:mobile">
                                                        <ns4:mobile>
                                                            <xsl:value-of select="ns4:mobile"/>
                                                        </ns4:mobile>
                                                    </xsl:if>
                                                    <ns4:email>
                                                        <xsl:value-of select="ns4:email"/>
                                                    </ns4:email>
                                                    <xsl:if test="ns4:primaryContact">
                                                        <ns4:primaryContact>
                                                            <xsl:copy-of select="ns4:primaryContact/@xsi:nil"/>
                                                            <xsl:value-of select="ns4:primaryContact"/>
                                                        </ns4:primaryContact>
                                                    </xsl:if>
                                                    <ns4:active>
                                                        <xsl:value-of select="ns4:active"/>
                                                    </ns4:active>
                                                    <xsl:if test="ns4:DirectLineExt">
                                                        <ns4:DirectLineExt>
                                                            <xsl:value-of select="ns4:DirectLineExt"/>
                                                        </ns4:DirectLineExt>
                                                    </xsl:if>
                                                    <xsl:if test="ns4:recordType">
                                                        <ns4:recordType>
                                                            <xsl:value-of select="ns4:recordType"/>
                                                        </ns4:recordType>
                                                    </xsl:if>
                                                    <xsl:if test="ns4:MergedToSfdcContactId">
                                                        <ns4:MergedToSfdcContactId>
                                                            <xsl:value-of select="ns4:MergedToSfdcContactId"/>
                                                        </ns4:MergedToSfdcContactId>
                                                    </xsl:if>
                                                </ns1:Contact>
                                            </xsl:for-each>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <xsl:for-each select="$GetSFDCView/root/Location[1]">
                                                <ns1:Location>
                                                    <ns4:SfdcPartnerId>
                                                        <xsl:value-of select="ns4:SfdcPartnerId"/>
                                                    </ns4:SfdcPartnerId>
                                                    <ns4:MdmPartnerId>
                                                        <xsl:value-of select="ns4:MdmPartnerId"/>
                                                    </ns4:MdmPartnerId>
                                                    <xsl:if test="ns4:SfdcLocationId">
                                                        <ns4:SfdcLocationId>
                                                            <xsl:value-of select="ns4:SfdcLocationId"/>
                                                        </ns4:SfdcLocationId>
                                                    </xsl:if>
                                                    <xsl:if test="ns4:MdmLocationId">
                                                        <ns4:MdmLocationId>
                                                            <xsl:value-of select="ns4:MdmLocationId"/>
                                                        </ns4:MdmLocationId>
                                                    </xsl:if>
                                                    <xsl:if test="ns4:Account">
                                                        <ns4:Account>
                                                            <xsl:value-of select="ns4:Account"/>
                                                        </ns4:Account>
                                                    </xsl:if>
                                                    <ns4:PrimaryLocation>
                                                        <xsl:value-of select="ns4:PrimaryLocation"/>
                                                    </ns4:PrimaryLocation>
                                                    <xsl:if test="ns4:Street">
                                                        <ns4:Street>
                                                            <xsl:value-of select="ns4:Street"/>
                                                        </ns4:Street>
                                                    </xsl:if>
                                                    <xsl:if test="ns4:City">
                                                        <ns4:City>
                                                            <xsl:value-of select="ns4:City"/>
                                                        </ns4:City>
                                                    </xsl:if>
                                                    <xsl:if test="ns4:CountyRegion">
                                                        <ns4:CountyRegion>
                                                            <xsl:value-of select="ns4:CountyRegion"/>
                                                        </ns4:CountyRegion>
                                                    </xsl:if>
                                                    <xsl:if test="ns4:Country">
                                                        <ns4:Country>
                                                            <xsl:value-of select="ns4:Country"/>
                                                        </ns4:Country>
                                                    </xsl:if>
                                                    <xsl:if test="ns4:PostalCode">
                                                        <ns4:PostalCode>
                                                            <xsl:value-of select="ns4:PostalCode"/>
                                                        </ns4:PostalCode>
                                                    </xsl:if>
                                                    <xsl:if test="ns4:recordType">
                                                        <ns4:recordType>
                                                            <xsl:value-of select="ns4:recordType"/>
                                                        </ns4:recordType>
                                                    </xsl:if>
                                                </ns1:Location>
                                            </xsl:for-each>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                </ns1:SFDC>
                            </xsl:when>
                            <xsl:otherwise>
                                <ns1:Rallying>
                                    <ns1:Partner>
                                        <xsl:copy-of select="$GetRallyView/root/Customer/ancestor-or-self::*/namespace::node()"/>
                                        <xsl:copy-of select="$GetRallyView/root/Customer/@*"/>
                                        <xsl:copy-of select="$GetRallyView/root/Customer/node()"/>
                                    </ns1:Partner>
                                </ns1:Rallying>
                            </xsl:otherwise>
                        </xsl:choose>
                        <ns1:MDM>
                            <ns1:SourceIDMapping>
                                <xsl:copy-of select="$SelectSourceID/SourceIDMapping/ancestor-or-self::*/namespace::node()"/>
                                <xsl:copy-of select="$SelectSourceID/SourceIDMapping/@*"/>
                                <xsl:copy-of select="$SelectSourceID/SourceIDMapping/node()"/>
                            </ns1:SourceIDMapping>
                            <ns1:batch_id>
                                <xsl:value-of select="$current/crosscheck_result/pfx:batch_id"/>
                            </ns1:batch_id>
                        </ns1:MDM>
                    </ns1:SMFBody>
                </ns1:SMF>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="CrossCheck ExecuteRequest">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>780</pd:x>
            <pd:y>317</pd:y>
            <config>
                <processName>/ExternalServices/MDM_Server/CrossCheck/Cross Check ExecuteRequest.process</processName>
            </config>
            <pd:inputBindings>
                <group>
                    <xsl:copy-of select="$CrossCheck-MDM-ExcuteData-Mapping/ns1:SMF"/>
                    <xsl:copy-of select="$current/crosscheck_result"/>
                </group>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="SelectCompanyByGoldID">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>480</pd:x>
            <pd:y>190</pd:y>
            <config>
                <processName>/ExternalServices/MDM_Server/SelectCompanyByGoldID.process</processName>
            </config>
            <pd:inputBindings>
                <GoldID>
                    <xsl:value-of select="$current/crosscheck_result/pfx:gold_id"/>
                </GoldID>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="SelectSourceID">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>480</pd:x>
            <pd:y>308</pd:y>
            <config>
                <processName>/ExternalServices/MDM_Server/SelectSourceID.process</processName>
            </config>
            <pd:inputBindings>
                <GoldID>
                    <xsl:value-of select="$current/crosscheck_result/pfx:gold_id"/>
                </GoldID>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Catch">
            <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
            <pd:resourceType>ae.activities.catch</pd:resourceType>
            <pd:x>728</pd:x>
            <pd:y>458</pd:y>
            <pd:handler>true</pd:handler>
            <config>
                <catchAll>false</catchAll>
                <fault>localname=Error namespace=http://www.trendmicro.com/ESB/schemas/error</fault>
            </config>
            <pd:inputBindings/>
        </pd:activity>
        <pd:activity name="Error Handling Process">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>878</pd:x>
            <pd:y>465</pd:y>
            <config>
                <processName>/Services/SharedServices/Error Handling Process.process</processName>
            </config>
            <pd:coercions>
                <pd:coercion xpath="$_error/ns5:ErrorReport/Data/*" element="ns6:Error"/>
            </pd:coercions>
            <pd:inputBindings>
                <group>
                    <ns12:SMFHeader>
                        <ns2:MessageKey>
                            <xsl:value-of select="$Start/root/TraceID"/>
                        </ns2:MessageKey>
                        <ns2:ServiceName>
                            <xsl:value-of select="&quot;Daily Cross Check&quot;"/>
                        </ns2:ServiceName>
                        <ns2:ServiceVersion>
                            <xsl:value-of select="&quot;V1.0&quot;"/>
                        </ns2:ServiceVersion>
                        <ns2:SourceID>
                            <xsl:value-of select="&quot;MDM&quot;"/>
                        </ns2:SourceID>
                        <ns2:RqTimestamp>
                            <xsl:value-of select="current-dateTime()"/>
                        </ns2:RqTimestamp>
                    </ns12:SMFHeader>
                    <xsl:choose>
                        <xsl:when test="exists($_error/ns5:ErrorReport/Data)">
                            <xsl:copy-of select="$_error/ns5:ErrorReport/Data/ns6:Error"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <ns6:Error>
                                <ns6:src>
                                    <xsl:value-of select="$_error/ns5:ErrorReport/ProcessStack"/>
                                </ns6:src>
                                <ns6:error_code>
                                    <xsl:value-of select="$_error/ns5:ErrorReport/MsgCode"/>
                                </ns6:error_code>
                                <ns6:error_message>
                                    <xsl:value-of select="$_error/ns5:ErrorReport/Msg"/>
                                </ns6:error_message>
                                <ns6:stack_trace>
                                    <xsl:value-of select="$_error/ns5:ErrorReport/StackTrace"/>
                                </ns6:stack_trace>
                            </ns6:Error>
                        </xsl:otherwise>
                    </xsl:choose>
                    <Source>
                        <xsl:value-of select="tib:render-xml($CrossCheck-MDM-ExcuteData-Mapping/ns1:SMF, 1)"/>
                    </Source>
                    <Retry>
                        <xsl:value-of select="0"/>
                    </Retry>
                </group>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="Catch-1">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>475</pd:x>
        <pd:y>591</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Generate Error">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>780</pd:x>
        <pd:y>587</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns7:ActivityInput>
                <xsl:if test="$_error/ns5:ErrorReport/Msg">
                    <message>
                        <xsl:value-of select="$_error/ns5:ErrorReport/Msg"/>
                    </message>
                </xsl:if>
                <xsl:if test="$_error/ns5:ErrorReport/MsgCode">
                    <messageCode>
                        <xsl:value-of select="$_error/ns5:ErrorReport/MsgCode"/>
                    </messageCode>
                </xsl:if>
            </ns7:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Error-Handling-Process-1">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>630</pd:x>
        <pd:y>591</pd:y>
        <config>
            <processName>/Services/SharedServices/Error Handling Process.process</processName>
        </config>
        <pd:coercions>
            <pd:coercion xpath="$_error/ns5:ErrorReport/Data/*" element="ns6:Error"/>
        </pd:coercions>
        <pd:inputBindings>
            <group>
                <ns12:SMFHeader>
                    <ns2:MessageKey>
                        <xsl:value-of select="$Start/root/TraceID"/>
                    </ns2:MessageKey>
                    <ns2:ServiceName>
                        <xsl:value-of select="&quot;Daily Cross Check&quot;"/>
                    </ns2:ServiceName>
                    <ns2:ServiceVersion>
                        <xsl:value-of select="&quot;V1.0&quot;"/>
                    </ns2:ServiceVersion>
                    <ns2:SourceID>
                        <xsl:value-of select="&quot;MDM&quot;"/>
                    </ns2:SourceID>
                    <ns2:RqTimestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns2:RqTimestamp>
                </ns12:SMFHeader>
                <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <xsl:when test="exists($_error/ns5:ErrorReport/Data)">
                        <xsl:copy-of select="$_error/ns5:ErrorReport/Data/ns6:Error"/>
                    </xsl:when>
                    <xsl:otherwise>
                        <ns6:Error>
                            <ns6:src>
                                <xsl:value-of select="$_error/ns5:ErrorReport/ProcessStack"/>
                            </ns6:src>
                            <ns6:error_code>
                                <xsl:value-of select="$_error/ns5:ErrorReport/MsgCode"/>
                            </ns6:error_code>
                            <ns6:error_message>
                                <xsl:value-of select="$_error/ns5:ErrorReport/Msg"/>
                            </ns6:error_message>
                            <ns6:stack_trace>
                                <xsl:value-of select="$_error/ns5:ErrorReport/StackTrace"/>
                            </ns6:stack_trace>
                        </ns6:Error>
                    </xsl:otherwise>
                </xsl:choose>
                <Source>
                    <xsl:value-of select="tib:render-xml($Start/root, 1)"/>
                </Source>
                <Retry>
                    <xsl:value-of select="0"/>
                </Retry>
            </group>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Get CS Result</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Get CS Result</pd:from>
        <pd:to>Map Data</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map Data</pd:from>
        <pd:to>Group</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch-1</pd:from>
        <pd:to>Error-Handling-Process-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Error-Handling-Process-1</pd:from>
        <pd:to>Generate Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>
<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="http://www.trendmicro.com/ESB/schemas/Common" xmlns:TM="java://com.trendmicro.TMBWUtilities" xmlns:ns5="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns6="http://www.trendmicro.com/ESB/schemas/MDM/MDMServer" xmlns:ns7="http://www.trendmicro.com/ESB/schemas/MDM/EMEA_ERP/Contact" xmlns:pfx="http://www.trendmicro.com/ESB/schemas/SMF" xmlns:ns8="http://www.trendmicro.com/ESB/schemas/MDM/TeO/Customer" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns2="http://www.trendmicro.com/ESB/schemas/MDM/SFDC/Customer" xmlns:ns1="http://www.trendmicro.com/ESB/schemas/MDM/EMEA_ERP/Customer" xmlns:ns4="http://www.tibco.com/pe/EngineTypes" xmlns:ns3="http://www.trendmicro.com/ESB/MDM/schemas/SMF/CommonOutput" xmlns:pfx5="http://www.trendmicro.com/ESB/schemas/MDM/EMEA_ERP/Customer_Response" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx4="http://www.trendmicro.com/ESB/schemas/error" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx3="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:pfx2="http://www.trendmicro.com/ESB/MDM/schemas/SMF/CreateSfCust_Output" xmlns:pfx6="http://www.tibco.com/ns/no_namespace_schema_location/XSD/Client/Navision/Customer_Response.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <xsd:import namespace="http://www.trendmicro.com/ESB/MDM/schemas/SMF/CreateSfCust_Output" schemaLocation="/WSDL/Provider/SFDC/CreateSfCust_Output.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/schemas/error" schemaLocation="/XSD/Common/error.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/schemas/MDM/EMEA_ERP/Customer_Response" schemaLocation="/XSD/Client/Navision/Contact_Response.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/XSD/Client/Navision/Customer_Response.xsd" schemaLocation="/XSD/Client/Navision/Customer_Response.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/schemas/SMF" schemaLocation="/XSD/Common/SMF.xsd"/>
    <pd:name>ExternalServices/MDM_Server/CrossCheck/Cross Check ExecuteRequest.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="group">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx:SMF"/>
                    <xsd:element name="crosscheck_result" type="ns6:CrossCheckType" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>96</pd:startX>
    <pd:startY>90</pd:startY>
    <pd:returnBindings/>
    <pd:endName>End</pd:endName>
    <pd:endX>743</pd:endX>
    <pd:endY>244</pd:endY>
    <pd:errorSchemas>
        <errorReport ref="pfx4:Error"/>
    </pd:errorSchemas>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1340276022570</pd:targetNamespace>
    <pd:activity name="ReceiveCompany">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>314</pd:x>
        <pd:y>89</pd:y>
        <config>
            <processName>/ExternalServices/MDM_Server/ReceiveCompany.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <message_id>
                    <xsl:value-of select="$Start/group/pfx:SMF/pfx:SMFHeader/ns:MessageKey"/>
                </message_id>
                <message_type>
                    <xsl:value-of select="$Start/group/crosscheck_result/ns6:message_type"/>
                </message_type>
                <datasource>
                    <xsl:value-of select="$Start/group/crosscheck_result/ns6:data_source"/>
                </datasource>
                <gold_id>
                    <xsl:value-of select="$Start/group/crosscheck_result/ns6:gold_id"/>
                </gold_id>
                <source_company_id>
                    <xsl:value-of select="$Start/group/crosscheck_result/ns6:source_company_id"/>
                </source_company_id>
                <xsl:choose>
                    <xsl:when test="exists($Start/group/pfx:SMF/pfx:SMFBody/pfx:Navision)">
                        <message_content>
                            <xsl:value-of select="tib:render-xml($Start/group/pfx:SMF/pfx:SMFBody/pfx:Navision/pfx:Customer/ns1:Customer)"/>
                        </message_content>
                    </xsl:when>
                    <xsl:when test="exists($Start/group/pfx:SMF/pfx:SMFBody/pfx:SFDC)">
                        <xsl:choose>
                            <xsl:when test="exists($Start/group/pfx:SMF/pfx:SMFBody/pfx:SFDC/pfx:Customer)">
                                <message_content>
                                    <xsl:value-of select="tib:render-xml($Start/group/pfx:SMF/pfx:SMFBody/pfx:SFDC/pfx:Customer[1])"/>
                                </message_content>
                            </xsl:when>
                            <xsl:otherwise>
                                <message_content>
                                    <xsl:value-of select="tib:render-xml($Start/group/pfx:SMF/pfx:SMFBody/pfx:SFDC/pfx:Location[1])"/>
                                </message_content>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="exists($Start/group/pfx:SMF/pfx:SMFBody/pfx:TeO)">
                        <message_content>
                            <xsl:value-of select="tib:render-xml($Start/group/pfx:SMF/pfx:SMFBody/pfx:TeO/pfx:Customer/ns8:Customer,1)"/>
                        </message_content>
                    </xsl:when>
                    <xsl:otherwise>
                        <message_content>
                            <xsl:value-of select="tib:render-xml($Start/group/pfx:SMF/pfx:SMFBody/pfx:Rallying/pfx:Partner)"/>
                        </message_content>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:if test="$Start/group/crosscheck_result/ns6:batch_id">
                    <batch_id>
                        <xsl:value-of select="$Start/group/crosscheck_result/ns6:batch_id"/>
                    </batch_id>
                </xsl:if>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Execute Rule Engine">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>637</pd:x>
        <pd:y>252</pd:y>
        <config>
            <processName>/Services/SharedServices/Execute Rule Engine.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:inputBindings>
            <pfx:SMF>
                <xsl:copy-of select="$Start/group/pfx:SMF/pfx:SMFHeader"/>
                <pfx:SMFBody>
                    <xsl:choose>
                        <xsl:when test="upper-case($Start/group/crosscheck_result/ns6:data_source)=&quot;NAVISION&quot; or upper-case($Start/group/crosscheck_result/ns6:data_source)=&quot;TEO&quot;">
                            <pfx:Navision>
                                <xsl:choose>
                                    <xsl:when test="lower-case($Start/group/crosscheck_result/ns6:target_table)=&quot;customer&quot;">
                                        <pfx:Customer>
                                            <xsl:copy-of select="$Start/group/pfx:SMF/pfx:SMFBody/pfx:Navision/pfx:Customer/ns1:Customer"/>
                                        </pfx:Customer>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <pfx:Contact>
                                            <xsl:copy-of select="$Start/group/pfx:SMF/pfx:SMFBody/pfx:Navision/pfx:Contact/ns7:Contact"/>
                                        </pfx:Contact>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </pfx:Navision>
                        </xsl:when>
                        <xsl:when test="upper-case($Start/group/crosscheck_result/ns6:data_source)=&quot;SFDC&quot;">
                            <pfx:SFDC>
                                <xsl:choose>
                                    <xsl:when test="lower-case($Start/group/crosscheck_result/ns6:target_table)=&quot;customer&quot;">
                                        <xsl:for-each select="$Start/group/pfx:SMF/pfx:SMFBody/pfx:SFDC/pfx:Customer">
                                            <pfx:Customer>
                                                <ns2:SfdcPartnerId>
                                                    <xsl:value-of select="ns2:SfdcPartnerId"/>
                                                </ns2:SfdcPartnerId>
                                                <xsl:if test="ns2:MdmPartnerId">
                                                    <ns2:MdmPartnerId>
                                                        <xsl:copy-of select="ns2:MdmPartnerId/@xsi:nil"/>
                                                        <xsl:value-of select="ns2:MdmPartnerId"/>
                                                    </ns2:MdmPartnerId>
                                                </xsl:if>
                                                <ns2:Active>
                                                    <xsl:value-of select="&quot;&quot;"/>
                                                </ns2:Active>
                                                <ns2:AccountName>
                                                    <xsl:value-of select="ns2:AccountName"/>
                                                </ns2:AccountName>
                                                <ns2:AccountType>
                                                    <xsl:value-of select="ns2:AccountType"/>
                                                </ns2:AccountType>
                                                <xsl:if test="ns2:AccountOtherType">
                                                    <ns2:AccountOtherType>
                                                        <xsl:value-of select="ns2:AccountOtherType"/>
                                                    </ns2:AccountOtherType>
                                                </xsl:if>
                                                <xsl:if test="ns2:AccountStatus">
                                                    <ns2:AccountStatus>
                                                        <xsl:value-of select="ns2:AccountStatus"/>
                                                    </ns2:AccountStatus>
                                                </xsl:if>
                                                <xsl:if test="ns2:AKA">
                                                    <ns2:AKA>
                                                        <xsl:value-of select="ns2:AKA"/>
                                                    </ns2:AKA>
                                                </xsl:if>
                                                <xsl:if test="ns2:VatNumber">
                                                    <ns2:VatNumber>
                                                        <xsl:value-of select="ns2:VatNumber"/>
                                                    </ns2:VatNumber>
                                                </xsl:if>
                                                <xsl:if test="ns2:MainPhoneNumber">
                                                    <ns2:MainPhoneNumber>
                                                        <xsl:value-of select="ns2:MainPhoneNumber"/>
                                                    </ns2:MainPhoneNumber>
                                                </xsl:if>
                                                <xsl:if test="ns2:Fax">
                                                    <ns2:Fax>
                                                        <xsl:value-of select="ns2:Fax"/>
                                                    </ns2:Fax>
                                                </xsl:if>
                                                <ns2:Country>
                                                    <xsl:value-of select="ns2:Country"/>
                                                </ns2:Country>
                                                <xsl:if test="ns2:Website">
                                                    <ns2:Website>
                                                        <xsl:value-of select="ns2:Website"/>
                                                    </ns2:Website>
                                                </xsl:if>
                                                <xsl:if test="ns2:EmailDomain">
                                                    <ns2:EmailDomain>
                                                        <xsl:value-of select="ns2:EmailDomain"/>
                                                    </ns2:EmailDomain>
                                                </xsl:if>
                                                <xsl:if test="ns2:NavisionID">
                                                    <ns2:NavisionID>
                                                        <xsl:value-of select="ns2:NavisionID"/>
                                                    </ns2:NavisionID>
                                                </xsl:if>
                                                <xsl:if test="ns2:DUNSName">
                                                    <ns2:DUNSName>
                                                        <xsl:value-of select="ns2:DUNSName"/>
                                                    </ns2:DUNSName>
                                                </xsl:if>
                                                <xsl:if test="ns2:DUNS">
                                                    <ns2:DUNS>
                                                        <xsl:value-of select="ns2:DUNS"/>
                                                    </ns2:DUNS>
                                                </xsl:if>
                                                <xsl:if test="ns2:DUNSDirectParent">
                                                    <ns2:DUNSDirectParent>
                                                        <xsl:value-of select="ns2:DUNSDirectParent"/>
                                                    </ns2:DUNSDirectParent>
                                                </xsl:if>
                                                <xsl:if test="ns2:DUNSGlobalParent">
                                                    <ns2:DUNSGlobalParent>
                                                        <xsl:value-of select="ns2:DUNSGlobalParent"/>
                                                    </ns2:DUNSGlobalParent>
                                                </xsl:if>
                                                <ns2:BillingCity>
                                                    <xsl:value-of select="ns2:BillingCity"/>
                                                </ns2:BillingCity>
                                                <ns2:BillingCountry>
                                                    <xsl:value-of select="ns2:BillingCountry"/>
                                                </ns2:BillingCountry>
                                                <ns2:BillingPostalCode>
                                                    <xsl:value-of select="ns2:BillingPostalCode"/>
                                                </ns2:BillingPostalCode>
                                                <ns2:BillingState>
                                                    <xsl:value-of select="ns2:BillingState"/>
                                                </ns2:BillingState>
                                                <ns2:BillingStreet>
                                                    <xsl:value-of select="ns2:BillingStreet"/>
                                                </ns2:BillingStreet>
                                                <xsl:if test="ns2:ParentAccount">
                                                    <ns2:ParentAccount>
                                                        <xsl:value-of select="ns2:ParentAccount"/>
                                                    </ns2:ParentAccount>
                                                </xsl:if>
                                                <ns2:PartnerTier>
                                                    <xsl:value-of select="ns2:PartnerTier"/>
                                                </ns2:PartnerTier>
                                                <xsl:if test="ns2:MergedToSfdcPartnerId">
                                                    <ns2:MergedToSfdcPartnerId>
                                                        <xsl:value-of select="ns2:MergedToSfdcPartnerId"/>
                                                    </ns2:MergedToSfdcPartnerId>
                                                </xsl:if>
                                                <ns2:recordType>
                                                    <xsl:value-of select="ns2:recordType"/>
                                                </ns2:recordType>
                                            </pfx:Customer>
                                        </xsl:for-each>
                                    </xsl:when>
                                    <xsl:when test="lower-case($Start/group/crosscheck_result/ns6:target_table)=&quot;contact&quot;">
                                        <xsl:for-each select="$Start/group/pfx:SMF/pfx:SMFBody/pfx:SFDC/pfx:Contact">
                                            <pfx:Contact>
                                                <ns2:MdmPartnerId>
                                                    <xsl:value-of select="ns2:MdmPartnerId"/>
                                                </ns2:MdmPartnerId>
                                                <xsl:if test="ns2:MdmContactId">
                                                    <ns2:MdmContactId>
                                                        <xsl:value-of select="ns2:MdmContactId"/>
                                                    </ns2:MdmContactId>
                                                </xsl:if>
                                                <xsl:if test="ns2:MdmLocationId">
                                                    <ns2:MdmLocationId>
                                                        <xsl:value-of select="ns2:MdmLocationId"/>
                                                    </ns2:MdmLocationId>
                                                </xsl:if>
                                                <ns2:SfdcContactId>
                                                    <xsl:value-of select="ns2:SfdcContactId"/>
                                                </ns2:SfdcContactId>
                                                <ns2:Salutation>
                                                    <xsl:value-of select="ns2:Salutation"/>
                                                </ns2:Salutation>
                                                <ns2:firstName>
                                                    <xsl:value-of select="ns2:firstName"/>
                                                </ns2:firstName>
                                                <ns2:lastName>
                                                    <xsl:value-of select="ns2:lastName"/>
                                                </ns2:lastName>
                                                <ns2:sfdcPartnerId>
                                                    <xsl:value-of select="ns2:sfdcPartnerId"/>
                                                </ns2:sfdcPartnerId>
                                                <xsl:if test="ns2:title">
                                                    <ns2:title>
                                                        <xsl:value-of select="ns2:title"/>
                                                    </ns2:title>
                                                </xsl:if>
                                                <xsl:if test="ns2:jobFunction">
                                                    <ns2:jobFunction>
                                                        <xsl:value-of select="ns2:jobFunction"/>
                                                    </ns2:jobFunction>
                                                </xsl:if>
                                                <xsl:if test="ns2:language">
                                                    <ns2:language>
                                                        <xsl:value-of select="ns2:language"/>
                                                    </ns2:language>
                                                </xsl:if>
                                                <xsl:if test="ns2:sfdcLocationId">
                                                    <ns2:sfdcLocationId>
                                                        <xsl:value-of select="ns2:sfdcLocationId"/>
                                                    </ns2:sfdcLocationId>
                                                </xsl:if>
                                                <ns2:DirectLine>
                                                    <xsl:value-of select="ns2:DirectLine"/>
                                                </ns2:DirectLine>
                                                <xsl:if test="ns2:HomePhone">
                                                    <ns2:HomePhone>
                                                        <xsl:value-of select="ns2:HomePhone"/>
                                                    </ns2:HomePhone>
                                                </xsl:if>
                                                <xsl:if test="ns2:mobile">
                                                    <ns2:mobile>
                                                        <xsl:value-of select="ns2:mobile"/>
                                                    </ns2:mobile>
                                                </xsl:if>
                                                <ns2:email>
                                                    <xsl:value-of select="ns2:email"/>
                                                </ns2:email>
                                                <xsl:if test="ns2:primaryContact">
                                                    <ns2:primaryContact>
                                                        <xsl:copy-of select="ns2:primaryContact/@xsi:nil"/>
                                                        <xsl:value-of select="ns2:primaryContact"/>
                                                    </ns2:primaryContact>
                                                </xsl:if>
                                                <ns2:active>
                                                    <xsl:value-of select="ns2:active"/>
                                                </ns2:active>
                                                <ns2:DirectLineExt>
                                                    <xsl:value-of select="ns2:DirectLineExt"/>
                                                </ns2:DirectLineExt>
                                                <xsl:if test="ns2:recordType">
                                                    <ns2:recordType>
                                                        <xsl:value-of select="ns2:recordType"/>
                                                    </ns2:recordType>
                                                </xsl:if>
                                                <xsl:if test="ns2:MergedToSfdcContactId">
                                                    <ns2:MergedToSfdcContactId>
                                                        <xsl:value-of select="ns2:MergedToSfdcContactId"/>
                                                    </ns2:MergedToSfdcContactId>
                                                </xsl:if>
                                            </pfx:Contact>
                                        </xsl:for-each>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:for-each select="$Start/group/pfx:SMF/pfx:SMFBody/pfx:SFDC/pfx:Location">
                                            <pfx:Location>
                                                <ns2:SfdcPartnerId>
                                                    <xsl:value-of select="ns2:SfdcPartnerId"/>
                                                </ns2:SfdcPartnerId>
                                                <ns2:MdmPartnerId>
                                                    <xsl:value-of select="ns2:MdmPartnerId"/>
                                                </ns2:MdmPartnerId>
                                                <xsl:if test="ns2:SfdcLocationId">
                                                    <ns2:SfdcLocationId>
                                                        <xsl:value-of select="ns2:SfdcLocationId"/>
                                                    </ns2:SfdcLocationId>
                                                </xsl:if>
                                                <xsl:if test="ns2:MdmLocationId">
                                                    <ns2:MdmLocationId>
                                                        <xsl:value-of select="ns2:MdmLocationId"/>
                                                    </ns2:MdmLocationId>
                                                </xsl:if>
                                                <xsl:if test="ns2:Account">
                                                    <ns2:Account>
                                                        <xsl:value-of select="ns2:Account"/>
                                                    </ns2:Account>
                                                </xsl:if>
                                                <ns2:PrimaryLocation>
                                                    <xsl:value-of select="ns2:PrimaryLocation"/>
                                                </ns2:PrimaryLocation>
                                                <xsl:if test="ns2:Street">
                                                    <ns2:Street>
                                                        <xsl:value-of select="ns2:Street"/>
                                                    </ns2:Street>
                                                </xsl:if>
                                                <xsl:if test="ns2:City">
                                                    <ns2:City>
                                                        <xsl:value-of select="ns2:City"/>
                                                    </ns2:City>
                                                </xsl:if>
                                                <xsl:if test="ns2:CountyRegion">
                                                    <ns2:CountyRegion>
                                                        <xsl:value-of select="ns2:CountyRegion"/>
                                                    </ns2:CountyRegion>
                                                </xsl:if>
                                                <xsl:if test="ns2:Country">
                                                    <ns2:Country>
                                                        <xsl:value-of select="ns2:Country"/>
                                                    </ns2:Country>
                                                </xsl:if>
                                                <xsl:if test="ns2:PostalCode">
                                                    <ns2:PostalCode>
                                                        <xsl:value-of select="ns2:PostalCode"/>
                                                    </ns2:PostalCode>
                                                </xsl:if>
                                                <xsl:if test="ns2:recordType">
                                                    <ns2:recordType>
                                                        <xsl:value-of select="ns2:recordType"/>
                                                    </ns2:recordType>
                                                </xsl:if>
                                            </pfx:Location>
                                        </xsl:for-each>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </pfx:SFDC>
                        </xsl:when>
                        <xsl:when test="upper-case($Start/group/crosscheck_result/ns6:data_source)='RALLYING'">
                            <pfx:Rallying>
                                <xsl:copy-of select="$Start/group/pfx:SMF/pfx:SMFBody/pfx:Rallying/pfx:Partner"/>
                            </pfx:Rallying>
                        </xsl:when>
                        <xsl:otherwise>
                            <pfx:TeO>
                                <pfx:Customer>
                                    <xsl:for-each select="$Start/group/pfx:SMF/pfx:SMFBody/pfx:TeO/pfx:Customer/ns8:Customer">
                                        <ns8:Customer>
                                            <ns8:Command>
                                                <xsl:value-of select="&quot;UpdateTeOCust&quot;"/>
                                            </ns8:Command>
                                            <ns8:NavisionID>
                                                <xsl:value-of select="ns8:NavisionID"/>
                                            </ns8:NavisionID>
                                            <ns8:MDMID>
                                                <xsl:value-of select="ns8:MDMID"/>
                                            </ns8:MDMID>
                                            <xsl:if test="ns8:SFID">
                                                <ns8:SFID>
                                                    <xsl:value-of select="ns8:SFID"/>
                                                </ns8:SFID>
                                            </xsl:if>
                                            <xsl:if test="ns8:DUNSID">
                                                <ns8:DUNSID>
                                                    <xsl:value-of select="ns8:DUNSID"/>
                                                </ns8:DUNSID>
                                            </xsl:if>
                                            <ns8:IsDisti>
                                                <xsl:value-of select="ns8:IsDisti"/>
                                            </ns8:IsDisti>
                                            <ns8:IsReseller>
                                                <xsl:value-of select="ns8:IsReseller"/>
                                            </ns8:IsReseller>
                                            <ns8:IsEndUser>
                                                <xsl:value-of select="ns8:IsEndUser"/>
                                            </ns8:IsEndUser>
                                            <xsl:if test="ns8:CountryID">
                                                <ns8:CountryID>
                                                    <xsl:value-of select="ns8:CountryID"/>
                                                </ns8:CountryID>
                                            </xsl:if>
                                            <ns8:Name>
                                                <xsl:value-of select="ns8:Name"/>
                                            </ns8:Name>
                                            <xsl:if test="ns8:Name2">
                                                <ns8:Name2>
                                                    <xsl:value-of select="ns8:Name2"/>
                                                </ns8:Name2>
                                            </xsl:if>
                                            <ns8:Address>
                                                <xsl:value-of select="ns8:Address"/>
                                            </ns8:Address>
                                            <xsl:if test="ns8:Address2">
                                                <ns8:Address2>
                                                    <xsl:value-of select="ns8:Address2"/>
                                                </ns8:Address2>
                                            </xsl:if>
                                            <xsl:if test="ns8:City">
                                                <ns8:City>
                                                    <xsl:value-of select="ns8:City"/>
                                                </ns8:City>
                                            </xsl:if>
                                            <xsl:if test="ns8:County">
                                                <ns8:County>
                                                    <xsl:value-of select="ns8:County"/>
                                                </ns8:County>
                                            </xsl:if>
                                            <xsl:if test="ns8:Email">
                                                <ns8:Email>
                                                    <xsl:value-of select="ns8:Email"/>
                                                </ns8:Email>
                                            </xsl:if>
                                            <xsl:if test="ns8:Fax">
                                                <ns8:Fax>
                                                    <xsl:value-of select="ns8:Fax"/>
                                                </ns8:Fax>
                                            </xsl:if>
                                            <xsl:if test="ns8:Phone">
                                                <ns8:Phone>
                                                    <xsl:value-of select="ns8:Phone"/>
                                                </ns8:Phone>
                                            </xsl:if>
                                            <xsl:if test="ns8:Website">
                                                <ns8:Website>
                                                    <xsl:value-of select="ns8:Website"/>
                                                </ns8:Website>
                                            </xsl:if>
                                            <xsl:if test="ns8:Zip">
                                                <ns8:Zip>
                                                    <xsl:value-of select="ns8:Zip"/>
                                                </ns8:Zip>
                                            </xsl:if>
                                            <xsl:if test="ns8:LanguageCode">
                                                <ns8:LanguageCode>
                                                    <xsl:value-of select="ns8:LanguageCode"/>
                                                </ns8:LanguageCode>
                                            </xsl:if>
                                            <xsl:if test="ns8:Blocked">
                                                <ns8:Blocked>
                                                    <xsl:value-of select="ns8:Blocked"/>
                                                </ns8:Blocked>
                                            </xsl:if>
                                            <xsl:if test="ns8:DistributorType">
                                                <ns8:DistributorType>
                                                    <xsl:value-of select="ns8:DistributorType"/>
                                                </ns8:DistributorType>
                                            </xsl:if>
                                            <xsl:if test="ns8:Company">
                                                <ns8:Company>
                                                    <xsl:value-of select="ns8:Company"/>
                                                </ns8:Company>
                                            </xsl:if>
                                            <xsl:if test="ns8:Currency">
                                                <ns8:Currency>
                                                    <xsl:value-of select="ns8:Currency"/>
                                                </ns8:Currency>
                                            </xsl:if>
                                            <xsl:if test="ns8:Category">
                                                <ns8:Category>
                                                    <xsl:value-of select="ns8:Category"/>
                                                </ns8:Category>
                                            </xsl:if>
                                            <xsl:if test="ns8:DefaultAccred">
                                                <ns8:DefaultAccred>
                                                    <xsl:value-of select="ns8:DefaultAccred"/>
                                                </ns8:DefaultAccred>
                                            </xsl:if>
                                            <xsl:if test="ns8:DefaultContactID">
                                                <ns8:DefaultContactID>
                                                    <xsl:value-of select="ns8:DefaultContactID"/>
                                                </ns8:DefaultContactID>
                                            </xsl:if>
                                            <xsl:if test="ns8:IsXSP">
                                                <ns8:IsXSP>
                                                    <xsl:value-of select="ns8:IsXSP"/>
                                                </ns8:IsXSP>
                                            </xsl:if>
                                            <xsl:if test="ns8:IsMarketPlace">
                                                <ns8:IsMarketPlace>
                                                    <xsl:value-of select="ns8:IsMarketPlace"/>
                                                </ns8:IsMarketPlace>
                                            </xsl:if>
                                            <xsl:if test="ns8:ContractFlag">
                                                <ns8:ContractFlag>
                                                    <xsl:value-of select="ns8:ContractFlag"/>
                                                </ns8:ContractFlag>
                                            </xsl:if>
                                        </ns8:Customer>
                                    </xsl:for-each>
                                </pfx:Customer>
                            </pfx:TeO>
                        </xsl:otherwise>
                    </xsl:choose>
                    <pfx:MDM>
                        <xsl:choose>
                            <xsl:when test="exists($ReceiveCompany/group/Resultsets/ResultSet)">
                                <pfx:Company>
                                    <xsl:copy-of select="$ReceiveCompany/group/Resultsets/ResultSet/Record/ancestor-or-self::*/namespace::node()"/>
                                    <xsl:copy-of select="$ReceiveCompany/group/Resultsets/ResultSet/Record/@*"/>
                                    <xsl:copy-of select="$ReceiveCompany/group/Resultsets/ResultSet/Record/node()"/>
                                </pfx:Company>
                            </xsl:when>
                            <xsl:otherwise/>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists($SelectSourceID/SourceIDMapping)">
                                <pfx:SourceIDMapping>
                                    <xsl:copy-of select="$SelectSourceID/SourceIDMapping/ancestor-or-self::*/namespace::node()"/>
                                    <xsl:copy-of select="$SelectSourceID/SourceIDMapping/@*"/>
                                    <xsl:copy-of select="$SelectSourceID/SourceIDMapping/node()"/>
                                </pfx:SourceIDMapping>
                            </xsl:when>
                            <xsl:otherwise/>
                        </xsl:choose>
                        <pfx:batch_id>
                            <xsl:value-of select="$Start/group/pfx:SMF/pfx:SMFBody/pfx:MDM/pfx:batch_id"/>
                        </pfx:batch_id>
                    </pfx:MDM>
                </pfx:SMFBody>
            </pfx:SMF>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>446</pd:x>
        <pd:y>398</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Generate Error">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>631</pd:x>
        <pd:y>399</pd:y>
        <config>
            <faultName>errorReport</faultName>
        </config>
        <pd:coercions>
            <pd:coercion xpath="$_error/ns4:ErrorReport/Data/*" element="pfx4:Error"/>
        </pd:coercions>
        <pd:inputBindings>
            <pfx3:ActivityInput>
                <xsl:if test="$_error/ns4:ErrorReport/Msg">
                    <message>
                        <xsl:value-of select="$_error/ns4:ErrorReport/Msg"/>
                    </message>
                </xsl:if>
                <xsl:if test="$_error/ns4:ErrorReport/MsgCode">
                    <messageCode>
                        <xsl:value-of select="$_error/ns4:ErrorReport/MsgCode"/>
                    </messageCode>
                </xsl:if>
                <data>
                    <xsl:choose>
                        <xsl:when test="exists($_error/ns4:ErrorReport/Data/pfx4:Error)">
                            <xsl:copy-of select="$_error/ns4:ErrorReport/Data/pfx4:Error"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <pfx4:Error>
                                <pfx4:src>
                                    <xsl:value-of select="$_error/ns4:ErrorReport/ProcessStack"/>
                                </pfx4:src>
                                <pfx4:error_code>
                                    <xsl:value-of select="$_error/ns4:ErrorReport/MsgCode"/>
                                </pfx4:error_code>
                                <pfx4:error_message>
                                    <xsl:value-of select="$_error/ns4:ErrorReport/Msg"/>
                                </pfx4:error_message>
                                <pfx4:stack_trace>
                                    <xsl:value-of select="$_error/ns4:ErrorReport/StackTrace"/>
                                </pfx4:stack_trace>
                            </pfx4:Error>
                        </xsl:otherwise>
                    </xsl:choose>
                </data>
            </pfx3:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ReceiveContact">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>101</pd:x>
        <pd:y>327</pd:y>
        <config>
            <processName>/ExternalServices/MDM_Server/ReceiveContact.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <message_id>
                    <xsl:value-of select="$Start/group/pfx:SMF/pfx:SMFHeader/ns:MessageKey"/>
                </message_id>
                <message_type>
                    <xsl:value-of select="$Start/group/crosscheck_result/ns6:message_type"/>
                </message_type>
                <datasource>
                    <xsl:value-of select="$Start/group/crosscheck_result/ns6:data_source"/>
                </datasource>
                <gold_id>
                    <xsl:value-of select="$Start/group/crosscheck_result/ns6:gold_id"/>
                </gold_id>
                <contact_id>
                    <xsl:value-of select="$Start/group/crosscheck_result/ns6:contact_id"/>
                </contact_id>
                <source_company_id>
                    <xsl:value-of select="$Start/group/crosscheck_result/ns6:source_company_id"/>
                </source_company_id>
                <source_contact_id>
                    <xsl:value-of select="$Start/group/crosscheck_result/ns6:source_contact_id"/>
                </source_contact_id>
                <xsl:choose>
                    <xsl:when test="upper-case($Start/group/crosscheck_result[1]/ns6:data_source)=&quot;NAVISION&quot; or upper-case($Start/group/crosscheck_result[1]/ns6:data_source)=&quot;TEO&quot;">
                        <message_content>
                            <xsl:value-of select="tib:render-xml($Start/group/pfx:SMF/pfx:SMFBody/pfx:Navision/pfx:Contact)"/>
                        </message_content>
                    </xsl:when>
                    <xsl:when test="upper-case($Start/group/crosscheck_result[1]/ns6:data_source)=&quot;SFDC&quot;">
                        <message_content>
                            <xsl:value-of select="tib:render-xml($Start/group/pfx:SMF/pfx:SMFBody/pfx:SFDC/pfx:Contact[1])"/>
                        </message_content>
                    </xsl:when>
                    <xsl:otherwise>
                        <message_content>
                            <xsl:value-of select="tib:render-xml($Start/group/pfx:SMF/pfx:SMFBody/pfx:Rallying/pfx:Partner)"/>
                        </message_content>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:if test="$Start/group/crosscheck_result/ns6:batch_id">
                    <batch_id>
                        <xsl:value-of select="$Start/group/crosscheck_result/ns6:batch_id"/>
                    </batch_id>
                </xsl:if>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="SelectSourceID">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>503</pd:x>
        <pd:y>147</pd:y>
        <config>
            <processName>/ExternalServices/MDM_Server/SelectSourceID.process</processName>
        </config>
        <pd:inputBindings>
            <GoldID>
                <xsl:value-of select="$Start/group/crosscheck_result/ns6:gold_id"/>
            </GoldID>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Null">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>313</pd:x>
        <pd:y>240</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>ReceiveCompany</pd:to>
        <pd:xpathDescription>Company &amp; Location</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ReceiveCompany</pd:from>
        <pd:to>Null</pd:to>
        <pd:xpathDescription>Execute rule engine</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$ReceiveCompany/group/ExcuteRuleEngine = "true"</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Execute Rule Engine</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>Generate Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ReceiveCompany</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>ReceiveContact</pd:to>
        <pd:xpathDescription>Contact</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>lower-case($Start/group/crosscheck_result/ns6:target_table)="contact"</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>ReceiveContact</pd:from>
        <pd:to>Null</pd:to>
        <pd:xpathDescription>Execute rule engine</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$ReceiveContact/group/ExecuteRuleEngine = "true"</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>ReceiveContact</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SelectSourceID</pd:from>
        <pd:to>Execute Rule Engine</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null</pd:from>
        <pd:to>SelectSourceID</pd:to>
        <pd:xpathDescription>update customer</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Start/group/crosscheck_result[1]/ns6:message_type="update" and  lower-case($Start/group/crosscheck_result/ns6:target_table)="customer"</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Null</pd:from>
        <pd:to>Execute Rule Engine</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>
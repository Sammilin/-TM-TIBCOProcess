<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:ns03="http://www.trendmicro.com/ESB/schemas/MDM/SFDC/Customer" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns04="http://www.trendmicro.com/ESB/schemas/MDM/Rallying/Partner" xmlns:ns="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns05="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:TM="java://com.trendmicro.TMBWUtilities" xmlns:pfx="http://www.trendmicro.com/ESB/schemas/MDM/MDMServer" xmlns:ns02="http://www.trendmicro.com/ESB/schemas/MDM/EMEA_ERP/Customer" xmlns:ns2="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns1="http://www.trendmicro.com/ESB/schemas/MDM/EMEA_ERP/Contact" xmlns:ns3="http://www.tibco.com/pe/EngineTypes" xmlns:ns0="http://www.trendmicro.com/ESB/schemas/Common" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx4="http://www.trendmicro.com/ESB/ACS/schemas/SMF" xmlns:pfx3="http://www.trendmicro.com/ESB/schemas/error" xmlns:pfx2="http://www.trendmicro.com/ESB/schemas/SMF" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <xsd:import namespace="http://www.trendmicro.com/ESB/schemas/MDM/MDMServer" schemaLocation="/XSD/Client/MDMServer/MDMServer.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/schemas/SMF" schemaLocation="/XSD/Common/SMF.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/schemas/error" schemaLocation="/XSD/Common/error.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/ACS/schemas/SMF" schemaLocation="/XSD/Common/messageheader.xsd"/>
    <pd:name>ExternalServices/MDM_Server/SelectSourceDataByID.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="dataSource" type="xsd:string"/>
                    <xsd:element name="type" type="xsd:string"/>
                    <xsd:element name="source_id" type="xsd:string"/>
                    <xsd:element ref="pfx4:SMFHeader"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>78</pd:startX>
    <pd:startY>187</pd:startY>
    <pd:returnBindings>
        <pfx2:SMF>
            <pfx2:SMFHeader>
                <ns0:MessageKey>
                    <xsl:value-of select="$Start/root/pfx4:SMFHeader/ns0:MessageKey"/>
                </ns0:MessageKey>
                <ns0:ServiceName>
                    <xsl:value-of select="$Start/root/pfx4:SMFHeader/ns0:ServiceName"/>
                </ns0:ServiceName>
                <ns0:ServiceVersion>
                    <xsl:value-of select="$Start/root/pfx4:SMFHeader/ns0:ServiceVersion"/>
                </ns0:ServiceVersion>
                <ns0:SourceID>
                    <xsl:value-of select="$Start/root/pfx4:SMFHeader/ns0:SourceID"/>
                </ns0:SourceID>
                <xsl:if test="$Start/root/pfx4:SMFHeader/ns0:SourceIP">
                    <ns0:SourceIP>
                        <xsl:value-of select="$Start/root/pfx4:SMFHeader/ns0:SourceIP"/>
                    </ns0:SourceIP>
                </xsl:if>
                <xsl:if test="$Start/root/pfx4:SMFHeader/ns0:RqTimestamp">
                    <ns0:RqTimestamp>
                        <xsl:value-of select="$Start/root/pfx4:SMFHeader/ns0:RqTimestamp"/>
                    </ns0:RqTimestamp>
                </xsl:if>
                <xsl:if test="$Start/root/pfx4:SMFHeader/ns0:RsTimestamp">
                    <ns0:RsTimestamp>
                        <xsl:value-of select="$Start/root/pfx4:SMFHeader/ns0:RsTimestamp"/>
                    </ns0:RsTimestamp>
                </xsl:if>
            </pfx2:SMFHeader>
            <pfx2:SMFBody>
                <xsl:choose>
                    <xsl:when test="upper-case($Start/root/dataSource)=&quot;NAVISION&quot; or upper-case($Start/root/dataSource)=&quot;TEO&quot;">
                        <xsl:choose>
                            <xsl:when test="lower-case($Start/root/type)=&quot;customer&quot;">
                                <pfx2:Navision>
                                    <xsl:for-each select="$GetNavisionView/root/Customer[1]">
                                        <pfx2:Customer>
                                            <xsl:for-each select="ns02:Customer">
                                                <ns02:Customer>
                                                    <xsl:if test="ns02:MDMCustID">
                                                        <ns02:MDMCustID>
                                                            <xsl:value-of select="ns02:MDMCustID"/>
                                                        </ns02:MDMCustID>
                                                    </xsl:if>
                                                    <xsl:if test="ns02:DnBNum">
                                                        <ns02:DnBNum>
                                                            <xsl:value-of select="ns02:DnBNum"/>
                                                        </ns02:DnBNum>
                                                    </xsl:if>
                                                    <ns02:SiebelID>
                                                        <xsl:value-of select="ns02:SiebelID"/>
                                                    </ns02:SiebelID>
                                                    <xsl:if test="ns02:SalesForceID">
                                                        <ns02:SalesForceID>
                                                            <xsl:value-of select="ns02:SalesForceID"/>
                                                        </ns02:SalesForceID>
                                                    </xsl:if>
                                                    <xsl:if test="ns02:B2BCustID">
                                                        <ns02:B2BCustID>
                                                            <xsl:value-of select="ns02:B2BCustID"/>
                                                        </ns02:B2BCustID>
                                                    </xsl:if>
                                                    <ns02:NavDistiID>
                                                        <xsl:value-of select="ns02:NavDistiID"/>
                                                    </ns02:NavDistiID>
                                                    <ns02:NAVID>
                                                        <xsl:value-of select="ns02:NAVID"/>
                                                    </ns02:NAVID>
                                                    <ns02:CustomerName>
                                                        <xsl:value-of select="ns02:CustomerName"/>
                                                    </ns02:CustomerName>
                                                    <ns02:CustomerName2>
                                                        <xsl:value-of select="ns02:CustomerName2"/>
                                                    </ns02:CustomerName2>
                                                    <ns02:Address>
                                                        <xsl:value-of select="ns02:Address"/>
                                                    </ns02:Address>
                                                    <ns02:Address2>
                                                        <xsl:value-of select="ns02:Address2"/>
                                                    </ns02:Address2>
                                                    <ns02:City>
                                                        <xsl:value-of select="ns02:City"/>
                                                    </ns02:City>
                                                    <ns02:County>
                                                        <xsl:value-of select="ns02:County"/>
                                                    </ns02:County>
                                                    <ns02:PostCode>
                                                        <xsl:value-of select="ns02:PostCode"/>
                                                    </ns02:PostCode>
                                                    <ns02:CountryCode>
                                                        <xsl:value-of select="ns02:CountryCode"/>
                                                    </ns02:CountryCode>
                                                    <ns02:Phone>
                                                        <xsl:value-of select="ns02:Phone"/>
                                                    </ns02:Phone>
                                                    <ns02:Fax>
                                                        <xsl:value-of select="ns02:Fax"/>
                                                    </ns02:Fax>
                                                    <ns02:Email>
                                                        <xsl:value-of select="ns02:Email"/>
                                                    </ns02:Email>
                                                    <ns02:LanguageCode>
                                                        <xsl:value-of select="ns02:LanguageCode"/>
                                                    </ns02:LanguageCode>
                                                    <ns02:LegalEntity>
                                                        <xsl:value-of select="ns02:LegalEntity"/>
                                                    </ns02:LegalEntity>
                                                    <ns02:EndCustomer>
                                                        <xsl:value-of select="ns02:EndCustomer"/>
                                                    </ns02:EndCustomer>
                                                    <ns02:Reseller>
                                                        <xsl:value-of select="ns02:Reseller"/>
                                                    </ns02:Reseller>
                                                    <ns02:TransactionProfile>
                                                        <xsl:value-of select="ns02:TransactionProfile"/>
                                                    </ns02:TransactionProfile>
                                                    <ns02:Segment>
                                                        <xsl:value-of select="ns02:Segment"/>
                                                    </ns02:Segment>
                                                    <ns02:MasterNAVID>
                                                        <xsl:value-of select="ns02:MasterNAVID"/>
                                                    </ns02:MasterNAVID>
                                                    <ns02:Blocked>
                                                        <xsl:value-of select="ns02:Blocked"/>
                                                    </ns02:Blocked>
                                                    <ns02:PartnerTier>
                                                        <xsl:value-of select="ns02:PartnerTier"/>
                                                    </ns02:PartnerTier>
                                                    <xsl:if test="ns02:DefaultAccred">
                                                        <ns02:DefaultAccred>
                                                            <xsl:value-of select="ns02:DefaultAccred"/>
                                                        </ns02:DefaultAccred>
                                                    </xsl:if>
                                                    <ns02:VATRegNo>
                                                        <xsl:value-of select="ns02:VATRegNo"/>
                                                    </ns02:VATRegNo>
                                                    <xsl:if test="ns02:DefaultContactID">
                                                        <ns02:DefaultContactID>
                                                            <xsl:value-of select="ns02:DefaultContactID"/>
                                                        </ns02:DefaultContactID>
                                                    </xsl:if>
                                                    <ns02:SourceSystemID>
                                                        <xsl:value-of select="ns02:SourceSystemID"/>
                                                    </ns02:SourceSystemID>
                                                    <xsl:if test="ns02:DistributorType">
                                                        <ns02:DistributorType>
                                                            <xsl:value-of select="ns02:DistributorType"/>
                                                        </ns02:DistributorType>
                                                    </xsl:if>
                                                    <ns02:Company>
                                                        <xsl:value-of select="ns02:Company"/>
                                                    </ns02:Company>
                                                    <xsl:if test="ns02:Currency">
                                                        <ns02:Currency>
                                                            <xsl:value-of select="ns02:Currency"/>
                                                        </ns02:Currency>
                                                    </xsl:if>
                                                    <xsl:if test="ns02:DeDupExclude">
                                                        <ns02:DeDupExclude>
                                                            <xsl:value-of select="ns02:DeDupExclude"/>
                                                        </ns02:DeDupExclude>
                                                    </xsl:if>
                                                    <xsl:if test="ns02:TEO_IsBlocked">
                                                        <ns02:TEO_IsBlocked>
                                                            <xsl:copy-of select="ns02:TEO_IsBlocked/@xsi:nil"/>
                                                            <xsl:value-of select="ns02:TEO_IsBlocked"/>
                                                        </ns02:TEO_IsBlocked>
                                                    </xsl:if>
                                                    <ns02:MSP>
                                                        <xsl:value-of select="ns02:MSP"/>
                                                    </ns02:MSP>
                                                    <ns02:MarketPlace>
                                                        <xsl:value-of select="ns02:MarketPlace"/>
                                                    </ns02:MarketPlace>
                                                    <ns02:MSPContractSigned>
                                                        <xsl:value-of select="ns02:MSPContractSigned"/>
                                                    </ns02:MSPContractSigned>
                                                </ns02:Customer>
                                            </xsl:for-each>
                                        </pfx2:Customer>
                                    </xsl:for-each>
                                </pfx2:Navision>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx2:Navision>
                                    <xsl:for-each select="$GetNavisionView/root/Contact[1]">
                                        <pfx2:Contact>
                                            <xsl:for-each select="ns1:Contact">
                                                <ns1:Contact>
                                                    <ns1:MDMContID>
                                                        <xsl:value-of select="ns1:MDMContID"/>
                                                    </ns1:MDMContID>
                                                    <ns1:MDMCustID>
                                                        <xsl:value-of select="ns1:MDMCustID"/>
                                                    </ns1:MDMCustID>
                                                    <ns1:NavID>
                                                        <xsl:value-of select="ns1:NavID"/>
                                                    </ns1:NavID>
                                                    <ns1:NAVCustID>
                                                        <xsl:value-of select="ns1:NAVCustID"/>
                                                    </ns1:NAVCustID>
                                                    <ns1:ContactName>
                                                        <xsl:value-of select="ns1:ContactName"/>
                                                    </ns1:ContactName>
                                                    <ns1:Phone>
                                                        <xsl:value-of select="ns1:Phone"/>
                                                    </ns1:Phone>
                                                    <ns1:MobilePhone>
                                                        <xsl:value-of select="ns1:MobilePhone"/>
                                                    </ns1:MobilePhone>
                                                    <ns1:Email>
                                                        <xsl:value-of select="ns1:Email"/>
                                                    </ns1:Email>
                                                    <ns1:SourceSystemID>
                                                        <xsl:value-of select="ns1:SourceSystemID"/>
                                                    </ns1:SourceSystemID>
                                                </ns1:Contact>
                                            </xsl:for-each>
                                        </pfx2:Contact>
                                    </xsl:for-each>
                                </pfx2:Navision>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:when test="upper-case($Start/root/dataSource)=&quot;SFDC&quot;">
                        <xsl:choose>
                            <xsl:when test="lower-case($Start/root/type)=&quot;customer&quot;">
                                <pfx2:SFDC>
                                    <xsl:for-each select="$GetSFDCView/root/Customer[1]">
                                        <pfx2:Customer>
                                            <ns03:SfdcPartnerId>
                                                <xsl:value-of select="ns03:SfdcPartnerId"/>
                                            </ns03:SfdcPartnerId>
                                            <xsl:if test="ns03:MdmPartnerId">
                                                <ns03:MdmPartnerId>
                                                    <xsl:copy-of select="ns03:MdmPartnerId/@xsi:nil"/>
                                                    <xsl:value-of select="ns03:MdmPartnerId"/>
                                                </ns03:MdmPartnerId>
                                            </xsl:if>
                                            <ns03:Active>
                                                <xsl:value-of select="ns03:Active"/>
                                            </ns03:Active>
                                            <ns03:AccountName>
                                                <xsl:value-of select="ns03:AccountName"/>
                                            </ns03:AccountName>
                                            <ns03:AccountType>
                                                <xsl:value-of select="ns03:AccountType"/>
                                            </ns03:AccountType>
                                            <xsl:if test="ns03:AccountOtherType">
                                                <ns03:AccountOtherType>
                                                    <xsl:value-of select="ns03:AccountOtherType"/>
                                                </ns03:AccountOtherType>
                                            </xsl:if>
                                            <xsl:if test="ns03:AccountStatus">
                                                <ns03:AccountStatus>
                                                    <xsl:value-of select="ns03:AccountStatus"/>
                                                </ns03:AccountStatus>
                                            </xsl:if>
                                            <xsl:if test="ns03:AKA">
                                                <ns03:AKA>
                                                    <xsl:value-of select="ns03:AKA"/>
                                                </ns03:AKA>
                                            </xsl:if>
                                            <xsl:if test="ns03:VatNumber">
                                                <ns03:VatNumber>
                                                    <xsl:value-of select="ns03:VatNumber"/>
                                                </ns03:VatNumber>
                                            </xsl:if>
                                            <xsl:if test="ns03:MainPhoneNumber">
                                                <ns03:MainPhoneNumber>
                                                    <xsl:value-of select="ns03:MainPhoneNumber"/>
                                                </ns03:MainPhoneNumber>
                                            </xsl:if>
                                            <xsl:if test="ns03:Fax">
                                                <ns03:Fax>
                                                    <xsl:value-of select="ns03:Fax"/>
                                                </ns03:Fax>
                                            </xsl:if>
                                            <ns03:Country>
                                                <xsl:value-of select="ns03:Country"/>
                                            </ns03:Country>
                                            <xsl:if test="ns03:Website">
                                                <ns03:Website>
                                                    <xsl:value-of select="ns03:Website"/>
                                                </ns03:Website>
                                            </xsl:if>
                                            <xsl:if test="ns03:EmailDomain">
                                                <ns03:EmailDomain>
                                                    <xsl:value-of select="ns03:EmailDomain"/>
                                                </ns03:EmailDomain>
                                            </xsl:if>
                                            <xsl:if test="ns03:NavisionID">
                                                <ns03:NavisionID>
                                                    <xsl:value-of select="ns03:NavisionID"/>
                                                </ns03:NavisionID>
                                            </xsl:if>
                                            <xsl:if test="ns03:DUNSName">
                                                <ns03:DUNSName>
                                                    <xsl:value-of select="ns03:DUNSName"/>
                                                </ns03:DUNSName>
                                            </xsl:if>
                                            <xsl:if test="ns03:DUNS">
                                                <ns03:DUNS>
                                                    <xsl:value-of select="ns03:DUNS"/>
                                                </ns03:DUNS>
                                            </xsl:if>
                                            <xsl:if test="ns03:DUNSDirectParent">
                                                <ns03:DUNSDirectParent>
                                                    <xsl:value-of select="ns03:DUNSDirectParent"/>
                                                </ns03:DUNSDirectParent>
                                            </xsl:if>
                                            <xsl:if test="ns03:DUNSGlobalParent">
                                                <ns03:DUNSGlobalParent>
                                                    <xsl:value-of select="ns03:DUNSGlobalParent"/>
                                                </ns03:DUNSGlobalParent>
                                            </xsl:if>
                                            <ns03:BillingCity>
                                                <xsl:value-of select="ns03:BillingCity"/>
                                            </ns03:BillingCity>
                                            <ns03:BillingCountry>
                                                <xsl:value-of select="ns03:BillingCountry"/>
                                            </ns03:BillingCountry>
                                            <ns03:BillingPostalCode>
                                                <xsl:value-of select="ns03:BillingPostalCode"/>
                                            </ns03:BillingPostalCode>
                                            <ns03:BillingState>
                                                <xsl:value-of select="ns03:BillingState"/>
                                            </ns03:BillingState>
                                            <ns03:BillingStreet>
                                                <xsl:value-of select="ns03:BillingStreet"/>
                                            </ns03:BillingStreet>
                                            <xsl:if test="ns03:ParentAccount">
                                                <ns03:ParentAccount>
                                                    <xsl:value-of select="ns03:ParentAccount"/>
                                                </ns03:ParentAccount>
                                            </xsl:if>
                                            <ns03:PartnerTier>
                                                <xsl:value-of select="ns03:PartnerTier"/>
                                            </ns03:PartnerTier>
                                            <xsl:if test="ns03:MergedToSfdcPartnerId">
                                                <ns03:MergedToSfdcPartnerId>
                                                    <xsl:value-of select="ns03:MergedToSfdcPartnerId"/>
                                                </ns03:MergedToSfdcPartnerId>
                                            </xsl:if>
                                            <ns03:recordType>
                                                <xsl:value-of select="ns03:recordType"/>
                                            </ns03:recordType>
                                        </pfx2:Customer>
                                    </xsl:for-each>
                                </pfx2:SFDC>
                            </xsl:when>
                            <xsl:when test="lower-case($Start/root/type)=&quot;contact&quot;">
                                <pfx2:SFDC>
                                    <xsl:for-each select="$GetSFDCView/root/Contact[1]">
                                        <pfx2:Contact>
                                            <ns03:MdmPartnerId>
                                                <xsl:value-of select="ns03:MdmPartnerId"/>
                                            </ns03:MdmPartnerId>
                                            <xsl:if test="ns03:MdmContactId">
                                                <ns03:MdmContactId>
                                                    <xsl:value-of select="ns03:MdmContactId"/>
                                                </ns03:MdmContactId>
                                            </xsl:if>
                                            <xsl:if test="ns03:MdmLocationId">
                                                <ns03:MdmLocationId>
                                                    <xsl:value-of select="ns03:MdmLocationId"/>
                                                </ns03:MdmLocationId>
                                            </xsl:if>
                                            <ns03:SfdcContactId>
                                                <xsl:value-of select="ns03:SfdcContactId"/>
                                            </ns03:SfdcContactId>
                                            <ns03:Salutation>
                                                <xsl:value-of select="ns03:Salutation"/>
                                            </ns03:Salutation>
                                            <ns03:firstName>
                                                <xsl:value-of select="ns03:firstName"/>
                                            </ns03:firstName>
                                            <ns03:lastName>
                                                <xsl:value-of select="ns03:lastName"/>
                                            </ns03:lastName>
                                            <ns03:sfdcPartnerId>
                                                <xsl:value-of select="ns03:sfdcPartnerId"/>
                                            </ns03:sfdcPartnerId>
                                            <xsl:if test="ns03:title">
                                                <ns03:title>
                                                    <xsl:value-of select="ns03:title"/>
                                                </ns03:title>
                                            </xsl:if>
                                            <xsl:if test="ns03:jobFunction">
                                                <ns03:jobFunction>
                                                    <xsl:value-of select="ns03:jobFunction"/>
                                                </ns03:jobFunction>
                                            </xsl:if>
                                            <xsl:if test="ns03:language">
                                                <ns03:language>
                                                    <xsl:value-of select="ns03:language"/>
                                                </ns03:language>
                                            </xsl:if>
                                            <xsl:if test="ns03:sfdcLocationId">
                                                <ns03:sfdcLocationId>
                                                    <xsl:value-of select="ns03:sfdcLocationId"/>
                                                </ns03:sfdcLocationId>
                                            </xsl:if>
                                            <ns03:DirectLine>
                                                <xsl:value-of select="ns03:DirectLine"/>
                                            </ns03:DirectLine>
                                            <xsl:if test="ns03:HomePhone">
                                                <ns03:HomePhone>
                                                    <xsl:value-of select="ns03:HomePhone"/>
                                                </ns03:HomePhone>
                                            </xsl:if>
                                            <xsl:if test="ns03:mobile">
                                                <ns03:mobile>
                                                    <xsl:value-of select="ns03:mobile"/>
                                                </ns03:mobile>
                                            </xsl:if>
                                            <ns03:email>
                                                <xsl:value-of select="ns03:email"/>
                                            </ns03:email>
                                            <xsl:if test="ns03:primaryContact">
                                                <ns03:primaryContact>
                                                    <xsl:copy-of select="ns03:primaryContact/@xsi:nil"/>
                                                    <xsl:value-of select="ns03:primaryContact"/>
                                                </ns03:primaryContact>
                                            </xsl:if>
                                            <ns03:active>
                                                <xsl:value-of select="ns03:active"/>
                                            </ns03:active>
                                            <xsl:if test="ns03:DirectLineExt">
                                                <ns03:DirectLineExt>
                                                    <xsl:value-of select="ns03:DirectLineExt"/>
                                                </ns03:DirectLineExt>
                                            </xsl:if>
                                            <xsl:if test="ns03:recordType">
                                                <ns03:recordType>
                                                    <xsl:value-of select="ns03:recordType"/>
                                                </ns03:recordType>
                                            </xsl:if>
                                            <xsl:if test="ns03:MergedToSfdcContactId">
                                                <ns03:MergedToSfdcContactId>
                                                    <xsl:value-of select="ns03:MergedToSfdcContactId"/>
                                                </ns03:MergedToSfdcContactId>
                                            </xsl:if>
                                        </pfx2:Contact>
                                    </xsl:for-each>
                                </pfx2:SFDC>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx2:SFDC>
                                    <xsl:for-each select="$GetSFDCView/root/Location[1]">
                                        <pfx2:Location>
                                            <ns03:SfdcPartnerId>
                                                <xsl:value-of select="ns03:SfdcPartnerId"/>
                                            </ns03:SfdcPartnerId>
                                            <ns03:MdmPartnerId>
                                                <xsl:value-of select="ns03:MdmPartnerId"/>
                                            </ns03:MdmPartnerId>
                                            <xsl:if test="ns03:SfdcLocationId">
                                                <ns03:SfdcLocationId>
                                                    <xsl:value-of select="ns03:SfdcLocationId"/>
                                                </ns03:SfdcLocationId>
                                            </xsl:if>
                                            <xsl:if test="ns03:MdmLocationId">
                                                <ns03:MdmLocationId>
                                                    <xsl:value-of select="ns03:MdmLocationId"/>
                                                </ns03:MdmLocationId>
                                            </xsl:if>
                                            <xsl:if test="ns03:Account">
                                                <ns03:Account>
                                                    <xsl:value-of select="ns03:Account"/>
                                                </ns03:Account>
                                            </xsl:if>
                                            <ns03:PrimaryLocation>
                                                <xsl:value-of select="ns03:PrimaryLocation"/>
                                            </ns03:PrimaryLocation>
                                            <xsl:if test="ns03:Street">
                                                <ns03:Street>
                                                    <xsl:value-of select="ns03:Street"/>
                                                </ns03:Street>
                                            </xsl:if>
                                            <xsl:if test="ns03:City">
                                                <ns03:City>
                                                    <xsl:value-of select="ns03:City"/>
                                                </ns03:City>
                                            </xsl:if>
                                            <xsl:if test="ns03:CountyRegion">
                                                <ns03:CountyRegion>
                                                    <xsl:value-of select="ns03:CountyRegion"/>
                                                </ns03:CountyRegion>
                                            </xsl:if>
                                            <xsl:if test="ns03:Country">
                                                <ns03:Country>
                                                    <xsl:value-of select="ns03:Country"/>
                                                </ns03:Country>
                                            </xsl:if>
                                            <xsl:if test="ns03:PostalCode">
                                                <ns03:PostalCode>
                                                    <xsl:value-of select="ns03:PostalCode"/>
                                                </ns03:PostalCode>
                                            </xsl:if>
                                            <xsl:if test="ns03:recordType">
                                                <ns03:recordType>
                                                    <xsl:value-of select="ns03:recordType"/>
                                                </ns03:recordType>
                                            </xsl:if>
                                        </pfx2:Location>
                                    </xsl:for-each>
                                </pfx2:SFDC>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <xsl:otherwise>
                        <pfx2:Rallying>
                            <pfx2:Partner>
                                <xsl:copy-of select="$GetRallyView/root/Customer/ancestor-or-self::*/namespace::node()"/>
                                <xsl:copy-of select="$GetRallyView/root/Customer/@*"/>
                                <xsl:copy-of select="$GetRallyView/root/Customer/node()"/>
                            </pfx2:Partner>
                        </pfx2:Rallying>
                    </xsl:otherwise>
                </xsl:choose>
            </pfx2:SMFBody>
        </pfx2:SMF>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType ref="pfx2:SMF"/>
    <pd:endX>421</pd:endX>
    <pd:endY>189</pd:endY>
    <pd:errorSchemas>
        <errorReport ref="pfx3:Error"/>
    </pd:errorSchemas>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1350270391304</pd:targetNamespace>
    <pd:activity name="GetNavisionView">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>255</pd:x>
        <pd:y>87</pd:y>
        <config>
            <processName>/ExternalServices/MDM_Server/CrossCheck/GetNavisionView.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <Type>
                    <xsl:value-of select="$Start/root/type"/>
                </Type>
                <source_id>
                    <xsl:value-of select="$Start/root/source_id"/>
                </source_id>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetRallyView">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>241</pd:x>
        <pd:y>292</pd:y>
        <config>
            <processName>/ExternalServices/MDM_Server/CrossCheck/GetRallyView.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <source_id>
                    <xsl:value-of select="$Start/root/source_id"/>
                </source_id>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetSFDCView">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>240</pd:x>
        <pd:y>186</pd:y>
        <config>
            <processName>/ExternalServices/MDM_Server/CrossCheck/GetSFDCView.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <Type>
                    <xsl:value-of select="$Start/root/type"/>
                </Type>
                <source_id>
                    <xsl:value-of select="$Start/root/source_id"/>
                </source_id>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Generate Error">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>135</pd:x>
        <pd:y>368</pd:y>
        <config>
            <faultName>errorReport</faultName>
        </config>
        <pd:inputBindings>
            <ns2:ActivityInput>
                <message>
                    <xsl:value-of select="concat(&quot;Undefined dataSource:&quot;,$Start/root/dataSource)"/>
                </message>
                <data>
                    <pfx3:Error>
                        <pfx3:src>
                            <xsl:value-of select="&quot;MDM_Server/SelectMDMSourceData&quot;"/>
                        </pfx3:src>
                        <pfx3:error_code>
                            <xsl:value-of select="&quot;&quot;"/>
                        </pfx3:error_code>
                        <pfx3:error_message>
                            <xsl:value-of select="concat(&quot;Undefined dataSource:&quot;,$Start/root/dataSource)"/>
                        </pfx3:error_message>
                        <pfx3:stack_trace>
                            <xsl:value-of select="&quot;&quot;"/>
                        </pfx3:stack_trace>
                    </pfx3:Error>
                </data>
            </ns2:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>278</pd:x>
        <pd:y>386</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Generate-Error-1">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>443</pd:x>
        <pd:y>384</pd:y>
        <config>
            <faultName>errorReport</faultName>
        </config>
        <pd:coercions>
            <pd:coercion xpath="$_error/ns3:ErrorReport/Data/*" element="pfx3:Error"/>
        </pd:coercions>
        <pd:inputBindings>
            <xsl:choose>
                <xsl:when test="exists($_error/ns3:ErrorReport/Data/pfx3:Error)">
                    <ns2:ActivityInput>
                        <xsl:if test="$_error/ns3:ErrorReport/Data/pfx3:Error/pfx3:error_message">
                            <message>
                                <xsl:value-of select="$_error/ns3:ErrorReport/Data/pfx3:Error/pfx3:error_message"/>
                            </message>
                        </xsl:if>
                        <xsl:if test="$_error/ns3:ErrorReport/Data/pfx3:Error/pfx3:error_code">
                            <messageCode>
                                <xsl:value-of select="$_error/ns3:ErrorReport/Data/pfx3:Error/pfx3:error_code"/>
                            </messageCode>
                        </xsl:if>
                        <data>
                            <xsl:copy-of select="$_error/ns3:ErrorReport/Data/ancestor-or-self::*/namespace::node()"/>
                            <xsl:copy-of select="$_error/ns3:ErrorReport/Data/@*"/>
                            <xsl:copy-of select="$_error/ns3:ErrorReport/Data/node()"/>
                        </data>
                    </ns2:ActivityInput>
                </xsl:when>
                <xsl:otherwise>
                    <ns2:ActivityInput>
                        <xsl:if test="$_error/ns3:ErrorReport/Msg">
                            <message>
                                <xsl:value-of select="$_error/ns3:ErrorReport/Msg"/>
                            </message>
                        </xsl:if>
                        <xsl:if test="$_error/ns3:ErrorReport/MsgCode">
                            <messageCode>
                                <xsl:value-of select="$_error/ns3:ErrorReport/MsgCode"/>
                            </messageCode>
                        </xsl:if>
                        <data>
                            <pfx3:Error>
                                <pfx3:src>
                                    <xsl:value-of select="$_error/ns3:ErrorReport/ProcessStack"/>
                                </pfx3:src>
                                <pfx3:error_code>
                                    <xsl:value-of select="$_error/ns3:ErrorReport/MsgCode"/>
                                </pfx3:error_code>
                                <pfx3:error_message>
                                    <xsl:value-of select="$_error/ns3:ErrorReport/Msg"/>
                                </pfx3:error_message>
                                <pfx3:stack_trace>
                                    <xsl:value-of select="$_error/ns3:ErrorReport/StackTrace"/>
                                </pfx3:stack_trace>
                            </pfx3:Error>
                        </data>
                    </ns2:ActivityInput>
                </xsl:otherwise>
            </xsl:choose>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>GetRallyView</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetNavisionView</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetSFDCView</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>GetNavisionView</pd:to>
        <pd:xpathDescription>Navision</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>upper-case($Start/root/dataSource)="NAVISION" or
upper-case($Start/root/dataSource)="TEO"</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>GetSFDCView</pd:to>
        <pd:xpathDescription>SFDC</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>upper-case($Start/root/dataSource)="SFDC"</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>GetRallyView</pd:to>
        <pd:xpathDescription>Rallying</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>upper-case($Start/root/dataSource)="RALLYING"</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Generate Error</pd:to>
        <pd:xpathDescription>other</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>Generate-Error-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>
<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:ns03="http://www.trendmicro.com/ESB/schemas/MDM/SFDC/Customer" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns04="http://www.trendmicro.com/ESB/schemas/MDM/Rallying/Partner" xmlns:ns="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns05="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:TM="java://com.trendmicro.TMBWUtilities" xmlns:pfx="http://www.trendmicro.com/ESB/schemas/MDM/MDMServer" xmlns:ns02="http://www.trendmicro.com/ESB/schemas/MDM/EMEA_ERP/Customer" xmlns:ns2="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns1="http://www.trendmicro.com/ESB/schemas/MDM/EMEA_ERP/Contact" xmlns:ns4="http://www.tibco.com/pe/EngineTypes" xmlns:ns3="http://www.trendmicro.com/ESB/schemas/MDM/TeO/Customer" xmlns:ns0="http://www.trendmicro.com/ESB/schemas/Common" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx4="http://www.trendmicro.com/ESB/ACS/schemas/SMF" xmlns:pfx3="http://www.trendmicro.com/ESB/schemas/error" xmlns:pfx2="http://www.trendmicro.com/ESB/schemas/SMF" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <xsd:import namespace="http://www.trendmicro.com/ESB/schemas/MDM/MDMServer" schemaLocation="/XSD/Client/MDMServer/MDMServer.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/ACS/schemas/SMF" schemaLocation="/XSD/Common/messageheader.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/schemas/SMF" schemaLocation="/XSD/Common/SMF.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/schemas/error" schemaLocation="/XSD/Common/error.xsd"/>
    <pd:name>ExternalServices/MDM_Server/SelectMDMSourceData.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="dataSource" type="xsd:string"/>
                    <xsd:element name="type" type="xsd:string"/>
                    <xsd:element name="source_id" type="xsd:string"/>
                    <xsd:element name="gold_id" type="xsd:string"/>
                    <xsd:element ref="pfx2:SMF"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>88</pd:startX>
    <pd:startY>177</pd:startY>
    <pd:returnBindings>
        <pfx2:SMF>
            <xsl:copy-of select="$Start/root/pfx2:SMF/pfx2:SMFHeader"/>
            <pfx2:SMFBody>
                <xsl:choose>
                    <xsl:when test="exists($SelectSourceDataByID/pfx2:SMF/pfx2:SMFBody/pfx2:Navision)">
                        <xsl:for-each select="$SelectSourceDataByID/pfx2:SMF/pfx2:SMFBody/pfx2:Navision">
                            <pfx2:Navision>
                                <xsl:choose>
                                    <xsl:when test="exists(pfx2:Customer)">
                                        <xsl:for-each select="pfx2:Customer">
                                            <pfx2:Customer>
                                                <xsl:for-each select="ns02:Customer">
                                                    <ns02:Customer>
                                                        <xsl:if test="ns02:MDMCustID">
                                                            <ns02:MDMCustID>
                                                                <xsl:value-of select="ns02:MDMCustID"/>
                                                            </ns02:MDMCustID>
                                                        </xsl:if>
                                                        <xsl:if test="ns02:DnBNum">
                                                            <ns02:DnBNum>
                                                                <xsl:value-of select="ns02:DnBNum"/>
                                                            </ns02:DnBNum>
                                                        </xsl:if>
                                                        <ns02:SiebelID>
                                                            <xsl:value-of select="ns02:SiebelID"/>
                                                        </ns02:SiebelID>
                                                        <xsl:if test="ns02:SalesForceID">
                                                            <ns02:SalesForceID>
                                                                <xsl:value-of select="ns02:SalesForceID"/>
                                                            </ns02:SalesForceID>
                                                        </xsl:if>
                                                        <xsl:if test="ns02:B2BCustID">
                                                            <ns02:B2BCustID>
                                                                <xsl:value-of select="ns02:B2BCustID"/>
                                                            </ns02:B2BCustID>
                                                        </xsl:if>
                                                        <ns02:NavDistiID>
                                                            <xsl:value-of select="ns02:NavDistiID"/>
                                                        </ns02:NavDistiID>
                                                        <ns02:NAVID>
                                                            <xsl:value-of select="ns02:NAVID"/>
                                                        </ns02:NAVID>
                                                        <ns02:CustomerName>
                                                            <xsl:value-of select="ns02:CustomerName"/>
                                                        </ns02:CustomerName>
                                                        <ns02:CustomerName2>
                                                            <xsl:value-of select="ns02:CustomerName2"/>
                                                        </ns02:CustomerName2>
                                                        <ns02:Address>
                                                            <xsl:value-of select="ns02:Address"/>
                                                        </ns02:Address>
                                                        <ns02:Address2>
                                                            <xsl:value-of select="ns02:Address2"/>
                                                        </ns02:Address2>
                                                        <ns02:City>
                                                            <xsl:value-of select="ns02:City"/>
                                                        </ns02:City>
                                                        <ns02:County>
                                                            <xsl:value-of select="ns02:County"/>
                                                        </ns02:County>
                                                        <ns02:PostCode>
                                                            <xsl:value-of select="ns02:PostCode"/>
                                                        </ns02:PostCode>
                                                        <ns02:CountryCode>
                                                            <xsl:value-of select="ns02:CountryCode"/>
                                                        </ns02:CountryCode>
                                                        <ns02:Phone>
                                                            <xsl:value-of select="ns02:Phone"/>
                                                        </ns02:Phone>
                                                        <ns02:Fax>
                                                            <xsl:value-of select="ns02:Fax"/>
                                                        </ns02:Fax>
                                                        <ns02:Email>
                                                            <xsl:value-of select="ns02:Email"/>
                                                        </ns02:Email>
                                                        <ns02:LanguageCode>
                                                            <xsl:value-of select="ns02:LanguageCode"/>
                                                        </ns02:LanguageCode>
                                                        <ns02:LegalEntity>
                                                            <xsl:value-of select="ns02:LegalEntity"/>
                                                        </ns02:LegalEntity>
                                                        <ns02:EndCustomer>
                                                            <xsl:value-of select="ns02:EndCustomer"/>
                                                        </ns02:EndCustomer>
                                                        <ns02:Reseller>
                                                            <xsl:value-of select="ns02:Reseller"/>
                                                        </ns02:Reseller>
                                                        <ns02:TransactionProfile>
                                                            <xsl:value-of select="ns02:TransactionProfile"/>
                                                        </ns02:TransactionProfile>
                                                        <ns02:Segment>
                                                            <xsl:value-of select="ns02:Segment"/>
                                                        </ns02:Segment>
                                                        <ns02:MasterNAVID>
                                                            <xsl:value-of select="ns02:MasterNAVID"/>
                                                        </ns02:MasterNAVID>
                                                        <ns02:Blocked>
                                                            <xsl:value-of select="ns02:Blocked"/>
                                                        </ns02:Blocked>
                                                        <ns02:PartnerTier>
                                                            <xsl:value-of select="ns02:PartnerTier"/>
                                                        </ns02:PartnerTier>
                                                        <xsl:if test="ns02:DefaultAccred">
                                                            <ns02:DefaultAccred>
                                                                <xsl:value-of select="ns02:DefaultAccred"/>
                                                            </ns02:DefaultAccred>
                                                        </xsl:if>
                                                        <ns02:VATRegNo>
                                                            <xsl:value-of select="ns02:VATRegNo"/>
                                                        </ns02:VATRegNo>
                                                        <xsl:if test="ns02:DefaultContactID">
                                                            <ns02:DefaultContactID>
                                                                <xsl:value-of select="ns02:DefaultContactID"/>
                                                            </ns02:DefaultContactID>
                                                        </xsl:if>
                                                        <ns02:SourceSystemID>
                                                            <xsl:value-of select="ns02:SourceSystemID"/>
                                                        </ns02:SourceSystemID>
                                                        <xsl:if test="ns02:DistributorType">
                                                            <ns02:DistributorType>
                                                                <xsl:value-of select="ns02:DistributorType"/>
                                                            </ns02:DistributorType>
                                                        </xsl:if>
                                                        <ns02:Company>
                                                            <xsl:value-of select="ns02:Company"/>
                                                        </ns02:Company>
                                                        <xsl:if test="ns02:Currency">
                                                            <ns02:Currency>
                                                                <xsl:value-of select="ns02:Currency"/>
                                                            </ns02:Currency>
                                                        </xsl:if>
                                                        <xsl:if test="ns02:DeDupExclude">
                                                            <ns02:DeDupExclude>
                                                                <xsl:value-of select="ns02:DeDupExclude"/>
                                                            </ns02:DeDupExclude>
                                                        </xsl:if>
                                                        <xsl:if test="ns02:TEO_IsBlocked">
                                                            <ns02:TEO_IsBlocked>
                                                                <xsl:copy-of select="ns02:TEO_IsBlocked/@xsi:nil"/>
                                                                <xsl:value-of select="ns02:TEO_IsBlocked"/>
                                                            </ns02:TEO_IsBlocked>
                                                        </xsl:if>
                                                        <ns02:MSP>
                                                            <xsl:value-of select="ns02:MSP"/>
                                                        </ns02:MSP>
                                                        <ns02:MarketPlace>
                                                            <xsl:value-of select="ns02:MarketPlace"/>
                                                        </ns02:MarketPlace>
                                                        <ns02:MSPContractSigned>
                                                            <xsl:value-of select="ns02:MSPContractSigned"/>
                                                        </ns02:MSPContractSigned>
                                                    </ns02:Customer>
                                                </xsl:for-each>
                                            </pfx2:Customer>
                                        </xsl:for-each>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:for-each select="pfx2:Contact">
                                            <pfx2:Contact>
                                                <xsl:for-each select="ns1:Contact">
                                                    <ns1:Contact>
                                                        <ns1:MDMContID>
                                                            <xsl:value-of select="ns1:MDMContID"/>
                                                        </ns1:MDMContID>
                                                        <ns1:MDMCustID>
                                                            <xsl:value-of select="ns1:MDMCustID"/>
                                                        </ns1:MDMCustID>
                                                        <ns1:NavID>
                                                            <xsl:value-of select="ns1:NavID"/>
                                                        </ns1:NavID>
                                                        <ns1:NAVCustID>
                                                            <xsl:value-of select="ns1:NAVCustID"/>
                                                        </ns1:NAVCustID>
                                                        <ns1:ContactName>
                                                            <xsl:value-of select="ns1:ContactName"/>
                                                        </ns1:ContactName>
                                                        <ns1:Phone>
                                                            <xsl:value-of select="ns1:Phone"/>
                                                        </ns1:Phone>
                                                        <ns1:MobilePhone>
                                                            <xsl:value-of select="ns1:MobilePhone"/>
                                                        </ns1:MobilePhone>
                                                        <ns1:Email>
                                                            <xsl:value-of select="ns1:Email"/>
                                                        </ns1:Email>
                                                        <ns1:SourceSystemID>
                                                            <xsl:value-of select="ns1:SourceSystemID"/>
                                                        </ns1:SourceSystemID>
                                                    </ns1:Contact>
                                                </xsl:for-each>
                                            </pfx2:Contact>
                                        </xsl:for-each>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </pfx2:Navision>
                        </xsl:for-each>
                    </xsl:when>
                    <xsl:when test="exists($SelectSourceDataByID/pfx2:SMF/pfx2:SMFBody/pfx2:Rallying)">
                        <xsl:for-each select="$SelectSourceDataByID/pfx2:SMF/pfx2:SMFBody/pfx2:Rallying">
                            <pfx2:Rallying>
                                <xsl:copy-of select="pfx2:Partner"/>
                            </pfx2:Rallying>
                        </xsl:for-each>
                    </xsl:when>
                    <xsl:when test="exists($SelectSourceDataByID/pfx2:SMF/pfx2:SMFBody/pfx2:SFDC)">
                        <xsl:for-each select="$SelectSourceDataByID/pfx2:SMF/pfx2:SMFBody/pfx2:SFDC">
                            <pfx2:SFDC>
                                <xsl:choose>
                                    <xsl:when test="exists(pfx2:Customer)">
                                        <xsl:for-each select="pfx2:Customer">
                                            <pfx2:Customer>
                                                <ns03:SfdcPartnerId>
                                                    <xsl:value-of select="ns03:SfdcPartnerId"/>
                                                </ns03:SfdcPartnerId>
                                                <xsl:if test="ns03:MdmPartnerId">
                                                    <ns03:MdmPartnerId>
                                                        <xsl:copy-of select="ns03:MdmPartnerId/@xsi:nil"/>
                                                        <xsl:value-of select="ns03:MdmPartnerId"/>
                                                    </ns03:MdmPartnerId>
                                                </xsl:if>
                                                <ns03:Active>
                                                    <xsl:value-of select="ns03:Active"/>
                                                </ns03:Active>
                                                <ns03:AccountName>
                                                    <xsl:value-of select="ns03:AccountName"/>
                                                </ns03:AccountName>
                                                <ns03:AccountType>
                                                    <xsl:value-of select="ns03:AccountType"/>
                                                </ns03:AccountType>
                                                <xsl:if test="ns03:AccountOtherType">
                                                    <ns03:AccountOtherType>
                                                        <xsl:value-of select="ns03:AccountOtherType"/>
                                                    </ns03:AccountOtherType>
                                                </xsl:if>
                                                <xsl:if test="ns03:AccountStatus">
                                                    <ns03:AccountStatus>
                                                        <xsl:value-of select="ns03:AccountStatus"/>
                                                    </ns03:AccountStatus>
                                                </xsl:if>
                                                <xsl:if test="ns03:AKA">
                                                    <ns03:AKA>
                                                        <xsl:value-of select="ns03:AKA"/>
                                                    </ns03:AKA>
                                                </xsl:if>
                                                <xsl:if test="ns03:VatNumber">
                                                    <ns03:VatNumber>
                                                        <xsl:value-of select="ns03:VatNumber"/>
                                                    </ns03:VatNumber>
                                                </xsl:if>
                                                <xsl:if test="ns03:MainPhoneNumber">
                                                    <ns03:MainPhoneNumber>
                                                        <xsl:value-of select="ns03:MainPhoneNumber"/>
                                                    </ns03:MainPhoneNumber>
                                                </xsl:if>
                                                <xsl:if test="ns03:Fax">
                                                    <ns03:Fax>
                                                        <xsl:value-of select="ns03:Fax"/>
                                                    </ns03:Fax>
                                                </xsl:if>
                                                <ns03:Country>
                                                    <xsl:value-of select="ns03:Country"/>
                                                </ns03:Country>
                                                <xsl:if test="ns03:Website">
                                                    <ns03:Website>
                                                        <xsl:value-of select="ns03:Website"/>
                                                    </ns03:Website>
                                                </xsl:if>
                                                <xsl:if test="ns03:EmailDomain">
                                                    <ns03:EmailDomain>
                                                        <xsl:value-of select="ns03:EmailDomain"/>
                                                    </ns03:EmailDomain>
                                                </xsl:if>
                                                <xsl:if test="ns03:NavisionID">
                                                    <ns03:NavisionID>
                                                        <xsl:value-of select="ns03:NavisionID"/>
                                                    </ns03:NavisionID>
                                                </xsl:if>
                                                <xsl:if test="ns03:DUNSName">
                                                    <ns03:DUNSName>
                                                        <xsl:value-of select="ns03:DUNSName"/>
                                                    </ns03:DUNSName>
                                                </xsl:if>
                                                <xsl:if test="ns03:DUNS">
                                                    <ns03:DUNS>
                                                        <xsl:value-of select="ns03:DUNS"/>
                                                    </ns03:DUNS>
                                                </xsl:if>
                                                <xsl:if test="ns03:DUNSDirectParent">
                                                    <ns03:DUNSDirectParent>
                                                        <xsl:value-of select="ns03:DUNSDirectParent"/>
                                                    </ns03:DUNSDirectParent>
                                                </xsl:if>
                                                <xsl:if test="ns03:DUNSGlobalParent">
                                                    <ns03:DUNSGlobalParent>
                                                        <xsl:value-of select="ns03:DUNSGlobalParent"/>
                                                    </ns03:DUNSGlobalParent>
                                                </xsl:if>
                                                <ns03:BillingCity>
                                                    <xsl:value-of select="ns03:BillingCity"/>
                                                </ns03:BillingCity>
                                                <ns03:BillingCountry>
                                                    <xsl:value-of select="ns03:BillingCountry"/>
                                                </ns03:BillingCountry>
                                                <ns03:BillingPostalCode>
                                                    <xsl:value-of select="ns03:BillingPostalCode"/>
                                                </ns03:BillingPostalCode>
                                                <ns03:BillingState>
                                                    <xsl:value-of select="ns03:BillingState"/>
                                                </ns03:BillingState>
                                                <ns03:BillingStreet>
                                                    <xsl:value-of select="ns03:BillingStreet"/>
                                                </ns03:BillingStreet>
                                                <xsl:if test="ns03:ParentAccount">
                                                    <ns03:ParentAccount>
                                                        <xsl:value-of select="ns03:ParentAccount"/>
                                                    </ns03:ParentAccount>
                                                </xsl:if>
                                                <ns03:PartnerTier>
                                                    <xsl:value-of select="ns03:PartnerTier"/>
                                                </ns03:PartnerTier>
                                                <xsl:if test="ns03:MergedToSfdcPartnerId">
                                                    <ns03:MergedToSfdcPartnerId>
                                                        <xsl:value-of select="ns03:MergedToSfdcPartnerId"/>
                                                    </ns03:MergedToSfdcPartnerId>
                                                </xsl:if>
                                                <xsl:if test="ns03:recordType">
                                                    <ns03:recordType>
                                                        <xsl:value-of select="ns03:recordType"/>
                                                    </ns03:recordType>
                                                </xsl:if>
                                            </pfx2:Customer>
                                        </xsl:for-each>
                                    </xsl:when>
                                    <xsl:when test="exists(pfx2:Contact)">
                                        <xsl:for-each select="pfx2:Contact">
                                            <pfx2:Contact>
                                                <ns03:MdmPartnerId>
                                                    <xsl:value-of select="ns03:MdmPartnerId"/>
                                                </ns03:MdmPartnerId>
                                                <xsl:if test="ns03:MdmContactId">
                                                    <ns03:MdmContactId>
                                                        <xsl:value-of select="ns03:MdmContactId"/>
                                                    </ns03:MdmContactId>
                                                </xsl:if>
                                                <xsl:if test="ns03:MdmLocationId">
                                                    <ns03:MdmLocationId>
                                                        <xsl:value-of select="ns03:MdmLocationId"/>
                                                    </ns03:MdmLocationId>
                                                </xsl:if>
                                                <ns03:SfdcContactId>
                                                    <xsl:value-of select="ns03:SfdcContactId"/>
                                                </ns03:SfdcContactId>
                                                <ns03:Salutation>
                                                    <xsl:value-of select="ns03:Salutation"/>
                                                </ns03:Salutation>
                                                <ns03:firstName>
                                                    <xsl:value-of select="ns03:firstName"/>
                                                </ns03:firstName>
                                                <ns03:lastName>
                                                    <xsl:value-of select="ns03:lastName"/>
                                                </ns03:lastName>
                                                <ns03:sfdcPartnerId>
                                                    <xsl:value-of select="ns03:sfdcPartnerId"/>
                                                </ns03:sfdcPartnerId>
                                                <xsl:if test="ns03:title">
                                                    <ns03:title>
                                                        <xsl:value-of select="ns03:title"/>
                                                    </ns03:title>
                                                </xsl:if>
                                                <xsl:if test="ns03:jobFunction">
                                                    <ns03:jobFunction>
                                                        <xsl:value-of select="ns03:jobFunction"/>
                                                    </ns03:jobFunction>
                                                </xsl:if>
                                                <xsl:if test="ns03:language">
                                                    <ns03:language>
                                                        <xsl:value-of select="ns03:language"/>
                                                    </ns03:language>
                                                </xsl:if>
                                                <xsl:if test="ns03:sfdcLocationId">
                                                    <ns03:sfdcLocationId>
                                                        <xsl:value-of select="ns03:sfdcLocationId"/>
                                                    </ns03:sfdcLocationId>
                                                </xsl:if>
                                                <ns03:DirectLine>
                                                    <xsl:value-of select="ns03:DirectLine"/>
                                                </ns03:DirectLine>
                                                <xsl:if test="ns03:HomePhone">
                                                    <ns03:HomePhone>
                                                        <xsl:value-of select="ns03:HomePhone"/>
                                                    </ns03:HomePhone>
                                                </xsl:if>
                                                <xsl:if test="ns03:mobile">
                                                    <ns03:mobile>
                                                        <xsl:value-of select="ns03:mobile"/>
                                                    </ns03:mobile>
                                                </xsl:if>
                                                <ns03:email>
                                                    <xsl:value-of select="ns03:email"/>
                                                </ns03:email>
                                                <xsl:if test="ns03:primaryContact">
                                                    <ns03:primaryContact>
                                                        <xsl:copy-of select="ns03:primaryContact/@xsi:nil"/>
                                                        <xsl:value-of select="ns03:primaryContact"/>
                                                    </ns03:primaryContact>
                                                </xsl:if>
                                                <ns03:active>
                                                    <xsl:value-of select="ns03:active"/>
                                                </ns03:active>
                                                <xsl:if test="ns03:DirectLineExt">
                                                    <ns03:DirectLineExt>
                                                        <xsl:value-of select="ns03:DirectLineExt"/>
                                                    </ns03:DirectLineExt>
                                                </xsl:if>
                                                <xsl:if test="ns03:recordType">
                                                    <ns03:recordType>
                                                        <xsl:value-of select="ns03:recordType"/>
                                                    </ns03:recordType>
                                                </xsl:if>
                                                <xsl:if test="ns03:MergedToSfdcContactId">
                                                    <ns03:MergedToSfdcContactId>
                                                        <xsl:value-of select="ns03:MergedToSfdcContactId"/>
                                                    </ns03:MergedToSfdcContactId>
                                                </xsl:if>
                                            </pfx2:Contact>
                                        </xsl:for-each>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:for-each select="pfx2:Location">
                                            <pfx2:Location>
                                                <ns03:SfdcPartnerId>
                                                    <xsl:value-of select="ns03:SfdcPartnerId"/>
                                                </ns03:SfdcPartnerId>
                                                <ns03:MdmPartnerId>
                                                    <xsl:value-of select="ns03:MdmPartnerId"/>
                                                </ns03:MdmPartnerId>
                                                <xsl:if test="ns03:SfdcLocationId">
                                                    <ns03:SfdcLocationId>
                                                        <xsl:value-of select="ns03:SfdcLocationId"/>
                                                    </ns03:SfdcLocationId>
                                                </xsl:if>
                                                <xsl:if test="ns03:MdmLocationId">
                                                    <ns03:MdmLocationId>
                                                        <xsl:value-of select="ns03:MdmLocationId"/>
                                                    </ns03:MdmLocationId>
                                                </xsl:if>
                                                <xsl:if test="ns03:Account">
                                                    <ns03:Account>
                                                        <xsl:value-of select="ns03:Account"/>
                                                    </ns03:Account>
                                                </xsl:if>
                                                <ns03:PrimaryLocation>
                                                    <xsl:value-of select="ns03:PrimaryLocation"/>
                                                </ns03:PrimaryLocation>
                                                <xsl:if test="ns03:Street">
                                                    <ns03:Street>
                                                        <xsl:value-of select="ns03:Street"/>
                                                    </ns03:Street>
                                                </xsl:if>
                                                <xsl:if test="ns03:City">
                                                    <ns03:City>
                                                        <xsl:value-of select="ns03:City"/>
                                                    </ns03:City>
                                                </xsl:if>
                                                <xsl:if test="ns03:CountyRegion">
                                                    <ns03:CountyRegion>
                                                        <xsl:value-of select="ns03:CountyRegion"/>
                                                    </ns03:CountyRegion>
                                                </xsl:if>
                                                <xsl:if test="ns03:Country">
                                                    <ns03:Country>
                                                        <xsl:value-of select="ns03:Country"/>
                                                    </ns03:Country>
                                                </xsl:if>
                                                <xsl:if test="ns03:PostalCode">
                                                    <ns03:PostalCode>
                                                        <xsl:value-of select="ns03:PostalCode"/>
                                                    </ns03:PostalCode>
                                                </xsl:if>
                                                <xsl:if test="ns03:recordType">
                                                    <ns03:recordType>
                                                        <xsl:value-of select="ns03:recordType"/>
                                                    </ns03:recordType>
                                                </xsl:if>
                                            </pfx2:Location>
                                        </xsl:for-each>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </pfx2:SFDC>
                        </xsl:for-each>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:for-each select="$SelectSourceDataByID/pfx2:SMF/pfx2:SMFBody/pfx2:TeO">
                            <pfx2:TeO>
                                <xsl:for-each select="pfx2:Customer">
                                    <pfx2:Customer>
                                        <xsl:for-each select="ns3:Customer">
                                            <ns3:Customer>
                                                <ns3:Command>
                                                    <xsl:value-of select="$Start/root/pfx2:SMF/pfx2:SMFHeader/ns0:ServiceName"/>
                                                </ns3:Command>
                                                <ns3:NavisionID>
                                                    <xsl:value-of select="ns3:NavisionID"/>
                                                </ns3:NavisionID>
                                                <ns3:MDMID>
                                                    <xsl:value-of select="ns3:MDMID"/>
                                                </ns3:MDMID>
                                                <xsl:if test="ns3:SFID">
                                                    <ns3:SFID>
                                                        <xsl:value-of select="ns3:SFID"/>
                                                    </ns3:SFID>
                                                </xsl:if>
                                                <xsl:if test="ns3:DUNSID">
                                                    <ns3:DUNSID>
                                                        <xsl:value-of select="ns3:DUNSID"/>
                                                    </ns3:DUNSID>
                                                </xsl:if>
                                                <xsl:if test="ns3:B2BID">
                                                    <ns3:B2BID>
                                                        <xsl:value-of select="ns3:B2BID"/>
                                                    </ns3:B2BID>
                                                </xsl:if>
                                                <ns3:IsDisti>
                                                    <xsl:value-of select="ns3:IsDisti"/>
                                                </ns3:IsDisti>
                                                <ns3:IsReseller>
                                                    <xsl:value-of select="ns3:IsReseller"/>
                                                </ns3:IsReseller>
                                                <ns3:IsEndUser>
                                                    <xsl:value-of select="ns3:IsEndUser"/>
                                                </ns3:IsEndUser>
                                                <xsl:if test="ns3:CountryID">
                                                    <ns3:CountryID>
                                                        <xsl:value-of select="ns3:CountryID"/>
                                                    </ns3:CountryID>
                                                </xsl:if>
                                                <ns3:Name>
                                                    <xsl:value-of select="ns3:Name"/>
                                                </ns3:Name>
                                                <xsl:if test="ns3:Name2">
                                                    <ns3:Name2>
                                                        <xsl:value-of select="ns3:Name2"/>
                                                    </ns3:Name2>
                                                </xsl:if>
                                                <ns3:Address>
                                                    <xsl:value-of select="ns3:Address"/>
                                                </ns3:Address>
                                                <xsl:if test="ns3:Address2">
                                                    <ns3:Address2>
                                                        <xsl:value-of select="ns3:Address2"/>
                                                    </ns3:Address2>
                                                </xsl:if>
                                                <xsl:if test="ns3:City">
                                                    <ns3:City>
                                                        <xsl:value-of select="ns3:City"/>
                                                    </ns3:City>
                                                </xsl:if>
                                                <xsl:if test="ns3:County">
                                                    <ns3:County>
                                                        <xsl:value-of select="ns3:County"/>
                                                    </ns3:County>
                                                </xsl:if>
                                                <xsl:if test="ns3:Email">
                                                    <ns3:Email>
                                                        <xsl:value-of select="ns3:Email"/>
                                                    </ns3:Email>
                                                </xsl:if>
                                                <xsl:if test="ns3:Fax">
                                                    <ns3:Fax>
                                                        <xsl:value-of select="ns3:Fax"/>
                                                    </ns3:Fax>
                                                </xsl:if>
                                                <xsl:if test="ns3:Phone">
                                                    <ns3:Phone>
                                                        <xsl:value-of select="ns3:Phone"/>
                                                    </ns3:Phone>
                                                </xsl:if>
                                                <xsl:if test="ns3:Website">
                                                    <ns3:Website>
                                                        <xsl:value-of select="ns3:Website"/>
                                                    </ns3:Website>
                                                </xsl:if>
                                                <xsl:if test="ns3:Zip">
                                                    <ns3:Zip>
                                                        <xsl:value-of select="ns3:Zip"/>
                                                    </ns3:Zip>
                                                </xsl:if>
                                                <xsl:if test="ns3:LanguageCode">
                                                    <ns3:LanguageCode>
                                                        <xsl:value-of select="ns3:LanguageCode"/>
                                                    </ns3:LanguageCode>
                                                </xsl:if>
                                                <xsl:if test="ns3:Blocked">
                                                    <ns3:Blocked>
                                                        <xsl:value-of select="ns3:Blocked"/>
                                                    </ns3:Blocked>
                                                </xsl:if>
                                                <xsl:if test="ns3:DistributorType">
                                                    <ns3:DistributorType>
                                                        <xsl:value-of select="ns3:DistributorType"/>
                                                    </ns3:DistributorType>
                                                </xsl:if>
                                                <xsl:if test="ns3:Company">
                                                    <ns3:Company>
                                                        <xsl:value-of select="ns3:Company"/>
                                                    </ns3:Company>
                                                </xsl:if>
                                                <xsl:if test="ns3:Currency">
                                                    <ns3:Currency>
                                                        <xsl:value-of select="ns3:Currency"/>
                                                    </ns3:Currency>
                                                </xsl:if>
                                                <xsl:if test="ns3:Category">
                                                    <ns3:Category>
                                                        <xsl:value-of select="ns3:Category"/>
                                                    </ns3:Category>
                                                </xsl:if>
                                                <xsl:if test="ns3:DefaultAccred">
                                                    <ns3:DefaultAccred>
                                                        <xsl:value-of select="ns3:DefaultAccred"/>
                                                    </ns3:DefaultAccred>
                                                </xsl:if>
                                                <xsl:if test="ns3:DefaultContactID">
                                                    <ns3:DefaultContactID>
                                                        <xsl:value-of select="ns3:DefaultContactID"/>
                                                    </ns3:DefaultContactID>
                                                </xsl:if>
                                                <xsl:if test="ns3:IsXSP">
                                                    <ns3:IsXSP>
                                                        <xsl:value-of select="ns3:IsXSP"/>
                                                    </ns3:IsXSP>
                                                </xsl:if>
                                                <xsl:if test="ns3:IsMarketPlace">
                                                    <ns3:IsMarketPlace>
                                                        <xsl:value-of select="ns3:IsMarketPlace"/>
                                                    </ns3:IsMarketPlace>
                                                </xsl:if>
                                                <xsl:if test="ns3:ContractFlag">
                                                    <ns3:ContractFlag>
                                                        <xsl:value-of select="ns3:ContractFlag"/>
                                                    </ns3:ContractFlag>
                                                </xsl:if>
                                            </ns3:Customer>
                                        </xsl:for-each>
                                    </pfx2:Customer>
                                </xsl:for-each>
                            </pfx2:TeO>
                        </xsl:for-each>
                    </xsl:otherwise>
                </xsl:choose>
                <pfx2:MDM>
                    <pfx2:Company>
                        <xsl:choose>
                            <xsl:when test="exists($Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:gold_id)">
                                <pfx:gold_id>
                                    <xsl:copy-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:gold_id/@xsi:nil"/>
                                    <xsl:value-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:gold_id"/>
                                </pfx:gold_id>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx:gold_id xsi:nil="true"/>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists($Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:company_name)">
                                <pfx:company_name>
                                    <xsl:copy-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:company_name/@xsi:nil"/>
                                    <xsl:value-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:company_name"/>
                                </pfx:company_name>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx:company_name xsi:nil="true"/>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists($Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:aka)">
                                <pfx:aka>
                                    <xsl:copy-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:aka/@xsi:nil"/>
                                    <xsl:value-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:aka"/>
                                </pfx:aka>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx:aka xsi:nil="true"/>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists($Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:match_name)">
                                <pfx:match_name>
                                    <xsl:copy-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:match_name/@xsi:nil"/>
                                    <xsl:value-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:match_name"/>
                                </pfx:match_name>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx:match_name xsi:nil="true"/>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists($Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:company_address)">
                                <pfx:company_address>
                                    <xsl:copy-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:company_address/@xsi:nil"/>
                                    <xsl:value-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:company_address"/>
                                </pfx:company_address>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx:company_address xsi:nil="true"/>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists($Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:company_address_line2)">
                                <pfx:company_address_line2>
                                    <xsl:copy-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:company_address_line2/@xsi:nil"/>
                                    <xsl:value-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:company_address_line2"/>
                                </pfx:company_address_line2>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx:company_address_line2 xsi:nil="true"/>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists($Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:company_address_line3)">
                                <pfx:company_address_line3>
                                    <xsl:copy-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:company_address_line3/@xsi:nil"/>
                                    <xsl:value-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:company_address_line3"/>
                                </pfx:company_address_line3>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx:company_address_line3 xsi:nil="true"/>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists($Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:country)">
                                <pfx:country>
                                    <xsl:copy-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:country/@xsi:nil"/>
                                    <xsl:value-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:country"/>
                                </pfx:country>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx:country xsi:nil="true"/>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists($Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:county)">
                                <pfx:county>
                                    <xsl:copy-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:county/@xsi:nil"/>
                                    <xsl:value-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:county"/>
                                </pfx:county>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx:county xsi:nil="true"/>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists($Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:city)">
                                <pfx:city>
                                    <xsl:copy-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:city/@xsi:nil"/>
                                    <xsl:value-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:city"/>
                                </pfx:city>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx:city xsi:nil="true"/>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists($Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:post_code)">
                                <pfx:post_code>
                                    <xsl:copy-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:post_code/@xsi:nil"/>
                                    <xsl:value-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:post_code"/>
                                </pfx:post_code>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx:post_code xsi:nil="true"/>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists($Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:company_website)">
                                <pfx:company_website>
                                    <xsl:copy-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:company_website/@xsi:nil"/>
                                    <xsl:value-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:company_website"/>
                                </pfx:company_website>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx:company_website xsi:nil="true"/>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists($Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:currency_code)">
                                <pfx:currency_code>
                                    <xsl:copy-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:currency_code/@xsi:nil"/>
                                    <xsl:value-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:currency_code"/>
                                </pfx:currency_code>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx:currency_code xsi:nil="true"/>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists($Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:language_code)">
                                <pfx:language_code>
                                    <xsl:copy-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:language_code/@xsi:nil"/>
                                    <xsl:value-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:language_code"/>
                                </pfx:language_code>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx:language_code xsi:nil="true"/>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists($Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:segment)">
                                <pfx:segment>
                                    <xsl:copy-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:segment/@xsi:nil"/>
                                    <xsl:value-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:segment"/>
                                </pfx:segment>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx:segment xsi:nil="true"/>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists($Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:master_customer_no)">
                                <pfx:master_customer_no>
                                    <xsl:copy-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:master_customer_no/@xsi:nil"/>
                                    <xsl:value-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:master_customer_no"/>
                                </pfx:master_customer_no>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx:master_customer_no xsi:nil="true"/>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists($Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:company_status)">
                                <pfx:company_status>
                                    <xsl:copy-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:company_status/@xsi:nil"/>
                                    <xsl:value-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:company_status"/>
                                </pfx:company_status>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx:company_status xsi:nil="true"/>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists($Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:primary_email)">
                                <pfx:primary_email>
                                    <xsl:copy-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:primary_email/@xsi:nil"/>
                                    <xsl:value-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:primary_email"/>
                                </pfx:primary_email>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx:primary_email xsi:nil="true"/>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists($Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:vat_number)">
                                <pfx:vat_number>
                                    <xsl:copy-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:vat_number/@xsi:nil"/>
                                    <xsl:value-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:vat_number"/>
                                </pfx:vat_number>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx:vat_number xsi:nil="true"/>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists($Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:primary_phone_no)">
                                <pfx:primary_phone_no>
                                    <xsl:copy-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:primary_phone_no/@xsi:nil"/>
                                    <xsl:value-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:primary_phone_no"/>
                                </pfx:primary_phone_no>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx:primary_phone_no xsi:nil="true"/>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists($Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:primary_fax_no)">
                                <pfx:primary_fax_no>
                                    <xsl:copy-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:primary_fax_no/@xsi:nil"/>
                                    <xsl:value-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:primary_fax_no"/>
                                </pfx:primary_fax_no>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx:primary_fax_no xsi:nil="true"/>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists($Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:is_reseller)">
                                <pfx:is_reseller>
                                    <xsl:copy-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:is_reseller/@xsi:nil"/>
                                    <xsl:value-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:is_reseller"/>
                                </pfx:is_reseller>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx:is_reseller xsi:nil="true"/>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists($Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:is_enduser)">
                                <pfx:is_enduser>
                                    <xsl:copy-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:is_enduser/@xsi:nil"/>
                                    <xsl:value-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:is_enduser"/>
                                </pfx:is_enduser>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx:is_enduser xsi:nil="true"/>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists($Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:is_distributor)">
                                <pfx:is_distributor>
                                    <xsl:copy-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:is_distributor/@xsi:nil"/>
                                    <xsl:value-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:is_distributor"/>
                                </pfx:is_distributor>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx:is_distributor xsi:nil="true"/>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists($Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:created)">
                                <pfx:created>
                                    <xsl:copy-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:created/@xsi:nil"/>
                                    <xsl:value-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:created"/>
                                </pfx:created>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx:created xsi:nil="true"/>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists($Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:created_by)">
                                <pfx:created_by>
                                    <xsl:copy-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:created_by/@xsi:nil"/>
                                    <xsl:value-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:created_by"/>
                                </pfx:created_by>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx:created_by xsi:nil="true"/>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists($Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:last_upd)">
                                <pfx:last_upd>
                                    <xsl:copy-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:last_upd/@xsi:nil"/>
                                    <xsl:value-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:last_upd"/>
                                </pfx:last_upd>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx:last_upd xsi:nil="true"/>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists($Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:last_upd_by)">
                                <pfx:last_upd_by>
                                    <xsl:copy-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:last_upd_by/@xsi:nil"/>
                                    <xsl:value-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:last_upd_by"/>
                                </pfx:last_upd_by>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx:last_upd_by xsi:nil="true"/>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists($Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:source_id)">
                                <pfx:source_id>
                                    <xsl:copy-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:source_id/@xsi:nil"/>
                                    <xsl:value-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:source_id"/>
                                </pfx:source_id>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx:source_id xsi:nil="true"/>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists($Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:sub_region)">
                                <pfx:sub_region>
                                    <xsl:copy-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:sub_region/@xsi:nil"/>
                                    <xsl:value-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:sub_region"/>
                                </pfx:sub_region>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx:sub_region xsi:nil="true"/>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists($Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:reporting_country)">
                                <pfx:reporting_country>
                                    <xsl:copy-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:reporting_country/@xsi:nil"/>
                                    <xsl:value-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:reporting_country"/>
                                </pfx:reporting_country>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx:reporting_country xsi:nil="true"/>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists($Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:is_directcustomer)">
                                <pfx:is_directcustomer>
                                    <xsl:copy-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:is_directcustomer/@xsi:nil"/>
                                    <xsl:value-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:is_directcustomer"/>
                                </pfx:is_directcustomer>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx:is_directcustomer xsi:nil="true"/>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists($Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:duns)">
                                <pfx:duns>
                                    <xsl:copy-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:duns/@xsi:nil"/>
                                    <xsl:value-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:duns"/>
                                </pfx:duns>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx:duns xsi:nil="true"/>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists($Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:transition_id)">
                                <pfx:transition_id>
                                    <xsl:copy-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:transition_id/@xsi:nil"/>
                                    <xsl:value-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:transition_id"/>
                                </pfx:transition_id>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx:transition_id xsi:nil="true"/>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists($Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:company_tier)">
                                <pfx:company_tier>
                                    <xsl:copy-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:company_tier/@xsi:nil"/>
                                    <xsl:value-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:company_tier"/>
                                </pfx:company_tier>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx:company_tier xsi:nil="true"/>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists($Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:datasource)">
                                <pfx:datasource>
                                    <xsl:copy-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:datasource/@xsi:nil"/>
                                    <xsl:value-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:datasource"/>
                                </pfx:datasource>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx:datasource xsi:nil="true"/>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists($Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:company_facebook)">
                                <pfx:company_facebook>
                                    <xsl:copy-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:company_facebook/@xsi:nil"/>
                                    <xsl:value-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:company_facebook"/>
                                </pfx:company_facebook>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx:company_facebook xsi:nil="true"/>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists($Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:nav_id)">
                                <pfx:nav_id>
                                    <xsl:copy-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:nav_id/@xsi:nil"/>
                                    <xsl:value-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:nav_id"/>
                                </pfx:nav_id>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx:nav_id xsi:nil="true"/>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists($Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:address_id)">
                                <pfx:address_id>
                                    <xsl:copy-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:address_id/@xsi:nil"/>
                                    <xsl:value-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:address_id"/>
                                </pfx:address_id>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx:address_id xsi:nil="true"/>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists($Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:company_name_2)">
                                <xsl:if test="$Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:company_name_2">
                                    <pfx:company_name_2>
                                        <xsl:copy-of select="$Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:company_name_2/@xsi:nil"/>
                                        <xsl:value-of select="$Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:company_name_2"/>
                                    </pfx:company_name_2>
                                </xsl:if>
                            </xsl:when>
                            <xsl:otherwise/>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists($Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:DeDupExclude)">
                                <xsl:if test="$Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:DeDupExclude">
                                    <pfx:DeDupExclude>
                                        <xsl:copy-of select="$Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:DeDupExclude/@xsi:nil"/>
                                        <xsl:value-of select="$Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:DeDupExclude"/>
                                    </pfx:DeDupExclude>
                                </xsl:if>
                            </xsl:when>
                            <xsl:otherwise/>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists($Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:B2BCustID)">
                                <xsl:if test="$Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:B2BCustID">
                                    <pfx:B2BCustID>
                                        <xsl:copy-of select="$Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:B2BCustID/@xsi:nil"/>
                                        <xsl:value-of select="$Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:B2BCustID"/>
                                    </pfx:B2BCustID>
                                </xsl:if>
                            </xsl:when>
                            <xsl:otherwise/>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists($Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:NavDistiID)">
                                <xsl:if test="$Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:NavDistiID">
                                    <pfx:NavDistiID>
                                        <xsl:copy-of select="$Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:NavDistiID/@xsi:nil"/>
                                        <xsl:value-of select="$Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:NavDistiID"/>
                                    </pfx:NavDistiID>
                                </xsl:if>
                            </xsl:when>
                            <xsl:otherwise/>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists($Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:SalesForceID)">
                                <xsl:if test="$Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:SalesForceID">
                                    <pfx:SalesForceID>
                                        <xsl:copy-of select="$Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:SalesForceID/@xsi:nil"/>
                                        <xsl:value-of select="$Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:SalesForceID"/>
                                    </pfx:SalesForceID>
                                </xsl:if>
                            </xsl:when>
                            <xsl:otherwise/>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists($Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:LegalEntity)">
                                <xsl:if test="$Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:LegalEntity">
                                    <pfx:LegalEntity>
                                        <xsl:copy-of select="$Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:LegalEntity/@xsi:nil"/>
                                        <xsl:value-of select="$Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:LegalEntity"/>
                                    </pfx:LegalEntity>
                                </xsl:if>
                            </xsl:when>
                            <xsl:otherwise/>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists($Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:SiebelID)">
                                <xsl:if test="$Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:SiebelID">
                                    <pfx:SiebelID>
                                        <xsl:copy-of select="$Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:SiebelID/@xsi:nil"/>
                                        <xsl:value-of select="$Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:SiebelID"/>
                                    </pfx:SiebelID>
                                </xsl:if>
                            </xsl:when>
                            <xsl:otherwise/>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists($Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:SourceSystemID)">
                                <xsl:if test="$Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:SourceSystemID">
                                    <pfx:SourceSystemID>
                                        <xsl:copy-of select="$Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:SourceSystemID/@xsi:nil"/>
                                        <xsl:value-of select="$Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:SourceSystemID"/>
                                    </pfx:SourceSystemID>
                                </xsl:if>
                            </xsl:when>
                            <xsl:otherwise/>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists($Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:DefaultContactID)">
                                <xsl:if test="$Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:DefaultContactID">
                                    <pfx:DefaultContactID>
                                        <xsl:copy-of select="$Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:DefaultContactID/@xsi:nil"/>
                                        <xsl:value-of select="$Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:DefaultContactID"/>
                                    </pfx:DefaultContactID>
                                </xsl:if>
                            </xsl:when>
                            <xsl:otherwise/>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists($Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:MSP)">
                                <pfx:MSP>
                                    <xsl:copy-of select="$Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:MSP/@xsi:nil"/>
                                    <xsl:value-of select="$Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:MSP"/>
                                </pfx:MSP>
                            </xsl:when>
                            <xsl:otherwise/>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists($Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:MarketPlace)">
                                <xsl:if test="$Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:MarketPlace">
                                    <pfx:MarketPlace>
                                        <xsl:copy-of select="$Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:MarketPlace/@xsi:nil"/>
                                        <xsl:value-of select="$Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:MarketPlace"/>
                                    </pfx:MarketPlace>
                                </xsl:if>
                            </xsl:when>
                            <xsl:otherwise/>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists($Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:MSPContractSigned)">
                                <xsl:if test="$Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:MSPContractSigned">
                                    <pfx:MSPContractSigned>
                                        <xsl:copy-of select="$Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:MSPContractSigned/@xsi:nil"/>
                                        <xsl:value-of select="$Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:MSPContractSigned"/>
                                    </pfx:MSPContractSigned>
                                </xsl:if>
                            </xsl:when>
                            <xsl:otherwise/>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists($Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:DefaultAccred)">
                                <xsl:if test="$Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:DefaultAccred">
                                    <pfx:DefaultAccred>
                                        <xsl:copy-of select="$Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:DefaultAccred/@xsi:nil"/>
                                        <xsl:value-of select="$Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:DefaultAccred"/>
                                    </pfx:DefaultAccred>
                                </xsl:if>
                            </xsl:when>
                            <xsl:otherwise/>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists($Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:DistributorType)">
                                <xsl:if test="$Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:DistributorType">
                                    <pfx:DistributorType>
                                        <xsl:value-of select="$Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:DistributorType"/>
                                    </pfx:DistributorType>
                                </xsl:if>
                            </xsl:when>
                            <xsl:otherwise/>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="exists($Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:Company)">
                                <xsl:if test="$Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:Company">
                                    <pfx:Company>
                                        <xsl:value-of select="$Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:Company/pfx:Company"/>
                                    </pfx:Company>
                                </xsl:if>
                            </xsl:when>
                            <xsl:otherwise/>
                        </xsl:choose>
                    </pfx2:Company>
                    <pfx2:SourceIDMapping>
                        <xsl:copy-of select="$SelectSourceID/SourceIDMapping/ancestor-or-self::*/namespace::node()"/>
                        <xsl:copy-of select="$SelectSourceID/SourceIDMapping/@*"/>
                        <xsl:copy-of select="$SelectSourceID/SourceIDMapping/node()"/>
                    </pfx2:SourceIDMapping>
                    <xsl:if test="$Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:batch_id">
                        <pfx2:batch_id>
                            <xsl:value-of select="$Start/root/pfx2:SMF/pfx2:SMFBody/pfx2:MDM/pfx2:batch_id"/>
                        </pfx2:batch_id>
                    </xsl:if>
                </pfx2:MDM>
            </pfx2:SMFBody>
        </pfx2:SMF>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType ref="pfx2:SMF"/>
    <pd:endX>655</pd:endX>
    <pd:endY>176</pd:endY>
    <pd:errorSchemas>
        <errorReport ref="pfx3:Error"/>
    </pd:errorSchemas>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1350270391304</pd:targetNamespace>
    <pd:activity name="SelectCompanyByGoldID">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>340</pd:x>
        <pd:y>173</pd:y>
        <config>
            <processName>/ExternalServices/MDM_Server/SelectCompanyByGoldID.process</processName>
        </config>
        <pd:inputBindings>
            <GoldID>
                <xsl:value-of select="$Start/root/gold_id"/>
            </GoldID>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="SelectSourceID">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>205</pd:x>
        <pd:y>175</pd:y>
        <config>
            <processName>/ExternalServices/MDM_Server/SelectSourceID.process</processName>
        </config>
        <pd:inputBindings>
            <GoldID>
                <xsl:value-of select="$Start/root/gold_id"/>
            </GoldID>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="SelectSourceDataByID">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>496</pd:x>
        <pd:y>173</pd:y>
        <config>
            <processName>/ExternalServices/MDM_Server/SelectSourceDataByID.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <dataSource>
                    <xsl:value-of select="$Start/root/dataSource"/>
                </dataSource>
                <type>
                    <xsl:value-of select="$Start/root/type"/>
                </type>
                <xsl:choose>
                    <xsl:when test="tib:trim($Start/root/source_id) !=&quot;&quot;">
                        <source_id>
                            <xsl:value-of select="$Start/root/source_id"/>
                        </source_id>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:choose>
                            <xsl:when test="upper-case($Start/root/dataSource)=&quot;NAVISION&quot;">
                                <source_id>
                                    <xsl:value-of select="$SelectSourceID/SourceIDMapping/pfx:NavId"/>
                                </source_id>
                            </xsl:when>
                            <xsl:when test="upper-case($Start/root/dataSource)=&quot;SFDC&quot;">
                                <source_id>
                                    <xsl:value-of select="$SelectSourceID/SourceIDMapping/pfx:SfId"/>
                                </source_id>
                            </xsl:when>
                            <xsl:when test="upper-case($Start/root/dataSource)=&quot;RALLYING&quot;">
                                <source_id>
                                    <xsl:value-of select="$SelectSourceID/SourceIDMapping/pfx:RallyingId"/>
                                </source_id>
                            </xsl:when>
                            <xsl:otherwise>
                                <source_id>
                                    <xsl:value-of select="$SelectCompanyByGoldID/Resultsets/ResultSet/Record/pfx:source_id"/>
                                </source_id>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:otherwise>
                </xsl:choose>
                <pfx4:SMFHeader>
                    <ns0:MessageKey>
                        <xsl:value-of select="$Start/root/pfx2:SMF/pfx2:SMFHeader/ns0:MessageKey"/>
                    </ns0:MessageKey>
                    <ns0:ServiceName>
                        <xsl:value-of select="$Start/root/pfx2:SMF/pfx2:SMFHeader/ns0:ServiceName"/>
                    </ns0:ServiceName>
                    <ns0:ServiceVersion>
                        <xsl:value-of select="$Start/root/pfx2:SMF/pfx2:SMFHeader/ns0:ServiceVersion"/>
                    </ns0:ServiceVersion>
                    <ns0:SourceID>
                        <xsl:value-of select="$Start/root/pfx2:SMF/pfx2:SMFHeader/ns0:SourceID"/>
                    </ns0:SourceID>
                    <xsl:if test="$Start/root/pfx2:SMF/pfx2:SMFHeader/ns0:SourceIP">
                        <ns0:SourceIP>
                            <xsl:value-of select="$Start/root/pfx2:SMF/pfx2:SMFHeader/ns0:SourceIP"/>
                        </ns0:SourceIP>
                    </xsl:if>
                    <xsl:if test="$Start/root/pfx2:SMF/pfx2:SMFHeader/ns0:RqTimestamp">
                        <ns0:RqTimestamp>
                            <xsl:value-of select="$Start/root/pfx2:SMF/pfx2:SMFHeader/ns0:RqTimestamp"/>
                        </ns0:RqTimestamp>
                    </xsl:if>
                    <xsl:if test="$Start/root/pfx2:SMF/pfx2:SMFHeader/ns0:RsTimestamp">
                        <ns0:RsTimestamp>
                            <xsl:value-of select="$Start/root/pfx2:SMF/pfx2:SMFHeader/ns0:RsTimestamp"/>
                        </ns0:RsTimestamp>
                    </xsl:if>
                </pfx4:SMFHeader>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Generate Error">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>520</pd:x>
        <pd:y>316</pd:y>
        <config>
            <faultName>errorReport</faultName>
        </config>
        <pd:coercions>
            <pd:coercion xpath="$_error/ns4:ErrorReport/Data/*" element="pfx3:Error"/>
        </pd:coercions>
        <pd:inputBindings>
            <xsl:choose>
                <xsl:when test="exists($_error/ns4:ErrorReport/Data/pfx3:Error)">
                    <ns2:ActivityInput>
                        <xsl:if test="$_error/ns4:ErrorReport/Data/pfx3:Error/pfx3:error_message">
                            <message>
                                <xsl:value-of select="$_error/ns4:ErrorReport/Data/pfx3:Error/pfx3:error_message"/>
                            </message>
                        </xsl:if>
                        <xsl:if test="$_error/ns4:ErrorReport/Data/pfx3:Error/pfx3:error_code">
                            <messageCode>
                                <xsl:value-of select="$_error/ns4:ErrorReport/Data/pfx3:Error/pfx3:error_code"/>
                            </messageCode>
                        </xsl:if>
                        <data>
                            <xsl:copy-of select="$_error/ns4:ErrorReport/Data/ancestor-or-self::*/namespace::node()"/>
                            <xsl:copy-of select="$_error/ns4:ErrorReport/Data/@*"/>
                            <xsl:copy-of select="$_error/ns4:ErrorReport/Data/node()"/>
                        </data>
                    </ns2:ActivityInput>
                </xsl:when>
                <xsl:otherwise>
                    <ns2:ActivityInput>
                        <xsl:if test="$_error/ns4:ErrorReport/Msg">
                            <message>
                                <xsl:value-of select="$_error/ns4:ErrorReport/Msg"/>
                            </message>
                        </xsl:if>
                        <xsl:if test="$_error/ns4:ErrorReport/MsgCode">
                            <messageCode>
                                <xsl:value-of select="$_error/ns4:ErrorReport/MsgCode"/>
                            </messageCode>
                        </xsl:if>
                        <data>
                            <pfx3:Error>
                                <pfx3:src>
                                    <xsl:value-of select="$_error/ns4:ErrorReport/ProcessStack"/>
                                </pfx3:src>
                                <pfx3:error_code>
                                    <xsl:value-of select="$_error/ns4:ErrorReport/MsgCode"/>
                                </pfx3:error_code>
                                <pfx3:error_message>
                                    <xsl:value-of select="$_error/ns4:ErrorReport/Msg"/>
                                </pfx3:error_message>
                                <pfx3:stack_trace>
                                    <xsl:value-of select="$_error/ns4:ErrorReport/StackTrace"/>
                                </pfx3:stack_trace>
                            </pfx3:Error>
                        </data>
                    </ns2:ActivityInput>
                </xsl:otherwise>
            </xsl:choose>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>324</pd:x>
        <pd:y>314</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:transition>
        <pd:from>SelectCompanyByGoldID</pd:from>
        <pd:to>SelectSourceDataByID</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SelectSourceID</pd:from>
        <pd:to>SelectCompanyByGoldID</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>SelectSourceID</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SelectSourceDataByID</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>Generate Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>
<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:ns2="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="http://www.tibco.com/pe/EngineTypes" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx3="http://www.trendmicro.com/ESB/schemas/error" xmlns:TM="java://com.trendmicro.TMBWUtilities" xmlns:pfx2="http://www.trendmicro.com/ESB/schemas/MDM/MDMServer" xmlns:pfx="http://www.tibco.com/schemas/MDMService/XSD/Client/MDMServer/Schema.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <xsd:import namespace="http://www.trendmicro.com/ESB/schemas/MDM/MDMServer" schemaLocation="/XSD/Client/MDMServer/MDMServer.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/schemas/error" schemaLocation="/XSD/Common/error.xsd"/>
    <pd:name>ExternalServices/MDM_Server/SelectCompanyByGoldID.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="GoldID" type="xsd:string"/>
    </pd:startType>
    <pd:startX>147</pd:startX>
    <pd:startY>65</pd:startY>
    <pd:returnBindings>
        <Resultsets>
            <ResultSet>
                <Record>
                    <pfx2:gold_id>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/gold_id"/>
                    </pfx2:gold_id>
                    <pfx2:company_name>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/company_name"/>
                    </pfx2:company_name>
                    <pfx2:aka>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/aka"/>
                    </pfx2:aka>
                    <pfx2:match_name>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/match_name"/>
                    </pfx2:match_name>
                    <pfx2:company_address>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/company_address"/>
                    </pfx2:company_address>
                    <pfx2:company_address_line2>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/company_address_line2"/>
                    </pfx2:company_address_line2>
                    <pfx2:company_address_line3>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/company_address_line3"/>
                    </pfx2:company_address_line3>
                    <pfx2:country>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/country"/>
                    </pfx2:country>
                    <pfx2:county>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/county"/>
                    </pfx2:county>
                    <pfx2:city>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/city"/>
                    </pfx2:city>
                    <pfx2:post_code>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/post_code"/>
                    </pfx2:post_code>
                    <pfx2:company_website>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/company_website"/>
                    </pfx2:company_website>
                    <pfx2:currency_code>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/currency_code"/>
                    </pfx2:currency_code>
                    <pfx2:language_code>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/language_code"/>
                    </pfx2:language_code>
                    <pfx2:segment>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/segment"/>
                    </pfx2:segment>
                    <pfx2:master_customer_no>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/master_customer_no"/>
                    </pfx2:master_customer_no>
                    <pfx2:company_status>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/company_status"/>
                    </pfx2:company_status>
                    <pfx2:primary_email>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/primary_email"/>
                    </pfx2:primary_email>
                    <pfx2:vat_number>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/vat_number"/>
                    </pfx2:vat_number>
                    <pfx2:primary_phone_no>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/primary_phone_no"/>
                    </pfx2:primary_phone_no>
                    <pfx2:primary_fax_no>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/primary_fax_no"/>
                    </pfx2:primary_fax_no>
                    <pfx2:is_reseller>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/is_reseller"/>
                    </pfx2:is_reseller>
                    <pfx2:is_enduser>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/is_enduser"/>
                    </pfx2:is_enduser>
                    <pfx2:is_distributor>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/is_distributor"/>
                    </pfx2:is_distributor>
                    <pfx2:created>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/created"/>
                    </pfx2:created>
                    <pfx2:created_by>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/created_by"/>
                    </pfx2:created_by>
                    <pfx2:last_upd>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/last_upd"/>
                    </pfx2:last_upd>
                    <pfx2:last_upd_by>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/last_upd_by"/>
                    </pfx2:last_upd_by>
                    <pfx2:source_id>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/source_id"/>
                    </pfx2:source_id>
                    <pfx2:sub_region>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/sub_region"/>
                    </pfx2:sub_region>
                    <pfx2:reporting_country>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/reporting_country"/>
                    </pfx2:reporting_country>
                    <pfx2:is_directcustomer>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/is_directCustomer"/>
                    </pfx2:is_directcustomer>
                    <pfx2:duns>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/duns"/>
                    </pfx2:duns>
                    <pfx2:transition_id>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/transition_id"/>
                    </pfx2:transition_id>
                    <pfx2:company_tier>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/company_tier"/>
                    </pfx2:company_tier>
                    <pfx2:datasource>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/datasource"/>
                    </pfx2:datasource>
                    <pfx2:company_facebook>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/company_facebook"/>
                    </pfx2:company_facebook>
                    <pfx2:nav_id>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/nav_id"/>
                    </pfx2:nav_id>
                    <pfx2:address_id>
                        <xsl:value-of select="&quot;&quot;"/>
                    </pfx2:address_id>
                    <pfx2:company_name_2>
                        <xsl:choose>
                            <xsl:when test="exists($Parse-XML/Resultsets/ResultSet1/Record1/company_name_2)">
                                <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/company_name_2"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </pfx2:company_name_2>
                    <pfx2:DeDupExclude>
                        <xsl:choose>
                            <xsl:when test="exists($Parse-XML/Resultsets/ResultSet1/Record1/DeDupExclude)">
                                <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/DeDupExclude"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </pfx2:DeDupExclude>
                    <pfx2:B2BCustID>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/B2BCustID"/>
                    </pfx2:B2BCustID>
                    <pfx2:NavDistiID>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/NavDistiID"/>
                    </pfx2:NavDistiID>
                    <pfx2:SalesForceID>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/SalesForceID"/>
                    </pfx2:SalesForceID>
                    <pfx2:LegalEntity>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/LegalEntity"/>
                    </pfx2:LegalEntity>
                    <pfx2:SiebelID>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/SiebelID"/>
                    </pfx2:SiebelID>
                    <pfx2:SourceSystemID>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/SourceSystemID"/>
                    </pfx2:SourceSystemID>
                    <pfx2:DefaultContactID>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/DefaultContactID"/>
                    </pfx2:DefaultContactID>
                    <pfx2:MSP>
                        <xsl:choose>
                            <xsl:when test="exists($Parse-XML/Resultsets/ResultSet1/Record1/MSP)">
                                <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/MSP"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </pfx2:MSP>
                    <pfx2:MarketPlace>
                        <xsl:choose>
                            <xsl:when test="exists($Parse-XML/Resultsets/ResultSet1/Record1/MarketPlace)">
                                <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/MarketPlace"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </pfx2:MarketPlace>
                    <pfx2:MSPContractSigned>
                        <xsl:choose>
                            <xsl:when test="exists($Parse-XML/Resultsets/ResultSet1/Record1/MSPContractSigned)">
                                <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/MSPContractSigned"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </pfx2:MSPContractSigned>
                    <pfx2:DefaultAccred>
                        <xsl:choose>
                            <xsl:when test="exists($Parse-XML/Resultsets/ResultSet1/Record1/DefaultAccred)">
                                <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/DefaultAccred"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </pfx2:DefaultAccred>
                    <xsl:if test="$Parse-XML/Resultsets/ResultSet1/Record1/distributor_type">
                        <pfx2:DistributorType>
                            <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/distributor_type"/>
                        </pfx2:DistributorType>
                    </xsl:if>
                    <xsl:if test="$Parse-XML/Resultsets/ResultSet1/Record1/company">
                        <pfx2:Company>
                            <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/company"/>
                        </pfx2:Company>
                    </xsl:if>
                </Record>
            </ResultSet>
        </Resultsets>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="Resultsets">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="ResultSet">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="Record" type="pfx2:CompanyType"/>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>540</pd:endX>
    <pd:endY>64</pd:endY>
    <pd:errorSchemas>
        <ErrorMessage ref="pfx3:Error"/>
    </pd:errorSchemas>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1339154402169</pd:targetNamespace>
    <pd:activity name="Call PRC_SELECT_COMPANY_BY_GOLD_ID Procedure">
        <pd:type>com.tibco.plugin.jdbc.JDBCCallActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCCallActivity</pd:resourceType>
        <pd:x>294</pd:x>
        <pd:y>71</pd:y>
        <config>
            <timeout>10</timeout>
            <maxRows>100</maxRows>
            <emptyStrAsNil>false</emptyStrAsNil>
            <jdbcSharedConfig>/Resources/Database/MDM Server JDBC Connection.sharedjdbc</jdbcSharedConfig>
            <schema>EMEA_MDM</schema>
            <ProcedureName>PRC_SELECT_COMPANY_BY_GOLD_ID;1</ProcedureName>
            <parameterTypes>
                <parameter>
                    <colName>@RETURN_VALUE</colName>
                    <colType>5</colType>
                    <dataType>4</dataType>
                    <typeName>int</typeName>
                </parameter>
                <parameter>
                    <colName>@gold_id</colName>
                    <colType>1</colType>
                    <dataType>12</dataType>
                    <typeName>varchar</typeName>
                </parameter>
            </parameterTypes>
        </config>
        <pd:inputBindings>
            <inputs>
                <inputSet>
                    <gold_id>
                        <xsl:value-of select="$Start/GoldID"/>
                    </gold_id>
                </inputSet>
            </inputs>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse XML">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>415</pd:x>
        <pd:y>63</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term>
                <xsd:element name="Resultsets">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="ResultSet1">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="Record1">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:all minOccurs="0">
                                                        <xsd:element name="company_twitter" type="xsd:string" minOccurs="0"/>
                                                        <xsd:element name="mergedto_source_id" type="xsd:string"/>
                                                        <xsd:element name="gold_id" type="xsd:string" minOccurs="0"/>
                                                        <xsd:element name="company_name" type="xsd:string"/>
                                                        <xsd:element name="company_address" type="xsd:string"/>
                                                        <xsd:element name="company_address_line2" type="xsd:string"/>
                                                        <xsd:element name="country" type="xsd:string"/>
                                                        <xsd:element name="county" type="xsd:string"/>
                                                        <xsd:element name="city" type="xsd:string"/>
                                                        <xsd:element name="post_code" type="xsd:string"/>
                                                        <xsd:element name="currency_code" type="xsd:string"/>
                                                        <xsd:element name="language_code" type="xsd:string"/>
                                                        <xsd:element name="segment" type="xsd:string"/>
                                                        <xsd:element name="primary_email" type="xsd:string"/>
                                                        <xsd:element name="primary_phone_no" type="xsd:string"/>
                                                        <xsd:element name="primary_fax_no" type="xsd:string"/>
                                                        <xsd:element name="is_reseller" type="xsd:string"/>
                                                        <xsd:element name="is_enduser" type="xsd:string"/>
                                                        <xsd:element name="is_distributor" type="xsd:string"/>
                                                        <xsd:element name="created" type="xsd:string"/>
                                                        <xsd:element name="created_by" type="xsd:string"/>
                                                        <xsd:element name="last_upd" type="xsd:string"/>
                                                        <xsd:element name="last_upd_by" type="xsd:string"/>
                                                        <xsd:element name="source_id" type="xsd:string"/>
                                                        <xsd:element name="sub_region" type="xsd:string"/>
                                                        <xsd:element name="reporting_country" type="xsd:string"/>
                                                        <xsd:element name="company_website" type="xsd:string"/>
                                                        <xsd:element name="is_directCustomer" type="xsd:string"/>
                                                        <xsd:element name="duns" type="xsd:string"/>
                                                        <xsd:element name="transition_id" type="xsd:string"/>
                                                        <xsd:element name="company_tier" type="xsd:string"/>
                                                        <xsd:element name="DefaultAccred" type="xsd:string" minOccurs="0"/>
                                                        <xsd:element name="datasource" type="xsd:string"/>
                                                        <xsd:element name="company_status" type="xsd:string"/>
                                                        <xsd:element name="aka" type="xsd:string"/>
                                                        <xsd:element name="match_name" type="xsd:string"/>
                                                        <xsd:element name="company_address_line3" type="xsd:string"/>
                                                        <xsd:element name="vat_number" type="xsd:string"/>
                                                        <xsd:element name="master_customer_no" type="xsd:string"/>
                                                        <xsd:element name="company_facebook" type="xsd:string"/>
                                                        <xsd:element name="nav_id" type="xsd:string"/>
                                                        <xsd:element name="company_name_2" type="xsd:string" minOccurs="0"/>
                                                        <xsd:element name="DeDupExclude" type="xsd:string" minOccurs="0"/>
                                                        <xsd:element name="B2BCustID" type="xsd:string" minOccurs="0"/>
                                                        <xsd:element name="NavDistiID" type="xsd:string" minOccurs="0"/>
                                                        <xsd:element name="SalesForceID" type="xsd:string" minOccurs="0"/>
                                                        <xsd:element name="LegalEntity" type="xsd:string" minOccurs="0"/>
                                                        <xsd:element name="SiebelID" type="xsd:string" minOccurs="0"/>
                                                        <xsd:element name="SourceSystemID" type="xsd:string" minOccurs="0"/>
                                                        <xsd:element name="DefaultContactID" type="xsd:string" minOccurs="0"/>
                                                        <xsd:element name="MSP" type="xsd:string" minOccurs="0"/>
                                                        <xsd:element name="MarketPlace" type="xsd:string" minOccurs="0"/>
                                                        <xsd:element name="MSPContractSigned" type="xsd:string" minOccurs="0"/>
                                                        <xsd:element name="distributor_type" type="xsd:int" minOccurs="0"/>
                                                        <xsd:element name="company" type="xsd:string" minOccurs="0"/>
                                                    </xsd:all>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </term>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="TM:stringReplace($Call-PRC_SELECT_COMPANY_BY_GOLD_ID-Procedure/resultSet/UnresolvedResultsets,'xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:nil=&quot;true&quot;',&quot;&quot;)"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>287</pd:x>
        <pd:y>195</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Generate Error">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>426</pd:x>
        <pd:y>193</pd:y>
        <config>
            <faultName>ErrorMessage</faultName>
        </config>
        <pd:inputBindings>
            <ns2:ActivityInput>
                <data>
                    <pfx3:Error>
                        <pfx3:src>
                            <xsl:value-of select="$_error/ns:ErrorReport/ProcessStack"/>
                        </pfx3:src>
                        <pfx3:error_code>
                            <xsl:value-of select="$_error/ns:ErrorReport/MsgCode"/>
                        </pfx3:error_code>
                        <pfx3:error_message>
                            <xsl:value-of select="$_error/ns:ErrorReport/Msg"/>
                        </pfx3:error_message>
                        <pfx3:stack_trace>
                            <xsl:value-of select="$_error/ns:ErrorReport/StackTrace"/>
                        </pfx3:stack_trace>
                    </pfx3:Error>
                </data>
            </ns2:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Call PRC_SELECT_COMPANY_BY_GOLD_ID Procedure</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call PRC_SELECT_COMPANY_BY_GOLD_ID Procedure</pd:from>
        <pd:to>Parse XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>Generate Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>
<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns2="http://www.tibco.com/pe/EngineTypes" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns1="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns="http://www.trendmicro.com/ESB/schemas/AuthConfig" xmlns:ns3="http://www.tibco.com/schemas/PLSService/XSD/Common/Schema.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:TM="java://com.trendmicro.TMBWUtilities" xmlns:pfx3="http://www.trendmicro.com/ESB/schemas/error" xmlns:pfx2="http://www.trendmicro.com/ESB/schemas/errorReport" xmlns:pfx="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema">
    <xsd:import namespace="http://www.trendmicro.com/ESB/schemas/errorReport" schemaLocation="/XSD/Common/errorReport.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/schemas/error" schemaLocation="/XSD/Common/error.xsd"/>
    <pd:name>Adpaters/ACLProcess/Check ACL.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="URI" type="xsd:string"/>
                    <xsd:element name="SoapAction" type="xsd:string"/>
                    <xsd:element name="SourceIP" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>77</pd:startX>
    <pd:startY>102</pd:startY>
    <pd:returnBindings>
        <result>
            <xsl:value-of select="$Map-Data-1/root/Allow"/>
        </result>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="result" type="xsd:boolean"/>
    </pd:endType>
    <pd:endX>681</pd:endX>
    <pd:endY>106</pd:endY>
    <pd:errorSchemas>
        <errorReport ref="pfx3:Error"/>
    </pd:errorSchemas>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1300966072406</pd:targetNamespace>
    <pd:activity name="GetVariable">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>185</pd:x>
        <pd:y>103</pd:y>
        <config>
            <variableConfig>/Adpaters/ACLProcess/Shared Variable/ACLConfigVar.sharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Map-Data-1">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>453</pd:x>
        <pd:y>105</pd:y>
        <config>
            <element>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Allow" type="xsd:boolean"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <root>
                <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <xsl:when test="exists($GetVariable/ns3:ACLConfig/ns3:ACL[lower-case(ns3:URI)=lower-case($Start/root/URI) and lower-case(ns3:SOAPAction)=lower-case($Start/root/SoapAction) and ns3:SourceIP=$Start/root/SourceIP])">
                        <Allow>
                            <xsl:value-of select="$GetVariable/ns3:ACLConfig/ns3:ACL[lower-case(ns3:URI)=lower-case($Start/root/URI) and lower-case(ns3:SOAPAction)=lower-case($Start/root/SoapAction) and ns3:SourceIP=$Start/root/SourceIP]/ns3:Allow"/>
                        </Allow>
                    </xsl:when>
                    <xsl:when test="exists($GetVariable/ns3:ACLConfig/ns3:ACL[lower-case(ns3:URI)=lower-case($Start/root/URI) and lower-case(ns3:SOAPAction)=lower-case($Start/root/SoapAction) and ns3:SourceIP='*'])">
                        <Allow>
                            <xsl:value-of select="$GetVariable/ns3:ACLConfig/ns3:ACL[lower-case(ns3:URI)=lower-case($Start/root/URI) and lower-case(ns3:SOAPAction)=lower-case($Start/root/SoapAction) and ns3:SourceIP='*']/ns3:Allow"/>
                        </Allow>
                    </xsl:when>
                    <xsl:when test="exists($GetVariable/ns3:ACLConfig/ns3:ACL[ns3:URI='*' and ns3:SOAPAction='*' and ns3:SourceIP=$Start/root/SourceIP])">
                        <Allow>
                            <xsl:value-of select="$GetVariable/ns3:ACLConfig/ns3:ACL[ns3:URI='*' and ns3:SOAPAction='*' and ns3:SourceIP=$Start/root/SourceIP]/ns3:Allow"/>
                        </Allow>
                    </xsl:when>
                    <xsl:when test="exists($GetVariable/ns3:ACLConfig/ns3:ACL[lower-case(ns3:URI)=lower-case($Start/root/URI) and lower-case(ns3:SOAPAction)=lower-case($Start/root/SoapAction) and tib:substring-before-last(ns3:SourceIP, '.')=$Map-Data-2/root/ipFront &#xA;and $Map-Data-2/root/ipLast >= number((tib:tokenize(tib:substring-after-last(ns3:SourceIP, &quot;.&quot;), '-'))[1])&#xA;and $Map-Data-2/root/ipLast &lt;= number((tib:tokenize(tib:substring-after-last(ns3:SourceIP, &quot;.&quot;), '-'))[2])&#xA;])">
                        <Allow>
                            <xsl:value-of select="$GetVariable/ns3:ACLConfig/ns3:ACL[lower-case(ns3:URI)=lower-case($Start/root/URI) and lower-case(ns3:SOAPAction)=lower-case($Start/root/SoapAction) and tib:substring-before-last(ns3:SourceIP, '.')=$Map-Data-2/root/ipFront &#xA;and $Map-Data-2/root/ipLast >= number((tib:tokenize(tib:substring-after-last(ns3:SourceIP, &quot;.&quot;), '-'))[1])&#xA;and $Map-Data-2/root/ipLast &lt;= number((tib:tokenize(tib:substring-after-last(ns3:SourceIP, &quot;.&quot;), '-'))[2])&#xA;]/ns3:Allow"/>
                        </Allow>
                    </xsl:when>
                    <xsl:when test="exists($GetVariable/ns3:ACLConfig/ns3:ACL[ns3:URI='*' and ns3:SOAPAction='*' and tib:substring-before-last(ns3:SourceIP, '.')=$Map-Data-2/root/ipFront &#xA;and $Map-Data-2/root/ipLast >= number((tib:tokenize(tib:substring-after-last(ns3:SourceIP, &quot;.&quot;), '-'))[1])&#xA;and $Map-Data-2/root/ipLast &lt;= number((tib:tokenize(tib:substring-after-last(ns3:SourceIP, &quot;.&quot;), '-'))[2])&#xA;])">
                        <Allow>
                            <xsl:value-of select="$GetVariable/ns3:ACLConfig/ns3:ACL[ns3:URI='*' and ns3:SOAPAction='*' and tib:substring-before-last(ns3:SourceIP, '.')=$Map-Data-2/root/ipFront &#xA;and $Map-Data-2/root/ipLast >= number((tib:tokenize(tib:substring-after-last(ns3:SourceIP, &quot;.&quot;), '-'))[1])&#xA;and $Map-Data-2/root/ipLast &lt;= number((tib:tokenize(tib:substring-after-last(ns3:SourceIP, &quot;.&quot;), '-'))[2])&#xA;]/ns3:Allow"/>
                        </Allow>
                    </xsl:when>
                    <xsl:otherwise>
                        <Allow>
                            <xsl:value-of select="false()"/>
                        </Allow>
                    </xsl:otherwise>
                </xsl:choose>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map-Data-2">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>324</pd:x>
        <pd:y>107</pd:y>
        <config>
            <element>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="ipFront" type="xsd:string"/>
                            <xsd:element name="ipLast" type="xsd:int"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <root>
                <ipFront>
                    <xsl:value-of select="tib:substring-before-last($Start/root/SourceIP, '.')"/>
                </ipFront>
                <ipLast>
                    <xsl:value-of select="tib:substring-after-last($Start/root/SourceIP, '.')"/>
                </ipLast>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Generate-Error-1">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>446</pd:x>
        <pd:y>247</pd:y>
        <config>
            <faultName>errorReport</faultName>
        </config>
        <pd:inputBindings>
            <pfx:ActivityInput>
                <message>
                    <xsl:value-of select="$_error/ns2:ErrorReport/Msg"/>
                </message>
                <xsl:if test="$_error/ns2:ErrorReport/MsgCode">
                    <messageCode>
                        <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                    </messageCode>
                </xsl:if>
                <data>
                    <pfx3:Error>
                        <pfx3:src>
                            <xsl:value-of select="$_error/ns2:ErrorReport/ProcessStack"/>
                        </pfx3:src>
                        <pfx3:error_code>
                            <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                        </pfx3:error_code>
                        <pfx3:error_message>
                            <xsl:value-of select="$_error/ns2:ErrorReport/Msg"/>
                        </pfx3:error_message>
                        <pfx3:stack_trace>
                            <xsl:value-of select="$_error/ns2:ErrorReport/StackTrace"/>
                        </pfx3:stack_trace>
                    </pfx3:Error>
                </data>
            </pfx:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>299</pd:x>
        <pd:y>247</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>GetVariable</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetVariable</pd:from>
        <pd:to>Map-Data-2</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map-Data-2</pd:from>
        <pd:to>Map-Data-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map-Data-1</pd:from>
        <pd:to>End</pd:to>
        <pd:xpathDescription>Allowed</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>Generate-Error-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>
<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:ns2="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="http://www.tibco.com/pe/EngineTypes" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx2="http://coretech.trendmicro.com/frs/charon/" xmlns:pfx="http://www.trendmicro.com/ESB/ACS/schemas/2.1Funtions/UpdateHashStatusResponseResponse">
    <xsd:import namespace="http://www.trendmicro.com/ESB/ACS/schemas/2.1Funtions/UpdateHashStatusResponseResponse" schemaLocation="/ExternalServices/ToACS/2.1 Subprocesses/Functions/XSD/GetSubmissionTypeResponse.xsd"/>
    <xsd:import namespace="http://coretech.trendmicro.com/frs/charon/" schemaLocation="/WSDL/Client/Charon.xsd"/>
    <pd:name>ExternalServices/ToACS/2.1 Subprocesses/DR Requery Required.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx:Resultsets"/>
                    <xsd:element name="branchStatus" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="CharonResult" type="xsd:string"/>
                    <xsd:element name="branchInfo" minOccurs="0" maxOccurs="unbounded">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="detection" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="branchName" type="xsd:string" minOccurs="0"/>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>90</pd:startX>
    <pd:startY>205</pd:startY>
    <pd:returnBindings>
        <IsRequery>
            <xsl:value-of select="$Map-Data/isRequery"/>
        </IsRequery>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="IsRequery" type="xsd:string"/>
    </pd:endType>
    <pd:endX>1168</pd:endX>
    <pd:endY>208</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1366782970521</pd:targetNamespace>
    <pd:activity name="CharonResult">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>258</pd:x>
        <pd:y>206</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="RequeryY">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>938</pd:x>
        <pd:y>209</pd:y>
        <config>
            <element>
                <xsd:element name="isRequery" type="xsd:string"/>
            </element>
        </config>
        <pd:inputBindings>
            <isRequery>
                <xsl:value-of select="&quot;true&quot;"/>
            </isRequery>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="RequeryN">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>938</pd:x>
        <pd:y>454</pd:y>
        <config>
            <element>
                <xsd:element name="isRequery" type="xsd:string"/>
            </element>
        </config>
        <pd:inputBindings>
            <isRequery>
                <xsl:value-of select="&quot;false&quot;"/>
            </isRequery>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Null">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>259</pd:x>
        <pd:y>602</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:group name="Group (1)">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>541</pd:x>
        <pd:y>82</pd:y>
        <pd:width>220</pd:width>
        <pd:height>234</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>inputLoop</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:over>$Start/root/pfx:Resultsets/pfx:ResultSet1/pfx:Record1</pd:over>
            <pd:iterationElementSlot>currentRecord</pd:iterationElementSlot>
            <pd:indexSlot>j</pd:indexSlot>
            <pd:activityOutputName/>
            <pd:accumulateOutput>false</pd:accumulateOutput>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>HaseFTVCaseY</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>$currentRecord/pfx:Record1/pfx:SRType = "File to Verify"</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>HaseFTVCaseN</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>HaseFTVCaseY</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>HaseFTVCaseN</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="HaseFTVCaseY">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>655</pd:x>
            <pd:y>152</pd:y>
            <config>
                <element>
                    <xsd:element name="hasFTVCase" type="xsd:string"/>
                </element>
            </config>
            <pd:inputBindings>
                <hasFTVCase>
                    <xsl:value-of select="&quot;true&quot;"/>
                </hasFTVCase>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="HaseFTVCaseN">
            <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
            <pd:resourceType>ae.activities.null</pd:resourceType>
            <pd:x>649</pd:x>
            <pd:y>253</pd:y>
            <config/>
            <pd:inputBindings/>
        </pd:activity>
    </pd:group>
    <pd:activity name="isMigration">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>644</pd:x>
        <pd:y>451</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Null-2">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>812</pd:x>
        <pd:y>208</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Map Data">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>1050</pd:x>
        <pd:y>210</pd:y>
        <config>
            <element>
                <xsd:element name="isRequery" type="xsd:string"/>
            </element>
        </config>
        <pd:inputBindings>
            <isRequery>
                <xsl:value-of select="if (exists($RequeryY)) then $RequeryY/isRequery&#xA;else $RequeryN/isRequery"/>
            </isRequery>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>CharonResult</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>RequeryY</pd:from>
        <pd:to>Map Data</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>RequeryN</pd:from>
        <pd:to>Map Data</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CharonResult</pd:from>
        <pd:to>Null</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null</pd:from>
        <pd:to>RequeryN</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CharonResult</pd:from>
        <pd:to>Group (1)</pd:to>
        <pd:xpathDescription>Malicious_Migration</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Start/root/CharonResult = "Malicious_Migration"</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Group (1)</pd:from>
        <pd:to>Null-2</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CharonResult</pd:from>
        <pd:to>isMigration</pd:to>
        <pd:xpathDescription>Malicious</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Start/root/CharonResult = "Malicious"</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>isMigration</pd:from>
        <pd:to>Group (1)</pd:to>
        <pd:xpathDescription>Y</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Start/root/branchStatus  = "Processing" and
(not(exists($Start/root/branchInfo[branchName = "TRENDMICRO"] ))  or
not(exists($Start/root/branchInfo[branchName = "TMCONSUMER"] ))  or
not(exists($Start/root/branchInfo[branchName = "TREND_ICRC"] ))  or
not(exists($Start/root/branchInfo[branchName = "TREND_LEGACY"]) )  or
exists($Start/root/branchInfo[branchName = "TRENDMICRO" or branchName = "TMCONSUMER" or branchName = "TREND_ICRC" or branchName = "TREND_LEGACY"][detection="" or detection="NO_VIRUS" or not(exists(detection))]))</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>isMigration</pd:from>
        <pd:to>RequeryN</pd:to>
        <pd:xpathDescription>N</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null-2</pd:from>
        <pd:to>RequeryY</pd:to>
        <pd:xpathDescription>HaseFTVCaseY</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>exists($HaseFTVCaseY) and $HaseFTVCaseY/hasFTVCase = "true"</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Null-2</pd:from>
        <pd:to>RequeryN</pd:to>
        <pd:xpathDescription>HaseFTVCaseN</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map Data</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>
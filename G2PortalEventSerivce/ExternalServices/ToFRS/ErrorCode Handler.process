<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx16="http://www.trendmicro.com/ESB/FRS/schemas/SMF" xmlns:pfx15="http://www.tibco.com/ns/no_namespace_schema_location/WSDL/Provider/TM_PROB_LIST_RQ.V1.xsd" xmlns:ns="http://xmlns.oracle.com/Enterprise/Tools/schemas/TM_EMPL_LIST_RQ.V1" xmlns:pfx14="http://xmlns.oracle.com/Enterprise/HCM/services/TM_PROBATION_LIST.1" xmlns:pfx13="http://www.trendmicro.com/ESB/PeopleSoft/services/getManagerInfo" xmlns:pfx12="http://www.trendmicro.com/esb/4/peoplesoft" xmlns:pfx11="http://schemas.xmlsoap.org/soap/envelope/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:pfx10="http://xmlns.oracle.com/Enterprise/Tools/schemas/M117365.V1" xmlns:pfx19="http://www.trendmicro.com/ESB/ACS/schemas/SMF" xmlns:pfx18="http://Anti.Malware.Tracker-Service.org/" xmlns:pfx17="http://xmlns.example.com/1274434789173/PatternCreatorImpl/Simulations/ServiceProvider/PatternCreator" xmlns:pfx5="http://xmlns.oracle.com/Enterprise/HCM/services/CI_TM_WS_GET_SUB_INFO.1" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx4="http://xmlns.oracle.com/Enterprise/Tools/schemas/M483800.V1" xmlns:pfx3="http://xmlns.oracle.com/Enterprise/HCM/services/CI_TM_WS_GET_MGR_INFO.1" xmlns:pfx2="http://xmlns.oracle.com/Enterprise/HCM/services/TM_EMPLOYEE_LIST.1" xmlns:pfx9="http://xmlns.oracle.com/Enterprise/HCM/services/CI_TM_CI_PERSON_DATA.1" xmlns:pfx8="http://www.trendmicro.com/ESB/PeopleSoft/services/getSubInfo" xmlns:pfx7="http://www.trendmicro.com/ESB/PeopleSoft/services/getEmpListHRInitiateSurveys" xmlns:pfx6="http://www.tibco.com/ns/no_namespace_schema_location/WSDL/Provider/TM_EMPL_LIST_RS.V1.xsd" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns9="http://www.trendmicro.com/ESB/schemas/error" xmlns:ns5="http://xmlns.tibco.com/encodings/mime" xmlns:ns12="http://tempuri.org/" xmlns:ns6="http://www.tibco.com/ns/no_namespace_schema_location/WSDL/Provider/TM_EMPL_LIST_RS.V2.xsd" xmlns:ns10="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:ns7="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:pfx="http://www.tibco.com/ns/no_namespace_schema_location/WSDL/Provider/TM_EMPL_LIST_RQ.V1.xsd" xmlns:ns8="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:ns2="http://www.tibco.com/pe/EngineTypes" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns1="http://xmlns.oracle.com/Enterprise/Tools/schemas/TM_EMPL_LIST_RS.V1" xmlns:ns4="http://xmlns.oracle.com/Enterprise/Tools/schemas/TM_EMPL_LIST_RS.V2" xmlns:ns3="http://www.tibco.com/pe/DeployedVarsType" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx22="http://www.tibco.com/ns/no_namespace_schema_location/XSD/Common/AtlasMessage.xsd" xmlns:pfx23="http://coretech.trendmicro.com/frs/charon/" xmlns:pfx20="http://www.trendmicro.com/ESB/schemas/errorReport" xmlns:pfx21="http://www.tibco.com/ns/no_namespace_schema_location/XSD/Common/AtlasSampe.xsd">
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/WSDL/Provider/TM_EMPL_LIST_RQ.V1.xsd"/>
    <xsd:import namespace="http://schemas.xmlsoap.org/soap/envelope/" schemaLocation="/XSD/Common/soap.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/WSDL/Provider/TM_EMPL_LIST_RS.V1.xsd" schemaLocation="/WSDL/Provider/TM_EMPL_LIST_RS.V1.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/WSDL/Provider/TM_EMPL_LIST_RQ.V1.xsd" schemaLocation="/WSDL/Provider/TM_EMPL_LIST_RQ.V1.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/WSDL/Provider/TM_EMPL_LIST_RS.V2.xsd" schemaLocation="/WSDL/Provider/TM_EMPL_LIST_RS.V2.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/FRS/schemas/SMF" schemaLocation="/XSD/Common/FRS.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/XSD/Common/AtlasSampe.xsd" schemaLocation="/XSD/Common/AtlasSampe.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/XSD/Common/AtlasMessage.xsd" schemaLocation="/XSD/Common/AtlasMessage.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/schemas/error" schemaLocation="/XSD/Common/error.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/ACS/schemas/SMF" schemaLocation="/XSD/Common/SMF.xsd"/>
    <wsdl:import namespace="http://xmlns.oracle.com/Enterprise/HCM/services/TM_EMPLOYEE_LIST.1" location="/WSDL/Provider/TM_EMPLOYEE_LIST.1.wsdl"/>
    <wsdl:import namespace="http://xmlns.example.com/1274434789173/PatternCreatorImpl/Simulations/ServiceProvider/PatternCreator" location="/WSDL/Client/PatternCreatorWSDLClient.wsdl"/>
    <wsdl:import namespace="http://Anti.Malware.Tracker-Service.org/" location="/WSDL/Client/Atlas WSDL.wsdl"/>
    <pd:name>ExternalServices/ToFRS/ErrorCode Handler.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="group">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="ErrorCode" type="xsd:string"/>
                    <xsd:element name="ReturnStatus" type="xsd:string"/>
                    <xsd:element name="src" type="xsd:string"/>
                    <xsd:element name="isGetReputation" type="xsd:boolean"/>
                    <xsd:element name="MessageKey" type="xsd:string"/>
                    <xsd:element ref="pfx19:SMF"/>
                    <xsd:element name="ErrorRetryCount" type="xsd:string"/>
                    <xsd:element name="IsCharonNP" type="xsd:string"/>
                    <xsd:element name="ServiceId" type="xsd:string"/>
                    <xsd:element name="fileSha1" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>121</pd:startX>
    <pd:startY>109</pd:startY>
    <pd:returnBindings>
        <xsl:copy-of select="$ErrorCodeMapper/group"/>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="group">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="isRetry" type="xsd:boolean"/>
                    <xsd:element name="isFirstOccurred" type="xsd:boolean"/>
                    <xsd:element name="error_message" type="xsd:string"/>
                    <xsd:element name="stepTypeId" type="xsd:int" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>601</pd:endX>
    <pd:endY>110</pd:endY>
    <pd:errorSchemas>
        <errorReport ref="ns9:Error"/>
    </pd:errorSchemas>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1261710921990</pd:targetNamespace>
    <pd:activity name="Generate Error">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>141</pd:x>
        <pd:y>260</pd:y>
        <config>
            <faultName>errorReport</faultName>
        </config>
        <pd:inputBindings>
            <ns7:ActivityInput>
                <message>
                    <xsl:value-of select="$ErrorCodeMapper/group/error_message"/>
                </message>
                <messageCode>
                    <xsl:value-of select="$Start/group/ErrorCode"/>
                </messageCode>
                <data>
                    <ns9:Error>
                        <ns9:src>
                            <xsl:value-of select="$Start/group/src"/>
                        </ns9:src>
                        <ns9:error_code>
                            <xsl:value-of select="$Start/group/ErrorCode"/>
                        </ns9:error_code>
                        <ns9:error_message>
                            <xsl:value-of select="$ErrorCodeMapper/group/error_message"/>
                        </ns9:error_message>
                        <ns9:stack_trace>
                            <xsl:value-of select="$ErrorCodeMapper/group/stepTypeId"/>
                        </ns9:stack_trace>
                        <ns9:traceMessageKey>
                            <xsl:value-of select="$Start/group/MessageKey"/>
                        </ns9:traceMessageKey>
                    </ns9:Error>
                </data>
            </ns7:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ErrorCodeMapper">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>271</pd:x>
        <pd:y>107</pd:y>
        <config>
            <element>
                <xsd:element name="group">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="isRetry" type="xsd:boolean"/>
                            <xsd:element name="isFirstOccurred" type="xsd:boolean"/>
                            <xsd:element name="error_message" type="xsd:string"/>
                            <xsd:element name="stepTypeId" type="xsd:int" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <xsl:variable name="var" select="if($Start/group/ErrorCode=&quot;CE0001&quot; or $Start/group/ErrorCode=&quot;CEG001&quot; or $Start/group/ErrorCode=&quot;CER001&quot;) then &quot;Not defined&quot;&#xA;else if($Start/group/ErrorCode=&quot;CE0002&quot; or $Start/group/ErrorCode=&quot;CEG002&quot; or $Start/group/ErrorCode=&quot;CER002&quot;) then &quot;Java flow business error&quot;&#xA;else if($Start/group/ErrorCode=&quot;CE0003&quot; or $Start/group/ErrorCode=&quot;CEG003&quot; or $Start/group/ErrorCode=&quot;CER003&quot;) then &quot;Charon database insertion error&quot;&#xA;else if($Start/group/ErrorCode=&quot;CE0004&quot; or $Start/group/ErrorCode=&quot;CEG004&quot; or $Start/group/ErrorCode=&quot;CER004&quot;) then &quot;Unable to submit request to Presto&quot;&#xA;else if($Start/group/ErrorCode=&quot;CE0005&quot; or $Start/group/ErrorCode=&quot;CEG005&quot; or $Start/group/ErrorCode=&quot;CER005&quot;) then &quot;Submit illegal file path&quot;&#xA;else if($Start/group/ErrorCode=&quot;CE0006&quot; or $Start/group/ErrorCode=&quot;CEG006&quot; or $Start/group/ErrorCode=&quot;CER006&quot;) then &quot;Submit illegal SHA1 format&quot;&#xA;else if($Start/group/ErrorCode=&quot;CE0007&quot; or $Start/group/ErrorCode=&quot;CEG007&quot; or $Start/group/ErrorCode=&quot;CER007&quot;) then &quot;Given SHA1 does not match calculated SHA1&quot;&#xA;else if($Start/group/ErrorCode=&quot;CE0008&quot; or $Start/group/ErrorCode=&quot;CEG008&quot; or $Start/group/ErrorCode=&quot;CER008&quot;) then &quot;Unable to calculate file SHA1&quot;&#xA;else if($Start/group/ErrorCode=&quot;CE0009&quot; or $Start/group/ErrorCode=&quot;CEG009&quot; or $Start/group/ErrorCode=&quot;CER009&quot;) then &quot;Branch detection inconsistent&quot;&#xA;else if($Start/group/ErrorCode=&quot;CE0010&quot; or $Start/group/ErrorCode=&quot;CEG010&quot; or $Start/group/ErrorCode=&quot;CER010&quot;) then &quot;Unable to get data proxy&quot;&#xA;else if($Start/group/ErrorCode=&quot;CE0011&quot; or $Start/group/ErrorCode=&quot;CEG011&quot; or $Start/group/ErrorCode=&quot;CER011&quot;) then &quot;Unable to get status error&quot;&#xA;else if($Start/group/ErrorCode=&quot;timeout&quot;) then &quot;Call Charon web service timeout&quot;&#xA;else&#xA;&quot;&quot;"/>
            <xsl:choose>
                <xsl:when test="$Start/group/IsCharonNP = 'true'">
                    <xsl:choose>
                        <xsl:when test="exists(tib:tokenize($_globalVariables/ns3:GlobalVariables/ExternalServices/ToFRS/GetCharonFileReputatinRetry/ErrorCodeHandler/Retry/ErrorCodeList, &quot;,&quot;)[upper-case(tib:trim(.))=upper-case(tib:trim($Start/group/ErrorCode))][1])">
                            <xsl:choose>
                                <xsl:when test="exists($Start/group/pfx19:SMF/pfx19:SMFBody/pfx19:Error/pfx19:error_code)">
                                    <xsl:choose>
                                        <xsl:when test="$Start/group/ErrorCode=$Start/group/pfx19:SMF/pfx19:SMFBody/pfx19:Error/pfx19:error_code">
                                            <xsl:choose>
                                                <xsl:when test="$_globalVariables/ns3:GlobalVariables/ExternalServices/ToFRS/GetCharonFileReputatinRetry/ErrorCodeHandler/Retry/MaxRetryCount > $Start/group/ErrorRetryCount&#xA;or $_globalVariables/ns3:GlobalVariables/ExternalServices/ToFRS/GetCharonFileReputatinRetry/ErrorCodeHandler/Retry/MaxRetryCount=-1">
                                                    <group>
                                                        <isRetry>
                                                            <xsl:value-of select="true()"/>
                                                        </isRetry>
                                                        <isFirstOccurred>
                                                            <xsl:value-of select="false()"/>
                                                        </isFirstOccurred>
                                                        <xsl:choose>
                                                            <xsl:when test="$Start/group/isGetReputation=&quot;true&quot;">
                                                                <error_message>
                                                                    <xsl:value-of select="if ($Start/group/ErrorRetryCount &lt; 3) then&#xA;concat(&quot;CharonNP getReputation return status = &quot;,$Start/group/ReturnStatus, &quot;, errorCode= &quot;,$Start/group/ErrorCode,&#xA;&quot; &quot;,$var,&quot;. This Error happened again. TIBCO will retry after &quot;,round(($_globalVariables/ns3:GlobalVariables/ExternalServices/ToACS/V2.1Subprocesses/Requery/ErrorRetryInterval_Sec div 60)),&quot; minutes&quot;)&#xA;else &#xA;concat(&quot;CharonNP getReputation return status = &quot;,$Start/group/ReturnStatus, &quot;, errorCode= &quot;,$Start/group/ErrorCode,&#xA;&quot; &quot;,$var,&quot;. This Error happened again. TIBCO will retry every &quot;,round(($_globalVariables/ns3:GlobalVariables/ExternalServices/ToACS/V2.1Subprocesses/Requery/LongErrorRetryInterval_Sec div 60)),&quot; minutes&quot;)"/>
                                                                </error_message>
                                                            </xsl:when>
                                                            <xsl:otherwise>
                                                                <error_message>
                                                                    <xsl:value-of select="if ($Start/group/ErrorRetryCount &lt; 3) then&#xA;concat(&quot;CharonNP reputaeFile return status = &quot;,$Start/group/ReturnStatus, &quot;, errorCode= &quot;,$Start/group/ErrorCode,&#xA;&quot; &quot;,$var,&quot;. This Error happened again. TIBCO will retry after &quot;,round(($_globalVariables/ns3:GlobalVariables/ExternalServices/ToACS/V2.1Subprocesses/Requery/ErrorRetryInterval_Sec div 60)),&quot; minutes&quot;)&#xA;else &#xA;concat(&quot;CharonNP reputaeFile return status = &quot;,$Start/group/ReturnStatus, &quot;, errorCode= &quot;,$Start/group/ErrorCode,&#xA;&quot; &quot;,$var,&quot;. This Error happened again. TIBCO will retry after &quot;,round(($_globalVariables/ns3:GlobalVariables/ExternalServices/ToACS/V2.1Subprocesses/Requery/LongErrorRetryInterval_Sec div 60)),&quot; minutes&quot;)"/>
                                                                </error_message>
                                                            </xsl:otherwise>
                                                        </xsl:choose>
                                                        <xsl:choose>
                                                            <xsl:when test="$Start/group/isGetReputation=&quot;true&quot;">
                                                                <stepTypeId>
                                                                    <xsl:value-of select="781"/>
                                                                </stepTypeId>
                                                            </xsl:when>
                                                            <xsl:otherwise>
                                                                <stepTypeId>
                                                                    <xsl:value-of select="782"/>
                                                                </stepTypeId>
                                                            </xsl:otherwise>
                                                        </xsl:choose>
                                                    </group>
                                                </xsl:when>
                                                <xsl:otherwise>
                                                    <group>
                                                        <isRetry>
                                                            <xsl:value-of select="false()"/>
                                                        </isRetry>
                                                        <isFirstOccurred>
                                                            <xsl:value-of select="false()"/>
                                                        </isFirstOccurred>
                                                        <xsl:choose>
                                                            <xsl:when test="$Start/group/isGetReputation=&quot;true&quot;">
                                                                <error_message>
                                                                    <xsl:value-of select="concat(&quot;CharonNP getReputation return status = &quot;,$Start/group/ReturnStatus, &quot;, errorCode= &quot;,$Start/group/ErrorCode,&#xA;&quot; &quot;,$var,&quot;. This Error happened again.&quot;, &quot;Please contact Charon team to solve this error manually.&quot;)"/>
                                                                </error_message>
                                                            </xsl:when>
                                                            <xsl:otherwise>
                                                                <error_message>
                                                                    <xsl:value-of select="concat(&quot;CharonNP reputaeFile return status = &quot;,$Start/group/ReturnStatus, &quot;, errorCode= &quot;,$Start/group/ErrorCode,&#xA;&quot; &quot;,$var,&quot;. This Error happened again.&quot; ,&quot; Please contact Charon team to solve this error manually.&quot;)"/>
                                                                </error_message>
                                                            </xsl:otherwise>
                                                        </xsl:choose>
                                                        <xsl:choose>
                                                            <xsl:when test="$Start/group/isGetReputation=&quot;true&quot;">
                                                                <stepTypeId>
                                                                    <xsl:value-of select="771"/>
                                                                </stepTypeId>
                                                            </xsl:when>
                                                            <xsl:otherwise>
                                                                <stepTypeId>
                                                                    <xsl:value-of select="772"/>
                                                                </stepTypeId>
                                                            </xsl:otherwise>
                                                        </xsl:choose>
                                                    </group>
                                                </xsl:otherwise>
                                            </xsl:choose>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <group>
                                                <isRetry>
                                                    <xsl:value-of select="true()"/>
                                                </isRetry>
                                                <isFirstOccurred>
                                                    <xsl:value-of select="true()"/>
                                                </isFirstOccurred>
                                                <xsl:choose>
                                                    <xsl:when test="$Start/group/isGetReputation=&quot;true&quot;">
                                                        <error_message>
                                                            <xsl:value-of select="if ($Start/group/ErrorRetryCount &lt; 3) then&#xA;concat(&quot;CharonNP getReputation return status = &quot;,$Start/group/ReturnStatus, &quot;, errorCode= &quot;,$Start/group/ErrorCode,&#xA;&quot; &quot;,$var,&quot;. This is the first occurred. TIBCO will retry after &quot;,round(($_globalVariables/ns3:GlobalVariables/ExternalServices/ToACS/V2.1Subprocesses/Requery/ErrorRetryInterval_Sec div 60)),&quot; minutes&quot;)&#xA;else &#xA;concat(&quot;CharonNP getReputation return status = &quot;,$Start/group/ReturnStatus, &quot;, errorCode= &quot;,$Start/group/ErrorCode,&#xA;&quot; &quot;,$var,&quot;. This is the first occurred. TIBCO will retry after &quot;,round(($_globalVariables/ns3:GlobalVariables/ExternalServices/ToACS/V2.1Subprocesses/Requery/LongErrorRetryInterval_Sec div 60)),&quot; minutes&quot;)"/>
                                                        </error_message>
                                                    </xsl:when>
                                                    <xsl:otherwise>
                                                        <error_message>
                                                            <xsl:value-of select="if ($Start/group/ErrorRetryCount &lt; 3) then&#xA;concat(&quot;CharonNP reputaeFile return status = &quot;,$Start/group/ReturnStatus, &quot;, errorCode= &quot;,$Start/group/ErrorCode,&#xA;&quot; &quot;,$var,&quot;. This is the first occurred. TIBCO will retry after &quot;,round(($_globalVariables/ns3:GlobalVariables/ExternalServices/ToACS/V2.1Subprocesses/Requery/ErrorRetryInterval_Sec div 60)),&quot; minutes&quot;)&#xA;else &#xA;concat(&quot;CharonNP reputaeFile return status = &quot;,$Start/group/ReturnStatus, &quot;, errorCode= &quot;,$Start/group/ErrorCode,&#xA;&quot; &quot;,$var,&quot;. This is the first occurred. TIBCO will retry after &quot;,round(($_globalVariables/ns3:GlobalVariables/ExternalServices/ToACS/V2.1Subprocesses/Requery/LongErrorRetryInterval_Sec div 60)),&quot; minutes&quot;)"/>
                                                        </error_message>
                                                    </xsl:otherwise>
                                                </xsl:choose>
                                                <xsl:choose>
                                                    <xsl:when test="$Start/group/isGetReputation=&quot;true&quot;">
                                                        <stepTypeId>
                                                            <xsl:value-of select="781"/>
                                                        </stepTypeId>
                                                    </xsl:when>
                                                    <xsl:otherwise>
                                                        <stepTypeId>
                                                            <xsl:value-of select="782"/>
                                                        </stepTypeId>
                                                    </xsl:otherwise>
                                                </xsl:choose>
                                            </group>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:choose>
                                        <xsl:when test="$_globalVariables/ns3:GlobalVariables/ExternalServices/ToFRS/GetCharonFileReputatinRetry/ErrorCodeHandler/Retry/MaxRetryCount > $Start/group/ErrorRetryCount&#xA;or $_globalVariables/ns3:GlobalVariables/ExternalServices/ToFRS/GetCharonFileReputatinRetry/ErrorCodeHandler/Retry/MaxRetryCount=-1">
                                            <group>
                                                <isRetry>
                                                    <xsl:value-of select="true()"/>
                                                </isRetry>
                                                <isFirstOccurred>
                                                    <xsl:value-of select="true()"/>
                                                </isFirstOccurred>
                                                <xsl:choose>
                                                    <xsl:when test="$Start/group/isGetReputation=&quot;true&quot;">
                                                        <error_message>
                                                            <xsl:value-of select="if ($Start/group/ErrorRetryCount &lt; 3) then&#xA;concat(&quot;CharonNP getReputation return status = &quot;,$Start/group/ReturnStatus, &quot;, errorCode= &quot;,$Start/group/ErrorCode,&#xA;&quot; &quot;,$var,&quot;. This is the first occurred. TIBCO will retry after &quot;,round(($_globalVariables/ns3:GlobalVariables/ExternalServices/ToACS/V2.1Subprocesses/Requery/ErrorRetryInterval_Sec div 60)),&quot; minutes&quot;)&#xA;else &#xA;concat(&quot;CharonNP getReputation return status = &quot;,$Start/group/ReturnStatus, &quot;, errorCode= &quot;,$Start/group/ErrorCode,&#xA;&quot; &quot;,$var,&quot;. This is the first occurred. TIBCO will retry after &quot;,round(($_globalVariables/ns3:GlobalVariables/ExternalServices/ToACS/V2.1Subprocesses/Requery/LongErrorRetryInterval_Sec div 60)),&quot; minutes&quot;)"/>
                                                        </error_message>
                                                    </xsl:when>
                                                    <xsl:otherwise>
                                                        <error_message>
                                                            <xsl:value-of select="if ($Start/group/ErrorRetryCount &lt; 3) then&#xA;concat(&quot;CharonNP reputaeFile return status = &quot;,$Start/group/ReturnStatus, &quot;, errorCode= &quot;,$Start/group/ErrorCode,&#xA;&quot; &quot;,$var,&quot;. This is the first occurred. TIBCO will retry after &quot;,round(($_globalVariables/ns3:GlobalVariables/ExternalServices/ToACS/V2.1Subprocesses/Requery/ErrorRetryInterval_Sec div 60)),&quot; minutes&quot;)&#xA;else &#xA;concat(&quot;CharonNP reputaeFile return status = &quot;,$Start/group/ReturnStatus, &quot;, errorCode= &quot;,$Start/group/ErrorCode,&#xA;&quot; &quot;,$var,&quot;. This is the first occurred. TIBCO will retry after &quot;,round(($_globalVariables/ns3:GlobalVariables/ExternalServices/ToACS/V2.1Subprocesses/Requery/LongErrorRetryInterval_Sec div 60)),&quot; minutes&quot;)"/>
                                                        </error_message>
                                                    </xsl:otherwise>
                                                </xsl:choose>
                                                <xsl:choose>
                                                    <xsl:when test="$Start/group/isGetReputation=&quot;true&quot;">
                                                        <stepTypeId>
                                                            <xsl:value-of select="781"/>
                                                        </stepTypeId>
                                                    </xsl:when>
                                                    <xsl:otherwise>
                                                        <stepTypeId>
                                                            <xsl:value-of select="782"/>
                                                        </stepTypeId>
                                                    </xsl:otherwise>
                                                </xsl:choose>
                                            </group>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <group>
                                                <isRetry>
                                                    <xsl:value-of select="false()"/>
                                                </isRetry>
                                                <isFirstOccurred>
                                                    <xsl:value-of select="true()"/>
                                                </isFirstOccurred>
                                                <xsl:choose>
                                                    <xsl:when test="$Start/group/isGetReputation=&quot;true&quot;">
                                                        <error_message>
                                                            <xsl:value-of select="concat(&quot;CharonNP getReputation return status = &quot;,$Start/group/ReturnStatus, &quot;, errorCode= &quot;,$Start/group/ErrorCode,&#xA;&quot; &quot;,$var,&quot;. Please contact Charon team to solve this error manually.&quot;)"/>
                                                        </error_message>
                                                    </xsl:when>
                                                    <xsl:otherwise>
                                                        <error_message>
                                                            <xsl:value-of select="concat(&quot;CharonNP reputaeFile return status = &quot;,$Start/group/ReturnStatus, &quot;, errorCode= &quot;,$Start/group/ErrorCode,&#xA;&quot; &quot;,$var,&quot;. Please contact Charon team to solve this error manually.&quot;)"/>
                                                        </error_message>
                                                    </xsl:otherwise>
                                                </xsl:choose>
                                                <xsl:choose>
                                                    <xsl:when test="$Start/group/isGetReputation=&quot;true&quot;">
                                                        <stepTypeId>
                                                            <xsl:value-of select="771"/>
                                                        </stepTypeId>
                                                    </xsl:when>
                                                    <xsl:otherwise>
                                                        <stepTypeId>
                                                            <xsl:value-of select="772"/>
                                                        </stepTypeId>
                                                    </xsl:otherwise>
                                                </xsl:choose>
                                            </group>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                        <xsl:when test="exists(tib:tokenize($_globalVariables/ns3:GlobalVariables/ExternalServices/ToFRS/GetCharonFileReputatinRetry/ErrorCodeHandler/Notify/ErrorCodeList, &quot;,&quot;)[upper-case(tib:trim(.))=upper-case(tib:trim($Start/group/ErrorCode))][1])">
                            <group>
                                <isRetry>
                                    <xsl:value-of select="false()"/>
                                </isRetry>
                                <isFirstOccurred>
                                    <xsl:value-of select="true()"/>
                                </isFirstOccurred>
                                <xsl:choose>
                                    <xsl:when test="$Start/group/isGetReputation=&quot;true&quot;">
                                        <error_message>
                                            <xsl:value-of select="concat(&quot;CharonNP getReputation return status = &quot;,$Start/group/ReturnStatus, &quot;, errorCode= &quot;,$Start/group/ErrorCode,&#xA;&quot; &quot;,$var,&quot;. Please contact Charon team to solve this error manually.&quot;)"/>
                                        </error_message>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <error_message>
                                            <xsl:value-of select="concat(&quot;CharonNP reputaeFile return status = &quot;,$Start/group/ReturnStatus, &quot;, errorCode= &quot;,$Start/group/ErrorCode,&#xA;&quot; &quot;,$var,&quot;. Please contact Charon team to solve this error manually.&quot;)"/>
                                        </error_message>
                                    </xsl:otherwise>
                                </xsl:choose>
                                <xsl:choose>
                                    <xsl:when test="$Start/group/isGetReputation=&quot;true&quot;">
                                        <stepTypeId>
                                            <xsl:value-of select="771"/>
                                        </stepTypeId>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <stepTypeId>
                                            <xsl:value-of select="772"/>
                                        </stepTypeId>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </group>
                        </xsl:when>
                        <xsl:otherwise>
                            <group>
                                <isRetry>
                                    <xsl:value-of select="false()"/>
                                </isRetry>
                                <isFirstOccurred>
                                    <xsl:value-of select="true()"/>
                                </isFirstOccurred>
                                <xsl:choose>
                                    <xsl:when test="$Start/group/isGetReputation=&quot;true&quot;">
                                        <error_message>
                                            <xsl:value-of select="concat(&quot;CharonNP getReputation return status = &quot;,$Start/group/ReturnStatus, &quot;, errorCode= &quot;,$Start/group/ErrorCode,&#xA;&quot; &quot;,$var,&quot;. This error is not defined. Please contact Charon team to solve this error manually.&quot;)"/>
                                        </error_message>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <error_message>
                                            <xsl:value-of select="concat(&quot;CharonNP reputaeFile return status = &quot;,$Start/group/ReturnStatus, &quot;, errorCode= &quot;,$Start/group/ErrorCode,&#xA;&quot; &quot;,$var,&quot;. This error is not defined. Please contact Charon team to solve this error manually.&quot;)"/>
                                        </error_message>
                                    </xsl:otherwise>
                                </xsl:choose>
                                <xsl:choose>
                                    <xsl:when test="$Start/group/isGetReputation=&quot;true&quot;">
                                        <stepTypeId>
                                            <xsl:value-of select="771"/>
                                        </stepTypeId>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <stepTypeId>
                                            <xsl:value-of select="772"/>
                                        </stepTypeId>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </group>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:choose>
                        <xsl:when test="exists(tib:tokenize($_globalVariables/ns3:GlobalVariables/ExternalServices/ToFRS/GetCharonFileReputatinRetry/ErrorCodeHandler/Retry/ErrorCodeList, &quot;,&quot;)[upper-case(tib:trim(.))=upper-case(tib:trim($Start/group/ErrorCode))][1])">
                            <xsl:choose>
                                <xsl:when test="exists($Start/group/pfx19:SMF/pfx19:SMFBody/pfx19:Error/pfx19:error_code)">
                                    <xsl:choose>
                                        <xsl:when test="$Start/group/ErrorCode=$Start/group/pfx19:SMF/pfx19:SMFBody/pfx19:Error/pfx19:error_code">
                                            <xsl:choose>
                                                <xsl:when test="$_globalVariables/ns3:GlobalVariables/ExternalServices/ToFRS/GetCharonFileReputatinRetry/ErrorCodeHandler/Retry/MaxRetryCount > $Start/group/ErrorRetryCount&#xA;or $_globalVariables/ns3:GlobalVariables/ExternalServices/ToFRS/GetCharonFileReputatinRetry/ErrorCodeHandler/Retry/MaxRetryCount=-1">
                                                    <group>
                                                        <isRetry>
                                                            <xsl:value-of select="true()"/>
                                                        </isRetry>
                                                        <isFirstOccurred>
                                                            <xsl:value-of select="false()"/>
                                                        </isFirstOccurred>
                                                        <xsl:choose>
                                                            <xsl:when test="$Start/group/isGetReputation=&quot;true&quot;">
                                                                <error_message>
                                                                    <xsl:value-of select="if ($Start/group/ErrorRetryCount &lt; 3) then&#xA;concat(&quot;Charon getReputation return status = &quot;,$Start/group/ReturnStatus, &quot;, errorCode= &quot;,$Start/group/ErrorCode,&#xA;&quot; &quot;,$var,&quot;. This Error happened again. TIBCO will retry after &quot;,round(($_globalVariables/ns3:GlobalVariables/ExternalServices/ToACS/V2.1Subprocesses/Requery/ErrorRetryInterval_Sec div 60)),&quot; minutes&quot;)&#xA;else &#xA;concat(&quot;Charon getReputation return status = &quot;,$Start/group/ReturnStatus, &quot;, errorCode= &quot;,$Start/group/ErrorCode,&#xA;&quot; &quot;,$var,&quot;. This Error happened again. TIBCO will retry every &quot;,round(($_globalVariables/ns3:GlobalVariables/ExternalServices/ToACS/V2.1Subprocesses/Requery/LongErrorRetryInterval_Sec div 60)),&quot; minutes&quot;)"/>
                                                                </error_message>
                                                            </xsl:when>
                                                            <xsl:otherwise>
                                                                <error_message>
                                                                    <xsl:value-of select="if ($Start/group/ErrorRetryCount &lt; 3) then&#xA;concat(&quot;Charon reputaeFile return status = &quot;,$Start/group/ReturnStatus, &quot;, errorCode= &quot;,$Start/group/ErrorCode,&#xA;&quot; &quot;,$var,&quot;. This Error happened again. TIBCO will retry after &quot;,round(($_globalVariables/ns3:GlobalVariables/ExternalServices/ToACS/V2.1Subprocesses/Requery/ErrorRetryInterval_Sec div 60)),&quot; minutes&quot;)&#xA;else &#xA;concat(&quot;Charon reputaeFile return status = &quot;,$Start/group/ReturnStatus, &quot;, errorCode= &quot;,$Start/group/ErrorCode,&#xA;&quot; &quot;,$var,&quot;. This Error happened again. TIBCO will retry after &quot;,round(($_globalVariables/ns3:GlobalVariables/ExternalServices/ToACS/V2.1Subprocesses/Requery/LongErrorRetryInterval_Sec div 60)),&quot; minutes&quot;)"/>
                                                                </error_message>
                                                            </xsl:otherwise>
                                                        </xsl:choose>
                                                        <xsl:choose>
                                                            <xsl:when test="$Start/group/isGetReputation=&quot;true&quot;">
                                                                <stepTypeId>
                                                                    <xsl:value-of select="281"/>
                                                                </stepTypeId>
                                                            </xsl:when>
                                                            <xsl:otherwise>
                                                                <stepTypeId>
                                                                    <xsl:value-of select="282"/>
                                                                </stepTypeId>
                                                            </xsl:otherwise>
                                                        </xsl:choose>
                                                    </group>
                                                </xsl:when>
                                                <xsl:otherwise>
                                                    <group>
                                                        <isRetry>
                                                            <xsl:value-of select="false()"/>
                                                        </isRetry>
                                                        <isFirstOccurred>
                                                            <xsl:value-of select="false()"/>
                                                        </isFirstOccurred>
                                                        <xsl:choose>
                                                            <xsl:when test="$Start/group/isGetReputation=&quot;true&quot;">
                                                                <error_message>
                                                                    <xsl:value-of select="concat(&quot;Charon getReputation return status = &quot;,$Start/group/ReturnStatus, &quot;, errorCode= &quot;,$Start/group/ErrorCode,&#xA;&quot; &quot;,$var,&quot;. This Error happened again.&quot;, &quot;Please contact Charon team to solve this error manually.&quot;)"/>
                                                                </error_message>
                                                            </xsl:when>
                                                            <xsl:otherwise>
                                                                <error_message>
                                                                    <xsl:value-of select="concat(&quot;Charon reputaeFile return status = &quot;,$Start/group/ReturnStatus, &quot;, errorCode= &quot;,$Start/group/ErrorCode,&#xA;&quot; &quot;,$var,&quot;. This Error happened again.&quot; ,&quot; Please contact Charon team to solve this error manually.&quot;)"/>
                                                                </error_message>
                                                            </xsl:otherwise>
                                                        </xsl:choose>
                                                        <xsl:choose>
                                                            <xsl:when test="$Start/group/isGetReputation=&quot;true&quot;">
                                                                <stepTypeId>
                                                                    <xsl:value-of select="271"/>
                                                                </stepTypeId>
                                                            </xsl:when>
                                                            <xsl:otherwise>
                                                                <stepTypeId>
                                                                    <xsl:value-of select="272"/>
                                                                </stepTypeId>
                                                            </xsl:otherwise>
                                                        </xsl:choose>
                                                    </group>
                                                </xsl:otherwise>
                                            </xsl:choose>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <group>
                                                <isRetry>
                                                    <xsl:value-of select="true()"/>
                                                </isRetry>
                                                <isFirstOccurred>
                                                    <xsl:value-of select="true()"/>
                                                </isFirstOccurred>
                                                <xsl:choose>
                                                    <xsl:when test="$Start/group/isGetReputation=&quot;true&quot;">
                                                        <error_message>
                                                            <xsl:value-of select="if ($Start/group/ErrorRetryCount &lt; 3) then&#xA;concat(&quot;Charon getReputation return status = &quot;,$Start/group/ReturnStatus, &quot;, errorCode= &quot;,$Start/group/ErrorCode,&#xA;&quot; &quot;,$var,&quot;. This is the first occurred. TIBCO will retry after &quot;,round(($_globalVariables/ns3:GlobalVariables/ExternalServices/ToACS/V2.1Subprocesses/Requery/ErrorRetryInterval_Sec div 60)),&quot; minutes&quot;)&#xA;else &#xA;concat(&quot;Charon getReputation return status = &quot;,$Start/group/ReturnStatus, &quot;, errorCode= &quot;,$Start/group/ErrorCode,&#xA;&quot; &quot;,$var,&quot;. This is the first occurred. TIBCO will retry after &quot;,round(($_globalVariables/ns3:GlobalVariables/ExternalServices/ToACS/V2.1Subprocesses/Requery/LongErrorRetryInterval_Sec div 60)),&quot; minutes&quot;)"/>
                                                        </error_message>
                                                    </xsl:when>
                                                    <xsl:otherwise>
                                                        <error_message>
                                                            <xsl:value-of select="if ($Start/group/ErrorRetryCount &lt; 3) then&#xA;concat(&quot;Charon reputaeFile return status = &quot;,$Start/group/ReturnStatus, &quot;, errorCode= &quot;,$Start/group/ErrorCode,&#xA;&quot; &quot;,$var,&quot;. This is the first occurred. TIBCO will retry after &quot;,round(($_globalVariables/ns3:GlobalVariables/ExternalServices/ToACS/V2.1Subprocesses/Requery/ErrorRetryInterval_Sec div 60)),&quot; minutes&quot;)&#xA;else &#xA;concat(&quot;Charon reputaeFile return status = &quot;,$Start/group/ReturnStatus, &quot;, errorCode= &quot;,$Start/group/ErrorCode,&#xA;&quot; &quot;,$var,&quot;. This is the first occurred. TIBCO will retry after &quot;,round(($_globalVariables/ns3:GlobalVariables/ExternalServices/ToACS/V2.1Subprocesses/Requery/LongErrorRetryInterval_Sec div 60)),&quot; minutes&quot;)"/>
                                                        </error_message>
                                                    </xsl:otherwise>
                                                </xsl:choose>
                                                <xsl:choose>
                                                    <xsl:when test="$Start/group/isGetReputation=&quot;true&quot;">
                                                        <stepTypeId>
                                                            <xsl:value-of select="281"/>
                                                        </stepTypeId>
                                                    </xsl:when>
                                                    <xsl:otherwise>
                                                        <stepTypeId>
                                                            <xsl:value-of select="282"/>
                                                        </stepTypeId>
                                                    </xsl:otherwise>
                                                </xsl:choose>
                                            </group>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:choose>
                                        <xsl:when test="$_globalVariables/ns3:GlobalVariables/ExternalServices/ToFRS/GetCharonFileReputatinRetry/ErrorCodeHandler/Retry/MaxRetryCount > $Start/group/ErrorRetryCount&#xA;or $_globalVariables/ns3:GlobalVariables/ExternalServices/ToFRS/GetCharonFileReputatinRetry/ErrorCodeHandler/Retry/MaxRetryCount=-1">
                                            <group>
                                                <isRetry>
                                                    <xsl:value-of select="true()"/>
                                                </isRetry>
                                                <isFirstOccurred>
                                                    <xsl:value-of select="true()"/>
                                                </isFirstOccurred>
                                                <xsl:choose>
                                                    <xsl:when test="$Start/group/isGetReputation=&quot;true&quot;">
                                                        <error_message>
                                                            <xsl:value-of select="if ($Start/group/ErrorRetryCount &lt; 3) then&#xA;concat(&quot;Charon getReputation return status = &quot;,$Start/group/ReturnStatus, &quot;, errorCode= &quot;,$Start/group/ErrorCode,&#xA;&quot; &quot;,$var,&quot;. This is the first occurred. TIBCO will retry after &quot;,round(($_globalVariables/ns3:GlobalVariables/ExternalServices/ToACS/V2.1Subprocesses/Requery/ErrorRetryInterval_Sec div 60)),&quot; minutes&quot;)&#xA;else &#xA;concat(&quot;Charon getReputation return status = &quot;,$Start/group/ReturnStatus, &quot;, errorCode= &quot;,$Start/group/ErrorCode,&#xA;&quot; &quot;,$var,&quot;. This is the first occurred. TIBCO will retry after &quot;,round(($_globalVariables/ns3:GlobalVariables/ExternalServices/ToACS/V2.1Subprocesses/Requery/LongErrorRetryInterval_Sec div 60)),&quot; minutes&quot;)"/>
                                                        </error_message>
                                                    </xsl:when>
                                                    <xsl:otherwise>
                                                        <error_message>
                                                            <xsl:value-of select="if ($Start/group/ErrorRetryCount &lt; 3) then&#xA;concat(&quot;Charon reputaeFile return status = &quot;,$Start/group/ReturnStatus, &quot;, errorCode= &quot;,$Start/group/ErrorCode,&#xA;&quot; &quot;,$var,&quot;. This is the first occurred. TIBCO will retry after &quot;,round(($_globalVariables/ns3:GlobalVariables/ExternalServices/ToACS/V2.1Subprocesses/Requery/ErrorRetryInterval_Sec div 60)),&quot; minutes&quot;)&#xA;else &#xA;concat(&quot;Charon reputaeFile return status = &quot;,$Start/group/ReturnStatus, &quot;, errorCode= &quot;,$Start/group/ErrorCode,&#xA;&quot; &quot;,$var,&quot;. This is the first occurred. TIBCO will retry after &quot;,round(($_globalVariables/ns3:GlobalVariables/ExternalServices/ToACS/V2.1Subprocesses/Requery/LongErrorRetryInterval_Sec div 60)),&quot; minutes&quot;)"/>
                                                        </error_message>
                                                    </xsl:otherwise>
                                                </xsl:choose>
                                                <xsl:choose>
                                                    <xsl:when test="$Start/group/isGetReputation=&quot;true&quot;">
                                                        <stepTypeId>
                                                            <xsl:value-of select="281"/>
                                                        </stepTypeId>
                                                    </xsl:when>
                                                    <xsl:otherwise>
                                                        <stepTypeId>
                                                            <xsl:value-of select="282"/>
                                                        </stepTypeId>
                                                    </xsl:otherwise>
                                                </xsl:choose>
                                            </group>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <group>
                                                <isRetry>
                                                    <xsl:value-of select="false()"/>
                                                </isRetry>
                                                <isFirstOccurred>
                                                    <xsl:value-of select="true()"/>
                                                </isFirstOccurred>
                                                <xsl:choose>
                                                    <xsl:when test="$Start/group/isGetReputation=&quot;true&quot;">
                                                        <error_message>
                                                            <xsl:value-of select="concat(&quot;Charon getReputation return status = &quot;,$Start/group/ReturnStatus, &quot;, errorCode= &quot;,$Start/group/ErrorCode,&#xA;&quot; &quot;,$var,&quot;. Please contact Charon team to solve this error manually.&quot;)"/>
                                                        </error_message>
                                                    </xsl:when>
                                                    <xsl:otherwise>
                                                        <error_message>
                                                            <xsl:value-of select="concat(&quot;Charon reputaeFile return status = &quot;,$Start/group/ReturnStatus, &quot;, errorCode= &quot;,$Start/group/ErrorCode,&#xA;&quot; &quot;,$var,&quot;. Please contact Charon team to solve this error manually.&quot;)"/>
                                                        </error_message>
                                                    </xsl:otherwise>
                                                </xsl:choose>
                                                <xsl:choose>
                                                    <xsl:when test="$Start/group/isGetReputation=&quot;true&quot;">
                                                        <stepTypeId>
                                                            <xsl:value-of select="271"/>
                                                        </stepTypeId>
                                                    </xsl:when>
                                                    <xsl:otherwise>
                                                        <stepTypeId>
                                                            <xsl:value-of select="272"/>
                                                        </stepTypeId>
                                                    </xsl:otherwise>
                                                </xsl:choose>
                                            </group>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:when>
                        <xsl:when test="exists(tib:tokenize($_globalVariables/ns3:GlobalVariables/ExternalServices/ToFRS/GetCharonFileReputatinRetry/ErrorCodeHandler/Notify/ErrorCodeList, &quot;,&quot;)[upper-case(tib:trim(.))=upper-case(tib:trim($Start/group/ErrorCode))][1])">
                            <group>
                                <isRetry>
                                    <xsl:value-of select="false()"/>
                                </isRetry>
                                <isFirstOccurred>
                                    <xsl:value-of select="true()"/>
                                </isFirstOccurred>
                                <xsl:choose>
                                    <xsl:when test="$Start/group/isGetReputation=&quot;true&quot;">
                                        <error_message>
                                            <xsl:value-of select="concat(&quot;Charon getReputation return status = &quot;,$Start/group/ReturnStatus, &quot;, errorCode= &quot;,$Start/group/ErrorCode,&#xA;&quot; &quot;,$var,&quot;. Please contact Charon team to solve this error manually.&quot;)"/>
                                        </error_message>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <error_message>
                                            <xsl:value-of select="concat(&quot;Charon reputaeFile return status = &quot;,$Start/group/ReturnStatus, &quot;, errorCode= &quot;,$Start/group/ErrorCode,&#xA;&quot; &quot;,$var,&quot;. Please contact Charon team to solve this error manually.&quot;)"/>
                                        </error_message>
                                    </xsl:otherwise>
                                </xsl:choose>
                                <xsl:choose>
                                    <xsl:when test="$Start/group/isGetReputation=&quot;true&quot;">
                                        <stepTypeId>
                                            <xsl:value-of select="271"/>
                                        </stepTypeId>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <stepTypeId>
                                            <xsl:value-of select="272"/>
                                        </stepTypeId>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </group>
                        </xsl:when>
                        <xsl:otherwise>
                            <group>
                                <isRetry>
                                    <xsl:value-of select="false()"/>
                                </isRetry>
                                <isFirstOccurred>
                                    <xsl:value-of select="true()"/>
                                </isFirstOccurred>
                                <xsl:choose>
                                    <xsl:when test="$Start/group/isGetReputation=&quot;true&quot;">
                                        <error_message>
                                            <xsl:value-of select="concat(&quot;Charon getReputation return status = &quot;,$Start/group/ReturnStatus, &quot;, errorCode= &quot;,$Start/group/ErrorCode,&#xA;&quot; &quot;,$var,&quot;. This error is not defined. Please contact Charon team to solve this error manually.&quot;)"/>
                                        </error_message>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <error_message>
                                            <xsl:value-of select="concat(&quot;Charon reputaeFile return status = &quot;,$Start/group/ReturnStatus, &quot;, errorCode= &quot;,$Start/group/ErrorCode,&#xA;&quot; &quot;,$var,&quot;. This error is not defined. Please contact Charon team to solve this error manually.&quot;)"/>
                                        </error_message>
                                    </xsl:otherwise>
                                </xsl:choose>
                                <xsl:choose>
                                    <xsl:when test="$Start/group/isGetReputation=&quot;true&quot;">
                                        <stepTypeId>
                                            <xsl:value-of select="271"/>
                                        </stepTypeId>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <stepTypeId>
                                            <xsl:value-of select="272"/>
                                        </stepTypeId>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </group>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:otherwise>
            </xsl:choose>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Retry Nofity Process">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>334</pd:x>
        <pd:y>259</pd:y>
        <config>
            <processName>/Services/SharedServices/Error Handling Process.process</processName>
        </config>
        <pd:inputBindings>
            <group>
                <pfx19:SMF>
                    <xsl:copy-of select="$Start/group/pfx19:SMF/pfx19:SMFHeader"/>
                    <pfx19:SMFBody>
                        <xsl:copy-of select="$Start/group/pfx19:SMF/pfx19:SMFBody/pfx19:Message"/>
                        <pfx19:Error>
                            <pfx19:src>
                                <xsl:value-of select="$Start/group/src"/>
                            </pfx19:src>
                            <pfx19:error_code>
                                <xsl:value-of select="$Start/group/ErrorCode"/>
                            </pfx19:error_code>
                            <pfx19:error_message>
                                <xsl:value-of select="$ErrorCodeMapper/group/error_message"/>
                            </pfx19:error_message>
                            <pfx19:error_detail>
                                <xsl:value-of select="&quot;&quot;"/>
                            </pfx19:error_detail>
                        </pfx19:Error>
                    </pfx19:SMFBody>
                </pfx19:SMF>
                <isESBLog>
                    <xsl:value-of select="false()"/>
                </isESBLog>
            </group>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Call DB Log Process">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>463</pd:x>
        <pd:y>119</pd:y>
        <config>
            <processName>/Utilities/ACSDBLogger/SendDBLog.process</processName>
        </config>
        <pd:inputBindings>
            <ns12:InsertFileActivityLogWithRequestType>
                <ns12:serviceID>
                    <xsl:value-of select="$Start/group/ServiceId"/>
                </ns12:serviceID>
                <ns12:fileSHA1>
                    <xsl:value-of select="$Start/group/fileSha1"/>
                </ns12:fileSHA1>
                <ns12:stepTypeID>
                    <xsl:value-of select="$ErrorCodeMapper/group/stepTypeId"/>
                </ns12:stepTypeID>
                <ns12:message>
                    <xsl:value-of select="$ErrorCodeMapper/group/error_message"/>
                </ns12:message>
                <ns12:MessageKey>
                    <xsl:value-of select="$Start/group/MessageKey"/>
                </ns12:MessageKey>
                <ns12:RequestType>
                    <xsl:value-of select="&quot;&quot;"/>
                </ns12:RequestType>
            </ns12:InsertFileActivityLogWithRequestType>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log">
        <pd:type>com.tibco.pe.core.WriteToLogActivity</pd:type>
        <pd:resourceType>ae.activities.log</pd:resourceType>
        <pd:x>192</pd:x>
        <pd:y>36</pd:y>
        <config>
            <role>User</role>
        </config>
        <pd:inputBindings>
            <ns8:ActivityInput>
                <message>
                    <xsl:value-of select="tib:render-xml($Start/group/pfx19:SMF)"/>
                </message>
                <msgCode>
                    <xsl:value-of select="$Start/group/MessageKey"/>
                </msgCode>
            </ns8:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>ErrorCodeMapper</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorCodeMapper</pd:from>
        <pd:to>Generate Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65485</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorCodeMapper</pd:from>
        <pd:to>Retry Nofity Process</pd:to>
        <pd:xpathDescription>First Occurred Notify</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$_globalVariables/ns3:GlobalVariables/ExternalServices/ToFRS/GetCharonFileReputatinRetry/ErrorCodeHandler/Retry/FirstOccurredNofity="true"
and $ErrorCodeMapper/group/isRetry="true"
and $ErrorCodeMapper/group/isFirstOccurred="true"</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Retry Nofity Process</pd:from>
        <pd:to>Call DB Log Process</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorCodeMapper</pd:from>
        <pd:to>Call DB Log Process</pd:to>
        <pd:xpathDescription>Temporary Error Retry</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>($_globalVariables/ns3:GlobalVariables/ExternalServices/ToFRS/GetCharonFileReputatinRetry/ErrorCodeHandler/Retry/FirstOccurredNofity="false" or
$ErrorCodeMapper/group/isFirstOccurred="false")
and $ErrorCodeMapper/group/isRetry="true"</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Call DB Log Process</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Log</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log</pd:from>
        <pd:to>ErrorCodeMapper</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>
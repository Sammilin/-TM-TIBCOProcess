<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx16="http://www.trendmicro.com/ESB/FRS/schemas/SMF" xmlns:pfx15="http://www.tibco.com/ns/no_namespace_schema_location/WSDL/Provider/TM_PROB_LIST_RQ.V1.xsd" xmlns:pfx14="http://xmlns.oracle.com/Enterprise/HCM/services/TM_PROBATION_LIST.1" xmlns:ns="http://xmlns.oracle.com/Enterprise/Tools/schemas/TM_EMPL_LIST_RQ.V1" xmlns:pfx13="http://www.trendmicro.com/ESB/PeopleSoft/services/getManagerInfo" xmlns:pfx12="http://www.trendmicro.com/esb/4/peoplesoft" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:pfx11="http://schemas.xmlsoap.org/soap/envelope/" xmlns:pfx10="http://xmlns.oracle.com/Enterprise/Tools/schemas/M117365.V1" xmlns:TM="java://com.trendmicro.TMBWUtilities" xmlns:pfx19="http://www.trendmicro.com/ESB/ACS/schemas/SMF" xmlns:pfx18="http://Anti.Malware.Tracker-Service.org/" xmlns:pfx17="http://xmlns.example.com/1274434789173/PatternCreatorImpl/Simulations/ServiceProvider/PatternCreator" xmlns:pfx5="http://xmlns.oracle.com/Enterprise/HCM/services/CI_TM_WS_GET_SUB_INFO.1" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx4="http://xmlns.oracle.com/Enterprise/Tools/schemas/M483800.V1" xmlns:pfx3="http://xmlns.oracle.com/Enterprise/HCM/services/CI_TM_WS_GET_MGR_INFO.1" xmlns:pfx2="http://xmlns.oracle.com/Enterprise/HCM/services/TM_EMPLOYEE_LIST.1" xmlns:pfx9="http://xmlns.oracle.com/Enterprise/HCM/services/CI_TM_CI_PERSON_DATA.1" xmlns:pfx8="http://www.trendmicro.com/ESB/PeopleSoft/services/getSubInfo" xmlns:pfx7="http://www.trendmicro.com/ESB/PeopleSoft/services/getEmpListHRInitiateSurveys" xmlns:pfx6="http://www.tibco.com/ns/no_namespace_schema_location/WSDL/Provider/TM_EMPL_LIST_RS.V1.xsd" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns9="http://www.trendmicro.com/ESB/schemas/error" xmlns:ns5="http://xmlns.tibco.com/encodings/mime" xmlns:ns12="http://tempuri.org/" xmlns:ns6="http://www.tibco.com/ns/no_namespace_schema_location/WSDL/Provider/TM_EMPL_LIST_RS.V2.xsd" xmlns:pfx="http://www.tibco.com/ns/no_namespace_schema_location/WSDL/Provider/TM_EMPL_LIST_RQ.V1.xsd" xmlns:ns7="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:ns10="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:ns11="http://www.trendmicro.com/ESB/ACS/schemas/2.1SubProcesses/SubprocessesRQ" xmlns:ns8="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns2="http://www.tibco.com/pe/EngineTypes" xmlns:ns1="http://xmlns.oracle.com/Enterprise/Tools/schemas/TM_EMPL_LIST_RS.V1" xmlns:ns4="http://xmlns.oracle.com/Enterprise/Tools/schemas/TM_EMPL_LIST_RS.V2" xmlns:ns3="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns0="http://www.tibco.com/schemas/ACSService2.1/XSD/Client/Schema.xsd" xmlns:pfx22="http://www.tibco.com/ns/no_namespace_schema_location/XSD/Common/AtlasMessage.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx23="http://coretech.trendmicro.com/frs/charon/" xmlns:pfx20="http://www.trendmicro.com/ESB/schemas/errorReport" xmlns:pfx21="http://www.tibco.com/ns/no_namespace_schema_location/XSD/Common/AtlasSampe.xsd" xmlns:pfx24="http://www.trendmicro.com/ESB/ACS/schemas/2.1Funtions/UpdateHashStatusResponseResponse" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:pfx25="http://microsoft.com/wsdl/types/">
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/WSDL/Provider/TM_EMPL_LIST_RQ.V1.xsd"/>
    <xsd:import namespace="http://schemas.xmlsoap.org/soap/envelope/" schemaLocation="/XSD/Common/soap.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/WSDL/Provider/TM_EMPL_LIST_RS.V1.xsd" schemaLocation="/WSDL/Provider/TM_EMPL_LIST_RS.V1.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/WSDL/Provider/TM_EMPL_LIST_RQ.V1.xsd" schemaLocation="/WSDL/Provider/TM_EMPL_LIST_RQ.V1.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/WSDL/Provider/TM_EMPL_LIST_RS.V2.xsd" schemaLocation="/WSDL/Provider/TM_EMPL_LIST_RS.V2.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/FRS/schemas/SMF" schemaLocation="/XSD/Common/FRS.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/XSD/Common/AtlasSampe.xsd" schemaLocation="/XSD/Common/AtlasSampe.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/XSD/Common/AtlasMessage.xsd" schemaLocation="/XSD/Common/AtlasMessage.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/schemas/error" schemaLocation="/XSD/Common/error.xsd"/>
    <xsd:import namespace="http://tempuri.org/" schemaLocation="/WSDL/Client/ACS WSDL.wsdl"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/ACS/schemas/SMF" schemaLocation="/XSD/Common/SMF.xsd"/>
    <wsdl:import namespace="http://xmlns.oracle.com/Enterprise/HCM/services/TM_EMPLOYEE_LIST.1" location="/WSDL/Provider/TM_EMPLOYEE_LIST.1.wsdl"/>
    <wsdl:import namespace="http://xmlns.example.com/1274434789173/PatternCreatorImpl/Simulations/ServiceProvider/PatternCreator" location="/WSDL/Client/PatternCreatorWSDLClient.wsdl"/>
    <wsdl:import namespace="http://Anti.Malware.Tracker-Service.org/" location="/WSDL/Client/Atlas WSDL.wsdl"/>
    <pd:name>EventProcess/SubProcess/SendGetFileReputationRequest_Querying.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="group">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="RetryCount" type="xsd:string"/>
                    <xsd:element name="ErrorRetryCount" type="xsd:int"/>
                    <xsd:element name="MessageKey" type="xsd:string"/>
                    <xsd:element ref="pfx19:SMF"/>
                    <xsd:element name="lastCharonResult" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>98</pd:startX>
    <pd:startY>216</pd:startY>
    <pd:returnBindings>
        <root>
            <xsl:choose>
                <xsl:when test="exists($GetFileReputation/group/Contintue)">
                    <goReQueried>
                        <xsl:value-of select="$GetFileReputation/group/Contintue"/>
                    </goReQueried>
                </xsl:when>
                <xsl:otherwise>
                    <goReQueried>
                        <xsl:value-of select="&quot;false&quot;"/>
                    </goReQueried>
                </xsl:otherwise>
            </xsl:choose>
        </root>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="goReQueried" type="xsd:boolean"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>505</pd:endX>
    <pd:endY>216</pd:endY>
    <pd:errorSchemas>
        <errorReport ref="ns9:Error"/>
    </pd:errorSchemas>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1261710921990</pd:targetNamespace>
    <pd:activity name="Call Error Handling Process">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>504</pd:x>
        <pd:y>347</pd:y>
        <config>
            <processName>/Services/SharedServices/Error Handling Process.process</processName>
        </config>
        <pd:coercions>
            <pd:coercion xpath="$_error/ns2:ErrorReport/Data/*" element="ns9:Error"/>
        </pd:coercions>
        <pd:inputBindings>
            <group>
                <pfx19:SMF>
                    <xsl:copy-of select="$Start/group/pfx19:SMF/pfx19:SMFHeader"/>
                    <pfx19:SMFBody>
                        <xsl:copy-of select="$Start/group/pfx19:SMF/pfx19:SMFBody/pfx19:Message"/>
                        <xsl:choose>
                            <xsl:when test="exists($_error/ns2:ErrorReport/Data/ns9:Error)">
                                <pfx19:Error>
                                    <pfx19:src>
                                        <xsl:value-of select="$_error/ns2:ErrorReport/Data/ns9:Error/ns9:src"/>
                                    </pfx19:src>
                                    <pfx19:error_code>
                                        <xsl:value-of select="$_error/ns2:ErrorReport/Data/ns9:Error/ns9:error_code"/>
                                    </pfx19:error_code>
                                    <pfx19:error_message>
                                        <xsl:value-of select="$_error/ns2:ErrorReport/Data/ns9:Error/ns9:error_message"/>
                                    </pfx19:error_message>
                                    <pfx19:error_detail>
                                        <xsl:value-of select="$_error/ns2:ErrorReport/Data/ns9:Error/ns9:stack_trace"/>
                                    </pfx19:error_detail>
                                </pfx19:Error>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx19:Error>
                                    <pfx19:src>
                                        <xsl:value-of select="$_error/ns2:ErrorReport/ProcessStack"/>
                                    </pfx19:src>
                                    <pfx19:error_code>
                                        <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                                    </pfx19:error_code>
                                    <pfx19:error_message>
                                        <xsl:value-of select="$_error/ns2:ErrorReport/Msg"/>
                                    </pfx19:error_message>
                                    <xsl:if test="$_error/ns2:ErrorReport/StackTrace">
                                        <pfx19:error_detail>
                                            <xsl:value-of select="$_error/ns2:ErrorReport/StackTrace"/>
                                        </pfx19:error_detail>
                                    </xsl:if>
                                </pfx19:Error>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:copy-of select="$Start/group/pfx19:SMF/pfx19:SMFBody/pfx19:EventMsg"/>
                    </pfx19:SMFBody>
                </pfx19:SMF>
                <ns12:InsertFileActivityLogWithRequestType>
                    <ns12:serviceID>
                        <xsl:value-of select="$Start/group/pfx19:SMF/pfx19:SMFBody[1]/pfx19:Message/pfx19:EventProcessMsg/pfx19:OnFileQuerying/pfx19:serviceId"/>
                    </ns12:serviceID>
                    <ns12:fileSHA1>
                        <xsl:value-of select="$Start/group/pfx19:SMF/pfx19:SMFBody[1]/pfx19:Message/pfx19:EventProcessMsg/pfx19:OnFileQuerying/pfx19:fileSha1"/>
                    </ns12:fileSHA1>
                    <ns12:stepTypeID>
                        <xsl:value-of select="9911"/>
                    </ns12:stepTypeID>
                    <ns12:message>
                        <xsl:value-of select="concat(&quot;BW response error: &quot;,$_error/ns2:ErrorReport/Msg)"/>
                    </ns12:message>
                    <ns12:MessageKey>
                        <xsl:value-of select="$Start/group/MessageKey"/>
                    </ns12:MessageKey>
                    <ns12:RequestType>
                        <xsl:value-of select="&quot;&quot;"/>
                    </ns12:RequestType>
                </ns12:InsertFileActivityLogWithRequestType>
                <isESBLog>
                    <xsl:value-of select="&quot;true&quot;"/>
                </isESBLog>
            </group>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>293</pd:x>
        <pd:y>342</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Log">
        <pd:type>com.tibco.pe.core.WriteToLogActivity</pd:type>
        <pd:resourceType>ae.activities.log</pd:resourceType>
        <pd:x>398</pd:x>
        <pd:y>340</pd:y>
        <config>
            <role>User</role>
        </config>
        <pd:inputBindings>
            <ns8:ActivityInput>
                <message>
                    <xsl:value-of select="tib:render-xml($Catch/exceptiondata,true())"/>
                </message>
            </ns8:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Exist Reputation File(AM_FILEPATH exist)">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>284</pd:x>
        <pd:y>233</pd:y>
        <config>
            <processName>/EventProcess/SubProcess/Exist Reputation File(AM_FILEPATH exist).process</processName>
        </config>
        <pd:inputBindings>
            <group>
                <RetryCount>
                    <xsl:value-of select="$Start/group/RetryCount"/>
                </RetryCount>
                <ErrorRetryCount>
                    <xsl:value-of select="$Start/group/ErrorRetryCount"/>
                </ErrorRetryCount>
                <MessageKey>
                    <xsl:value-of select="$Start/group/MessageKey"/>
                </MessageKey>
                <xsl:copy-of select="$Start/group/pfx19:SMF"/>
                <lastCharonResult>
                    <xsl:value-of select="$Start/group/lastCharonResult"/>
                </lastCharonResult>
            </group>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetFileReputation">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>276</pd:x>
        <pd:y>94</pd:y>
        <config>
            <processName>/EventProcess/SubProcess/GetFileReputation.process</processName>
        </config>
        <pd:inputBindings>
            <group>
                <RetryCount>
                    <xsl:value-of select="$Start/group/RetryCount"/>
                </RetryCount>
                <ErrorRetryCount>
                    <xsl:value-of select="$Start/group/ErrorRetryCount"/>
                </ErrorRetryCount>
                <MessageKey>
                    <xsl:value-of select="$Start/group/MessageKey"/>
                </MessageKey>
                <xsl:copy-of select="$Start/group/pfx19:SMF"/>
                <lastCharonResult>
                    <xsl:value-of select="$Start/group/lastCharonResult"/>
                </lastCharonResult>
            </group>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="OnFileQueried">
        <pd:type>com.tibco.plugin.jms.JMSQueueSendActivity</pd:type>
        <pd:resourceType>ae.activities.JMSQueueSendActivity</pd:resourceType>
        <pd:x>502</pd:x>
        <pd:y>93</pd:y>
        <config>
            <PermittedMessageType>XML Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
                <destination>%%EventProcess/EventCenterQueue%%%%EventProcess/version%%</destination>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/Resources/JMS/JMS Connection.sharedjmscon</ConnectionReference>
            <ApplicationProperties>/Resources/JMS/JMS Application Properties.sharedjmsapp</ApplicationProperties>
            <InDataxsdString ref="pfx19:SMF"/>
        </config>
        <pd:inputBindings>
            <ns10:ActivityInput>
                <JMSProperties/>
                <OtherProperties>
                    <RetryCount>
                        <xsl:value-of select="$Start/group/RetryCount"/>
                    </RetryCount>
                    <ErrorRetryCount>
                        <xsl:value-of select="$Start/group/ErrorRetryCount"/>
                    </ErrorRetryCount>
                </OtherProperties>
                <Body>
                    <pfx19:SMF>
                        <pfx19:SMFHeader>
                            <pfx19:MessageKey>
                                <xsl:value-of select="$Start/group/pfx19:SMF/pfx19:SMFHeader/pfx19:MessageKey"/>
                            </pfx19:MessageKey>
                            <pfx19:ServiceName>
                                <xsl:value-of select="&quot;EventCenter&quot;"/>
                            </pfx19:ServiceName>
                            <pfx19:ServiceVersion>
                                <xsl:value-of select="&quot;V1.1&quot;"/>
                            </pfx19:ServiceVersion>
                            <pfx19:SourceID>
                                <xsl:value-of select="$Start/group/pfx19:SMF/pfx19:SMFHeader/pfx19:SourceID"/>
                            </pfx19:SourceID>
                            <xsl:if test="$Start/group/pfx19:SMF/pfx19:SMFHeader/pfx19:SourceIP">
                                <pfx19:SourceIP>
                                    <xsl:value-of select="$Start/group/pfx19:SMF/pfx19:SMFHeader/pfx19:SourceIP"/>
                                </pfx19:SourceIP>
                            </xsl:if>
                            <pfx19:RqTimestamp>
                                <xsl:value-of select="current-dateTime()"/>
                            </pfx19:RqTimestamp>
                        </pfx19:SMFHeader>
                        <pfx19:SMFBody>
                            <pfx19:Message>
                                <pfx19:EventProcessMsg>
                                    <pfx19:OnFileQueried>
                                        <pfx19:serviceId>
                                            <xsl:value-of select="$Start/group/pfx19:SMF/pfx19:SMFBody[1]/pfx19:Message/pfx19:EventProcessMsg/pfx19:OnFileQuerying/pfx19:serviceId"/>
                                        </pfx19:serviceId>
                                        <pfx19:fileSha1>
                                            <xsl:value-of select="$Start/group/pfx19:SMF/pfx19:SMFBody[1]/pfx19:Message/pfx19:EventProcessMsg/pfx19:OnFileQuerying/pfx19:fileSha1"/>
                                        </pfx19:fileSha1>
                                        <pfx19:scanLog>
                                            <xsl:value-of select="tib:render-xml($GetFileReputation/group/return,1)"/>
                                        </pfx19:scanLog>
                                        <xsl:if test="$GetFileReputation/group/MessageKey">
                                            <pfx19:scanLogMessageKey>
                                                <xsl:value-of select="$GetFileReputation/group/MessageKey"/>
                                            </pfx19:scanLogMessageKey>
                                        </xsl:if>
                                        <xsl:if test="$Start/group/pfx19:SMF/pfx19:SMFBody[1]/pfx19:Message/pfx19:EventProcessMsg/pfx19:OnFileQuerying/pfx19:requestType">
                                            <pfx19:requestType>
                                                <xsl:value-of select="$Start/group/pfx19:SMF/pfx19:SMFBody[1]/pfx19:Message/pfx19:EventProcessMsg/pfx19:OnFileQuerying/pfx19:requestType"/>
                                            </pfx19:requestType>
                                        </xsl:if>
                                        <xsl:if test="$Start/group/pfx19:SMF/pfx19:SMFBody[1]/pfx19:Message/pfx19:EventProcessMsg/pfx19:OnFileQuerying/pfx19:fileMd5">
                                            <pfx19:fileMd5>
                                                <xsl:value-of select="$Start/group/pfx19:SMF/pfx19:SMFBody[1]/pfx19:Message/pfx19:EventProcessMsg/pfx19:OnFileQuerying/pfx19:fileMd5"/>
                                            </pfx19:fileMd5>
                                        </xsl:if>
                                        <xsl:if test="$Start/group/pfx19:SMF/pfx19:SMFBody[1]/pfx19:Message/pfx19:EventProcessMsg/pfx19:OnFileQuerying/pfx19:CUST_BRANCH">
                                            <pfx19:CUST_BRANCH>
                                                <xsl:value-of select="$Start/group/pfx19:SMF/pfx19:SMFBody[1]/pfx19:Message/pfx19:EventProcessMsg/pfx19:OnFileQuerying/pfx19:CUST_BRANCH"/>
                                            </pfx19:CUST_BRANCH>
                                        </xsl:if>
                                        <xsl:if test="$Start/group/pfx19:SMF/pfx19:SMFBody[1]/pfx19:Message/pfx19:EventProcessMsg/pfx19:OnFileQuerying/pfx19:fileType">
                                            <pfx19:fileType>
                                                <xsl:value-of select="$Start/group/pfx19:SMF/pfx19:SMFBody[1]/pfx19:Message/pfx19:EventProcessMsg/pfx19:OnFileQuerying/pfx19:fileType"/>
                                            </pfx19:fileType>
                                        </xsl:if>
                                        <xsl:if test="$Start/group/pfx19:SMF/pfx19:SMFBody[1]/pfx19:Message/pfx19:EventProcessMsg/pfx19:OnFileQuerying/pfx19:SR_TYPE">
                                            <pfx19:SR_TYPE>
                                                <xsl:value-of select="$Start/group/pfx19:SMF/pfx19:SMFBody[1]/pfx19:Message/pfx19:EventProcessMsg/pfx19:OnFileQuerying/pfx19:SR_TYPE"/>
                                            </pfx19:SR_TYPE>
                                        </xsl:if>
                                    </pfx19:OnFileQueried>
                                </pfx19:EventProcessMsg>
                            </pfx19:Message>
                            <xsl:if test="$Start/group/pfx19:SMF/pfx19:SMFBody[1]/pfx19:EventMsg/pfx19:ServiceID">
                                <pfx19:SessionID>
                                    <xsl:value-of select="$Start/group/pfx19:SMF/pfx19:SMFBody[1]/pfx19:EventMsg/pfx19:ServiceID"/>
                                </pfx19:SessionID>
                            </xsl:if>
                            <pfx19:EventMsg>
                                <pfx19:ServiceID>
                                    <xsl:value-of select="$Start/group/pfx19:SMF/pfx19:SMFBody[1]/pfx19:Message/pfx19:EventProcessMsg/pfx19:OnFileQuerying/pfx19:serviceId"/>
                                </pfx19:ServiceID>
                                <pfx19:EventKey>
                                    <xsl:value-of select="TM:getGUID()"/>
                                </pfx19:EventKey>
                                <pfx19:EventName>
                                    <xsl:value-of select="&quot;OnFileQueried&quot;"/>
                                </pfx19:EventName>
                                <pfx19:Consumer>
                                    <xsl:value-of select="$Start/group/pfx19:SMF/pfx19:SMFBody[1]/pfx19:EventMsg/pfx19:Consumer"/>
                                </pfx19:Consumer>
                                <pfx19:EventStepTypeId>
                                    <xsl:value-of select="$_globalVariables/ns3:GlobalVariables/EventProcess/EventTypeId/OnFileQueried"/>
                                </pfx19:EventStepTypeId>
                            </pfx19:EventMsg>
                        </pfx19:SMFBody>
                    </pfx19:SMF>
                </Body>
            </ns10:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>Log</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call Error Handling Process</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log</pd:from>
        <pd:to>Call Error Handling Process</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>GetFileReputation</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Exist Reputation File(AM_FILEPATH exist)</pd:to>
        <pd:xpathDescription>AM_FILEPATH!=""</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Start/group/pfx19:SMF/pfx19:SMFBody/pfx19:Message/pfx19:EventProcessMsg/pfx19:OnFileQuerying/pfx19:filePath!=""</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Exist Reputation File(AM_FILEPATH exist)</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetFileReputation</pd:from>
        <pd:to>OnFileQueried</pd:to>
        <pd:xpathDescription>Continue</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$GetFileReputation/group/Contintue="true"</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>GetFileReputation</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>OnFileQueried</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>
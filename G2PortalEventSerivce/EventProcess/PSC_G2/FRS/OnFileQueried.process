<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx16="http://www.trendmicro.com/ESB/FRS/schemas/SMF" xmlns:pfx15="http://www.tibco.com/ns/no_namespace_schema_location/WSDL/Provider/TM_PROB_LIST_RQ.V1.xsd" xmlns:pfx14="http://xmlns.oracle.com/Enterprise/HCM/services/TM_PROBATION_LIST.1" xmlns:ns="http://xmlns.oracle.com/Enterprise/Tools/schemas/TM_EMPL_LIST_RQ.V1" xmlns:pfx13="http://www.trendmicro.com/ESB/PeopleSoft/services/getManagerInfo" xmlns:pfx12="http://www.trendmicro.com/esb/4/peoplesoft" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:pfx11="http://schemas.xmlsoap.org/soap/envelope/" xmlns:pfx10="http://xmlns.oracle.com/Enterprise/Tools/schemas/M117365.V1" xmlns:TM="java://com.trendmicro.TMBWUtilities" xmlns:TM3="java://TMBWUtilitiesRobinson" xmlns:pfx19="http://www.trendmicro.com/ESB/ACS/schemas/SMF" xmlns:pfx18="http://Anti.Malware.Tracker-Service.org/" xmlns:pfx17="http://xmlns.example.com/1274434789173/PatternCreatorImpl/Simulations/ServiceProvider/PatternCreator" xmlns:pfx5="http://xmlns.oracle.com/Enterprise/HCM/services/CI_TM_WS_GET_SUB_INFO.1" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx4="http://xmlns.oracle.com/Enterprise/Tools/schemas/M483800.V1" xmlns:pfx3="http://xmlns.oracle.com/Enterprise/HCM/services/CI_TM_WS_GET_MGR_INFO.1" xmlns:pfx2="http://xmlns.oracle.com/Enterprise/HCM/services/TM_EMPLOYEE_LIST.1" xmlns:pfx9="http://xmlns.oracle.com/Enterprise/HCM/services/CI_TM_CI_PERSON_DATA.1" xmlns:pfx8="http://www.trendmicro.com/ESB/PeopleSoft/services/getSubInfo" xmlns:pfx7="http://www.trendmicro.com/ESB/PeopleSoft/services/getEmpListHRInitiateSurveys" xmlns:pfx6="http://www.tibco.com/ns/no_namespace_schema_location/WSDL/Provider/TM_EMPL_LIST_RS.V1.xsd" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns9="http://www.trendmicro.com/ESB/schemas/error" xmlns:ns5="http://xmlns.tibco.com/encodings/mime" xmlns:ns12="http://tempuri.org/" xmlns:ns13="http://www.tibco.com/schemas/ACSService2.1/XSD/Common/Schema.xsd2" xmlns:ns6="http://www.tibco.com/ns/no_namespace_schema_location/WSDL/Provider/TM_EMPL_LIST_RS.V2.xsd" xmlns:pfx="http://www.tibco.com/ns/no_namespace_schema_location/WSDL/Provider/TM_EMPL_LIST_RQ.V1.xsd" xmlns:ns7="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:ns10="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:ns11="http://www.trendmicro.com/ESB/ACS/schemas/2.1SubProcesses/SubprocessesRQ" xmlns:ns8="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns2="http://www.tibco.com/pe/EngineTypes" xmlns:ns1="http://xmlns.oracle.com/Enterprise/Tools/schemas/TM_EMPL_LIST_RS.V1" xmlns:ns4="http://xmlns.oracle.com/Enterprise/Tools/schemas/TM_EMPL_LIST_RS.V2" xmlns:ns3="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns0="http://www.tibco.com/schemas/ACSService2.1/XSD/Client/Schema.xsd" xmlns:pfx22="http://www.tibco.com/ns/no_namespace_schema_location/XSD/Common/AtlasMessage.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx23="http://coretech.trendmicro.com/frs/charon/" xmlns:pfx20="http://www.trendmicro.com/ESB/schemas/errorReport" xmlns:pfx21="http://www.tibco.com/ns/no_namespace_schema_location/XSD/Common/AtlasSampe.xsd" xmlns:pfx24="http://www.trendmicro.com/ESB/ACS/schemas/2.1Funtions/UpdateHashStatusResponseResponse" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:pfx25="http://microsoft.com/wsdl/types/">
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/WSDL/Provider/TM_EMPL_LIST_RQ.V1.xsd"/>
    <xsd:import namespace="http://schemas.xmlsoap.org/soap/envelope/" schemaLocation="/XSD/Common/soap.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/WSDL/Provider/TM_EMPL_LIST_RS.V1.xsd" schemaLocation="/WSDL/Provider/TM_EMPL_LIST_RS.V1.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/WSDL/Provider/TM_EMPL_LIST_RQ.V1.xsd" schemaLocation="/WSDL/Provider/TM_EMPL_LIST_RQ.V1.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/WSDL/Provider/TM_EMPL_LIST_RS.V2.xsd" schemaLocation="/WSDL/Provider/TM_EMPL_LIST_RS.V2.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/FRS/schemas/SMF" schemaLocation="/XSD/Common/FRS.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/XSD/Common/AtlasSampe.xsd" schemaLocation="/XSD/Common/AtlasSampe.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/XSD/Common/AtlasMessage.xsd" schemaLocation="/XSD/Common/AtlasMessage.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/schemas/error" schemaLocation="/XSD/Common/error.xsd"/>
    <xsd:import namespace="http://tempuri.org/" schemaLocation="/WSDL/Client/ACS WSDL.wsdl"/>
    <xsd:import namespace="http://coretech.trendmicro.com/frs/charon/" schemaLocation="/WSDL/Client/Charon.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/ACS/schemas/SMF" schemaLocation="/XSD/Common/SMF.xsd"/>
    <wsdl:import namespace="http://xmlns.oracle.com/Enterprise/HCM/services/TM_EMPLOYEE_LIST.1" location="/WSDL/Provider/TM_EMPLOYEE_LIST.1.wsdl"/>
    <wsdl:import namespace="http://xmlns.example.com/1274434789173/PatternCreatorImpl/Simulations/ServiceProvider/PatternCreator" location="/WSDL/Client/PatternCreatorWSDLClient.wsdl"/>
    <wsdl:import namespace="http://Anti.Malware.Tracker-Service.org/" location="/WSDL/Client/Atlas WSDL.wsdl"/>
    <pd:name>EventProcess/PSC_G2/FRS/OnFileQueried.process</pd:name>
    <pd:startName>JMS Queue Receiver</pd:startName>
    <pd:startX>0</pd:startX>
    <pd:startY>0</pd:startY>
    <pd:returnBindings>
        <root>
            <xsl:choose>
                <xsl:when test="exists($GetFileReputation/group/Contintue)">
                    <goReQueried>
                        <xsl:value-of select="$GetFileReputation/group/Contintue"/>
                    </goReQueried>
                </xsl:when>
                <xsl:otherwise>
                    <goReQueried>
                        <xsl:value-of select="&quot;false&quot;"/>
                    </goReQueried>
                </xsl:otherwise>
            </xsl:choose>
        </root>
    </pd:returnBindings>
    <pd:starter name="JMS Queue Receiver">
        <pd:type>com.tibco.plugin.jms.JMSQueueEventSource</pd:type>
        <pd:resourceType>ae.activities.JMSQueueEventSource</pd:resourceType>
        <pd:x>89</pd:x>
        <pd:y>46</pd:y>
        <config>
            <PermittedMessageType>XML Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
                <destination>%%EventProcess/OnFileQueriedQueue%%%%EventProcess/version%%</destination>
                <selector>JMSXGroupID='%%EventProcess/PSC_G2/FRS/Consumer%%'</selector>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/Resources/JMS/JMS Connection.sharedjmscon</ConnectionReference>
            <ApplicationProperties>/Resources/JMS/JMS Application Properties.sharedjmsapp</ApplicationProperties>
            <OutDataxsdString ref="pfx19:SMF"/>
        </config>
        <pd:inputBindings/>
    </pd:starter>
    <pd:endName>End</pd:endName>
    <pd:endX>1080</pd:endX>
    <pd:endY>293</pd:endY>
    <pd:errorSchemas>
        <errorReport ref="ns9:Error"/>
    </pd:errorSchemas>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1261710921990</pd:targetNamespace>
    <pd:activity name="Call Error Handling Process">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1214</pd:x>
        <pd:y>304</pd:y>
        <config>
            <processName>/Services/SharedServices/Error Handling Process.process</processName>
        </config>
        <pd:coercions>
            <pd:coercion xpath="$_error/ns2:ErrorReport/Data/*" element="ns9:Error"/>
        </pd:coercions>
        <pd:inputBindings>
            <group>
                <pfx19:SMF>
                    <xsl:copy-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFHeader"/>
                    <pfx19:SMFBody>
                        <xsl:copy-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody/pfx19:Message"/>
                        <xsl:choose>
                            <xsl:when test="exists($_error/ns2:ErrorReport/Data/ns9:Error)">
                                <pfx19:Error>
                                    <pfx19:src>
                                        <xsl:value-of select="$_error/ns2:ErrorReport/Data/ns9:Error/ns9:src"/>
                                    </pfx19:src>
                                    <pfx19:error_code>
                                        <xsl:value-of select="$_error/ns2:ErrorReport/Data/ns9:Error/ns9:error_code"/>
                                    </pfx19:error_code>
                                    <pfx19:error_message>
                                        <xsl:value-of select="$_error/ns2:ErrorReport/Data/ns9:Error/ns9:error_message"/>
                                    </pfx19:error_message>
                                    <pfx19:error_detail>
                                        <xsl:value-of select="$_error/ns2:ErrorReport/Data/ns9:Error/ns9:stack_trace"/>
                                    </pfx19:error_detail>
                                </pfx19:Error>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx19:Error>
                                    <pfx19:src>
                                        <xsl:value-of select="$_error/ns2:ErrorReport/ProcessStack"/>
                                    </pfx19:src>
                                    <pfx19:error_code>
                                        <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                                    </pfx19:error_code>
                                    <pfx19:error_message>
                                        <xsl:value-of select="$_error/ns2:ErrorReport/Msg"/>
                                    </pfx19:error_message>
                                    <xsl:if test="$_error/ns2:ErrorReport/StackTrace">
                                        <pfx19:error_detail>
                                            <xsl:value-of select="$_error/ns2:ErrorReport/StackTrace"/>
                                        </pfx19:error_detail>
                                    </xsl:if>
                                </pfx19:Error>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:copy-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody/pfx19:EventMsg"/>
                    </pfx19:SMFBody>
                </pfx19:SMF>
                <ns12:InsertFileActivityLogWithRequestType>
                    <ns12:serviceID>
                        <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:Message/pfx19:EventProcessMsg/pfx19:OnFileQueried/pfx19:serviceId"/>
                    </ns12:serviceID>
                    <xsl:if test="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:Message/pfx19:EventProcessMsg/pfx19:OnFileQueried/pfx19:fileSha1">
                        <ns12:fileSHA1>
                            <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:Message/pfx19:EventProcessMsg/pfx19:OnFileQueried/pfx19:fileSha1"/>
                        </ns12:fileSHA1>
                    </xsl:if>
                    <ns12:stepTypeID>
                        <xsl:value-of select="9911"/>
                    </ns12:stepTypeID>
                    <xsl:choose>
                        <xsl:when test="exists($_error/ns2:ErrorReport/Data)">
                            <xsl:if test="$_error/ns2:ErrorReport/Data/ns9:Error/ns9:error_message">
                                <ns12:message>
                                    <xsl:value-of select="$_error/ns2:ErrorReport/Data/ns9:Error/ns9:error_message"/>
                                </ns12:message>
                            </xsl:if>
                        </xsl:when>
                        <xsl:otherwise>
                            <ns12:message>
                                <xsl:value-of select="concat(&quot;BW response error: &quot;,$_error/ns2:ErrorReport/Msg)"/>
                            </ns12:message>
                        </xsl:otherwise>
                    </xsl:choose>
                    <ns12:MessageKey>
                        <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:Message/pfx19:EventProcessMsg/pfx19:OnFileQueried/pfx19:scanLogMessageKey"/>
                    </ns12:MessageKey>
                    <ns12:RequestType>
                        <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:Message/pfx19:EventProcessMsg/pfx19:OnFileQueried/pfx19:requestType"/>
                    </ns12:RequestType>
                </ns12:InsertFileActivityLogWithRequestType>
                <ns13:InsertNeuronEventLog>
                    <ns13:ServiceId>
                        <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:EventMsg/pfx19:ServiceID"/>
                    </ns13:ServiceId>
                    <ns13:Consumer>
                        <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:EventMsg/pfx19:Consumer"/>
                    </ns13:Consumer>
                    <ns13:FILESHA1>
                        <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:EventMsg/pfx19:FileSha1"/>
                    </ns13:FILESHA1>
                    <ns13:EventId>
                        <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:EventMsg/pfx19:EventStepTypeId"/>
                    </ns13:EventId>
                    <ns13:TypeId>
                        <xsl:value-of select="&quot;04&quot;"/>
                    </ns13:TypeId>
                    <ns13:EventKey>
                        <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:EventMsg/pfx19:EventKey"/>
                    </ns13:EventKey>
                    <ns13:Log>
                        <xsl:value-of select="tib:render-xml($JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF, true())"/>
                    </ns13:Log>
                </ns13:InsertNeuronEventLog>
                <isESBLog>
                    <xsl:value-of select="&quot;true&quot;"/>
                </isESBLog>
            </group>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>1212</pd:x>
        <pd:y>441</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="CharonResult">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>409</pd:x>
        <pd:y>38</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Detection branch">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>773</pd:x>
        <pd:y>42</pd:y>
        <config>
            <processName>/EventProcess/SubProcess/Detection branch.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:inputBindings>
            <group>
                <CharonMessagekey>
                    <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:Message/pfx19:EventProcessMsg/pfx19:OnFileQueried/pfx19:scanLogMessageKey"/>
                </CharonMessagekey>
                <reputationResult>
                    <xsl:copy-of select="$Parse-XML/ReputatonResult/ancestor-or-self::*/namespace::node()"/>
                    <xsl:copy-of select="$Parse-XML/ReputatonResult/@*"/>
                    <xsl:copy-of select="$Parse-XML/ReputatonResult/node()"/>
                </reputationResult>
                <xsl:copy-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF"/>
            </group>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ResendFile To Charon">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>297</pd:x>
        <pd:y>171</pd:y>
        <config>
            <processName>/EventProcess/SubProcess/ResendFile To Charon.process</processName>
        </config>
        <pd:inputBindings>
            <group>
                <xsl:copy-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF"/>
                <CharonResult>
                    <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:Message/pfx19:EventProcessMsg/pfx19:OnFileQueried/pfx19:scanLog"/>
                </CharonResult>
                <CharonMessagekey>
                    <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:Message/pfx19:EventProcessMsg/pfx19:OnFileQueried/pfx19:scanLogMessageKey"/>
                </CharonMessagekey>
            </group>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="The End">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>296</pd:x>
        <pd:y>462</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="InsertFileScanResult_Charon">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>430</pd:x>
        <pd:y>270</pd:y>
        <config>
            <processName>/ExternalServices/ToACS/InsertFileScanResult_Charon.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <pfx19:SMF>
                    <xsl:copy-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFHeader"/>
                    <pfx19:SMFBody>
                        <pfx19:Message>
                            <pfx16:CharonMessage>
                                <pfx16:Request>
                                    <pfx16:SHA1>
                                        <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:Message/pfx19:EventProcessMsg/pfx19:OnFileQueried/pfx19:fileSha1"/>
                                    </pfx16:SHA1>
                                </pfx16:Request>
                                <xsl:for-each select="$Parse-XML/ReputatonResult">
                                    <pfx16:Response>
                                        <xsl:for-each select="branchInfo">
                                            <branchInfo>
                                                <xsl:if test="branchName">
                                                    <branchName>
                                                        <xsl:value-of select="branchName"/>
                                                    </branchName>
                                                </xsl:if>
                                                <xsl:if test="detection">
                                                    <detection>
                                                        <xsl:value-of select="detection"/>
                                                    </detection>
                                                </xsl:if>
                                                <xsl:if test="version">
                                                    <version>
                                                        <xsl:value-of select="version"/>
                                                    </version>
                                                </xsl:if>
                                            </branchInfo>
                                        </xsl:for-each>
                                        <xsl:if test="errorCode">
                                            <errorCode>
                                                <xsl:value-of select="errorCode"/>
                                            </errorCode>
                                        </xsl:if>
                                        <xsl:if test="status">
                                            <status>
                                                <xsl:value-of select="status"/>
                                            </status>
                                        </xsl:if>
                                        <xsl:if test="branchStatus">
                                            <branchStatus>
                                                <xsl:value-of select="branchStatus"/>
                                            </branchStatus>
                                        </xsl:if>
                                        <xsl:if test="scanTime">
                                            <scanTime>
                                                <xsl:value-of select="scanTime"/>
                                            </scanTime>
                                        </xsl:if>
                                    </pfx16:Response>
                                </xsl:for-each>
                            </pfx16:CharonMessage>
                        </pfx19:Message>
                        <pfx19:SessionID>
                            <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:SessionID"/>
                        </pfx19:SessionID>
                        <xsl:copy-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody/pfx19:EventMsg"/>
                    </pfx19:SMFBody>
                </pfx19:SMF>
                <MessageKey>
                    <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:Message/pfx19:EventProcessMsg/pfx19:OnFileQueried/pfx19:scanLogMessageKey"/>
                </MessageKey>
                <xsl:if test="$Parse-XML/ReputatonResult/branchStatus">
                    <branchStatus>
                        <xsl:value-of select="$Parse-XML/ReputatonResult/branchStatus"/>
                    </branchStatus>
                </xsl:if>
                <RequestType>
                    <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:Message/pfx19:EventProcessMsg/pfx19:OnFileQueried/pfx19:requestType"/>
                </RequestType>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="isQA">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>527</pd:x>
        <pd:y>136</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Requery">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>820</pd:x>
        <pd:y>403</pd:y>
        <config>
            <processName>/ExternalServices/ToACS/2.1 Subprocesses/Requery.process</processName>
        </config>
        <pd:inputBindings>
            <group>
                <pfx19:SMF>
                    <pfx19:SMFHeader>
                        <pfx19:MessageKey>
                            <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFHeader/pfx19:MessageKey"/>
                        </pfx19:MessageKey>
                        <pfx19:ServiceName>
                            <xsl:value-of select="&quot;EventCenter&quot;"/>
                        </pfx19:ServiceName>
                        <pfx19:ServiceVersion>
                            <xsl:value-of select="$_globalVariables/ns3:GlobalVariables/EventProcess/version"/>
                        </pfx19:ServiceVersion>
                        <pfx19:SourceID>
                            <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFHeader/pfx19:SourceID"/>
                        </pfx19:SourceID>
                        <xsl:if test="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFHeader/pfx19:SourceIP">
                            <pfx19:SourceIP>
                                <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFHeader/pfx19:SourceIP"/>
                            </pfx19:SourceIP>
                        </xsl:if>
                        <xsl:if test="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFHeader/pfx19:RqTimestamp">
                            <pfx19:RqTimestamp>
                                <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFHeader/pfx19:RqTimestamp"/>
                            </pfx19:RqTimestamp>
                        </xsl:if>
                        <xsl:if test="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFHeader/pfx19:Priority">
                            <pfx19:Priority>
                                <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFHeader/pfx19:Priority"/>
                            </pfx19:Priority>
                        </xsl:if>
                    </pfx19:SMFHeader>
                    <pfx19:SMFBody>
                        <pfx19:Message>
                            <pfx19:EventProcessMsg>
                                <pfx19:OnFileQuerying>
                                    <pfx19:serviceId>
                                        <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:Message/pfx19:EventProcessMsg/pfx19:OnFileQueried/pfx19:serviceId"/>
                                    </pfx19:serviceId>
                                    <pfx19:fileSha1>
                                        <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:Message/pfx19:EventProcessMsg/pfx19:OnFileQueried/pfx19:fileSha1"/>
                                    </pfx19:fileSha1>
                                    <pfx19:filePath>
                                        <xsl:value-of select="&quot;&quot;"/>
                                    </pfx19:filePath>
                                    <pfx19:fileMd5>
                                        <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:Message/pfx19:EventProcessMsg/pfx19:OnFileQueried/pfx19:fileMd5"/>
                                    </pfx19:fileMd5>
                                    <pfx19:requestType>
                                        <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:Message/pfx19:EventProcessMsg/pfx19:OnFileQueried/pfx19:requestType"/>
                                    </pfx19:requestType>
                                    <xsl:if test="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:Message/pfx19:EventProcessMsg/pfx19:OnFileQueried/pfx19:CUST_BRANCH">
                                        <pfx19:CUST_BRANCH>
                                            <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:Message/pfx19:EventProcessMsg/pfx19:OnFileQueried/pfx19:CUST_BRANCH"/>
                                        </pfx19:CUST_BRANCH>
                                    </xsl:if>
                                    <pfx19:fileType>
                                        <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:Message/pfx19:EventProcessMsg/pfx19:OnFileQueried/pfx19:fileType"/>
                                    </pfx19:fileType>
                                </pfx19:OnFileQuerying>
                            </pfx19:EventProcessMsg>
                        </pfx19:Message>
                        <pfx19:Error>
                            <pfx19:src>
                                <xsl:value-of select="&quot;&quot;"/>
                            </pfx19:src>
                            <pfx19:error_code>
                                <xsl:value-of select="$Parse-XML/ReputatonResult/errorCode"/>
                            </pfx19:error_code>
                            <pfx19:error_message>
                                <xsl:value-of select="tib:render-xml($Parse-XML/ReputatonResult,1)"/>
                            </pfx19:error_message>
                            <pfx19:error_detail>
                                <xsl:value-of select="&quot;&quot;"/>
                            </pfx19:error_detail>
                        </pfx19:Error>
                        <pfx19:EventMsg>
                            <pfx19:ServiceID>
                                <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:EventMsg/pfx19:ServiceID"/>
                            </pfx19:ServiceID>
                            <pfx19:EventKey>
                                <xsl:value-of select="TM:getGUID()"/>
                            </pfx19:EventKey>
                            <pfx19:EventName>
                                <xsl:value-of select="&quot;OnFileQuerying&quot;"/>
                            </pfx19:EventName>
                            <pfx19:Consumer>
                                <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:EventMsg/pfx19:Consumer"/>
                            </pfx19:Consumer>
                            <pfx19:EventStepTypeId>
                                <xsl:value-of select="$_globalVariables/ns3:GlobalVariables/EventProcess/EventTypeId/OnFileQuerying"/>
                            </pfx19:EventStepTypeId>
                            <xsl:if test="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:EventMsg/pfx19:DependencyGroup">
                                <pfx19:DependencyGroup>
                                    <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:EventMsg/pfx19:DependencyGroup"/>
                                </pfx19:DependencyGroup>
                            </xsl:if>
                            <xsl:if test="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:EventMsg/pfx19:FileSha1">
                                <pfx19:FileSha1>
                                    <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:EventMsg/pfx19:FileSha1"/>
                                </pfx19:FileSha1>
                            </xsl:if>
                        </pfx19:EventMsg>
                    </pfx19:SMFBody>
                </pfx19:SMF>
                <serviceID>
                    <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:Message/pfx19:EventProcessMsg/pfx19:OnFileQueried/pfx19:serviceId"/>
                </serviceID>
                <MessageKey>
                    <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:Message/pfx19:EventProcessMsg/pfx19:OnFileQueried/pfx19:scanLogMessageKey"/>
                </MessageKey>
                <filsSHA1>
                    <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:Message/pfx19:EventProcessMsg/pfx19:OnFileQueried/pfx19:fileSha1"/>
                </filsSHA1>
                <WaitingQueue>
                    <xsl:value-of select="$_globalVariables/ns3:GlobalVariables/EventProcess/EventCenterWaitingQueue"/>
                </WaitingQueue>
                <DestinationQueue>
                    <xsl:value-of select="concat($_globalVariables/ns3:GlobalVariables/EventProcess/EventCenterQueue, $_globalVariables/ns3:GlobalVariables/EventProcess/version)"/>
                </DestinationQueue>
                <RetryCount>
                    <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/OtherProperties/RetryCount"/>
                </RetryCount>
                <ErrorRetryCount>
                    <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/OtherProperties/ErrorRetryCount"/>
                </ErrorRetryCount>
                <xsl:choose>
                    <xsl:when test="$Parse-XML/ReputatonResult/errorCode=&quot;CEG002&quot;">
                        <Charon_Result>
                            <xsl:value-of select="&quot;Error&quot;"/>
                        </Charon_Result>
                    </xsl:when>
                    <xsl:otherwise>
                        <Charon_Result>
                            <xsl:value-of select="$Parse-XML/ReputatonResult/status"/>
                        </Charon_Result>
                    </xsl:otherwise>
                </xsl:choose>
                <isSendFilePath>
                    <xsl:value-of select="0"/>
                </isSendFilePath>
                <StepTypeIdForStopRequery>
                    <xsl:value-of select="273"/>
                </StepTypeIdForStopRequery>
            </group>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse XML">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>240</pd:x>
        <pd:y>47</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term>
                <xsd:element name="ReputatonResult" type="pfx23:reputationResult"/>
            </term>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="TM:stringReplace($JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:Message/pfx19:EventProcessMsg/pfx19:OnFileQueried/pfx19:scanLog,'return', 'ReputatonResult')"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Check isRequery">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>817</pd:x>
        <pd:y>284</pd:y>
        <config>
            <processName>/EventProcess/SubProcess/Check isRequery.process</processName>
        </config>
        <pd:inputBindings>
            <group>
                <RequestType>
                    <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:Message/pfx19:EventProcessMsg/pfx19:OnFileQueried/pfx19:requestType"/>
                </RequestType>
                <xsl:for-each select="$Parse-XML/ReputatonResult">
                    <return>
                        <xsl:for-each select="branchInfo">
                            <branchInfo>
                                <xsl:if test="branchName">
                                    <branchName>
                                        <xsl:value-of select="branchName"/>
                                    </branchName>
                                </xsl:if>
                                <xsl:if test="detection">
                                    <detection>
                                        <xsl:value-of select="detection"/>
                                    </detection>
                                </xsl:if>
                                <xsl:if test="version">
                                    <version>
                                        <xsl:value-of select="version"/>
                                    </version>
                                </xsl:if>
                            </branchInfo>
                        </xsl:for-each>
                        <xsl:if test="errorCode">
                            <errorCode>
                                <xsl:value-of select="errorCode"/>
                            </errorCode>
                        </xsl:if>
                        <xsl:if test="status">
                            <status>
                                <xsl:value-of select="status"/>
                            </status>
                        </xsl:if>
                        <xsl:if test="branchStatus">
                            <branchStatus>
                                <xsl:value-of select="branchStatus"/>
                            </branchStatus>
                        </xsl:if>
                    </return>
                </xsl:for-each>
                <xsl:copy-of select="$GetSubmissionType/pfx24:Resultsets"/>
            </group>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="UpdateHashStatus">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>686</pd:x>
        <pd:y>155</pd:y>
        <config>
            <processName>/ExternalServices/ToACS/2.1 Subprocesses/Functions/SP/UpdateHashStatus.process</processName>
        </config>
        <pd:inputBindings>
            <UpdateHashStatus_Input>
                <FileSha1>
                    <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:Message/pfx19:EventProcessMsg/pfx19:OnFileQueried/pfx19:fileSha1"/>
                </FileSha1>
                <Status>
                    <xsl:value-of select="$Parse-XML/ReputatonResult/status"/>
                </Status>
                <xsl:choose>
                    <xsl:when test="$Parse-XML/ReputatonResult/status=&quot;Indeterminable&quot;">
                        <StatusCode>
                            <xsl:value-of select="'201'"/>
                        </StatusCode>
                    </xsl:when>
                    <xsl:when test="$Parse-XML/ReputatonResult/status=&quot;Normal&quot; or $Parse-XML/ReputatonResult/status=&quot;Malicious&quot;">
                        <StatusCode>
                            <xsl:value-of select="'206'"/>
                        </StatusCode>
                    </xsl:when>
                    <xsl:when test="$Parse-XML/ReputatonResult/status=&quot;NoDecision&quot;">
                        <StatusCode>
                            <xsl:value-of select="'211'"/>
                        </StatusCode>
                    </xsl:when>
                    <xsl:when test="$Parse-XML/ReputatonResult/status=&quot;SolProviding_Manual&quot;">
                        <StatusCode>
                            <xsl:value-of select="'210'"/>
                        </StatusCode>
                    </xsl:when>
                    <xsl:when test="$Parse-XML/ReputatonResult/status=&quot;SolProviding_Auto&quot;">
                        <StatusCode>
                            <xsl:value-of select="'209'"/>
                        </StatusCode>
                    </xsl:when>
                    <xsl:when test="$Parse-XML/ReputatonResult/status=&quot;Malicious_Migration&quot;">
                        <StatusCode>
                            <xsl:value-of select="'212'"/>
                        </StatusCode>
                    </xsl:when>
                    <xsl:when test="$Parse-XML/ReputatonResult/status=&quot;Manual_Migration&quot;">
                        <StatusCode>
                            <xsl:value-of select="'213'"/>
                        </StatusCode>
                    </xsl:when>
                    <xsl:otherwise>
                        <StatusCode>
                            <xsl:value-of select="'299'"/>
                        </StatusCode>
                    </xsl:otherwise>
                </xsl:choose>
                <RequestType>
                    <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:Message/pfx19:EventProcessMsg/pfx19:OnFileQueried/pfx19:requestType"/>
                </RequestType>
            </UpdateHashStatus_Input>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="OnTaskCreating">
        <pd:type>com.tibco.plugin.jms.JMSQueueSendActivity</pd:type>
        <pd:resourceType>ae.activities.JMSQueueSendActivity</pd:resourceType>
        <pd:x>513</pd:x>
        <pd:y>364</pd:y>
        <config>
            <PermittedMessageType>XML Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
                <destination>%%EventProcess/EventCenterQueue%%%%EventProcess/version%%</destination>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/Resources/JMS/JMS Connection.sharedjmscon</ConnectionReference>
            <InDataxsdString ref="pfx19:SMF"/>
        </config>
        <pd:inputBindings>
            <ns10:ActivityInput>
                <Body>
                    <pfx19:SMF>
                        <xsl:for-each select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFHeader">
                            <pfx19:SMFHeader>
                                <pfx19:MessageKey>
                                    <xsl:value-of select="pfx19:MessageKey"/>
                                </pfx19:MessageKey>
                                <pfx19:ServiceName>
                                    <xsl:value-of select="&quot;EventCenter&quot;"/>
                                </pfx19:ServiceName>
                                <pfx19:ServiceVersion>
                                    <xsl:value-of select="pfx19:ServiceVersion"/>
                                </pfx19:ServiceVersion>
                                <pfx19:SourceID>
                                    <xsl:value-of select="pfx19:SourceID"/>
                                </pfx19:SourceID>
                                <xsl:if test="pfx19:SourceIP">
                                    <pfx19:SourceIP>
                                        <xsl:value-of select="pfx19:SourceIP"/>
                                    </pfx19:SourceIP>
                                </xsl:if>
                                <pfx19:RqTimestamp>
                                    <xsl:value-of select="current-dateTime()"/>
                                </pfx19:RqTimestamp>
                                <xsl:if test="pfx19:Priority">
                                    <pfx19:Priority>
                                        <xsl:value-of select="pfx19:Priority"/>
                                    </pfx19:Priority>
                                </xsl:if>
                            </pfx19:SMFHeader>
                        </xsl:for-each>
                        <pfx19:SMFBody>
                            <pfx19:Message>
                                <pfx19:EventProcessMsg>
                                    <pfx19:OnTaskCreating>
                                        <pfx19:serviceId>
                                            <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:Message/pfx19:EventProcessMsg/pfx19:OnFileQueried/pfx19:serviceId"/>
                                        </pfx19:serviceId>
                                        <pfx19:fileSha1>
                                            <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:Message/pfx19:EventProcessMsg/pfx19:OnFileQueried/pfx19:fileSha1"/>
                                        </pfx19:fileSha1>
                                        <pfx19:taskType>
                                            <xsl:value-of select="'File to Verify'"/>
                                        </pfx19:taskType>
                                        <pfx19:Title>
                                            <xsl:value-of select="&quot;Please help verify this file&quot;"/>
                                        </pfx19:Title>
                                        <pfx19:Description>
                                            <xsl:value-of select="TM:stringReplace($JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:Message/pfx19:EventProcessMsg/pfx19:OnFileQueried/pfx19:scanLog,'return', 'ReputatonResult')"/>
                                        </pfx19:Description>
                                        <pfx19:isManual>
                                            <xsl:value-of select="0"/>
                                        </pfx19:isManual>
                                        <xsl:if test="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:Message/pfx19:EventProcessMsg/pfx19:OnFileQueried/pfx19:requestType">
                                            <pfx19:requestType>
                                                <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:Message/pfx19:EventProcessMsg/pfx19:OnFileQueried/pfx19:requestType"/>
                                            </pfx19:requestType>
                                        </xsl:if>
                                        <xsl:if test="$Parse-XML/ReputatonResult/status">
                                            <pfx19:charonResult>
                                                <xsl:value-of select="$Parse-XML/ReputatonResult/status"/>
                                            </pfx19:charonResult>
                                        </xsl:if>
                                    </pfx19:OnTaskCreating>
                                </pfx19:EventProcessMsg>
                            </pfx19:Message>
                            <pfx19:EventMsg>
                                <pfx19:ServiceID>
                                    <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:Message/pfx19:EventProcessMsg/pfx19:OnFileQueried/pfx19:serviceId"/>
                                </pfx19:ServiceID>
                                <pfx19:EventKey>
                                    <xsl:value-of select="TM:getGUID()"/>
                                </pfx19:EventKey>
                                <pfx19:EventName>
                                    <xsl:value-of select="&quot;OnTaskCreating&quot;"/>
                                </pfx19:EventName>
                                <pfx19:Consumer>
                                    <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:EventMsg/pfx19:Consumer"/>
                                </pfx19:Consumer>
                                <pfx19:EventStepTypeId>
                                    <xsl:value-of select="$_globalVariables/ns3:GlobalVariables/EventProcess/EventTypeId/OnTaskCreating"/>
                                </pfx19:EventStepTypeId>
                                <xsl:if test="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:Message/pfx19:EventProcessMsg/pfx19:OnFileQueried/pfx19:fileSha1">
                                    <pfx19:FileSha1>
                                        <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:Message/pfx19:EventProcessMsg/pfx19:OnFileQueried/pfx19:fileSha1"/>
                                    </pfx19:FileSha1>
                                </xsl:if>
                            </pfx19:EventMsg>
                        </pfx19:SMFBody>
                    </pfx19:SMF>
                </Body>
            </ns10:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetSubmissionType">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>690</pd:x>
        <pd:y>288</pd:y>
        <config>
            <processName>/ExternalServices/ToACS/2.1 Subprocesses/Functions/SP/GetSubmissionType.process</processName>
        </config>
        <pd:inputBindings>
            <UpdateHashStatus_Input>
                <FileSha1>
                    <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:Message/pfx19:EventProcessMsg/pfx19:OnFileQueried/pfx19:fileSha1"/>
                </FileSha1>
                <RequestType>
                    <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:Message/pfx19:EventProcessMsg/pfx19:OnFileQueried/pfx19:requestType"/>
                </RequestType>
            </UpdateHashStatus_Input>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="CallEventLogProcessStart">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>180</pd:x>
        <pd:y>136</pd:y>
        <config>
            <processName>/Utilities/ACSDBLogger/SendDBLog.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:inputBindings>
            <ns13:InsertNeuronEventLog>
                <ns13:ServiceId>
                    <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:EventMsg/pfx19:ServiceID"/>
                </ns13:ServiceId>
                <ns13:Consumer>
                    <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:EventMsg/pfx19:Consumer"/>
                </ns13:Consumer>
                <ns13:FILESHA1>
                    <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:EventMsg/pfx19:FileSha1"/>
                </ns13:FILESHA1>
                <ns13:EventId>
                    <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:EventMsg/pfx19:EventStepTypeId"/>
                </ns13:EventId>
                <ns13:TypeId>
                    <xsl:value-of select="1"/>
                </ns13:TypeId>
                <ns13:Log>
                    <xsl:value-of select="tib:render-xml($JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF, true())"/>
                </ns13:Log>
                <ns13:EventKey>
                    <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:EventMsg/pfx19:EventKey"/>
                </ns13:EventKey>
            </ns13:InsertNeuronEventLog>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="CallEventLogProcessCompeleted">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>965</pd:x>
        <pd:y>286</pd:y>
        <config>
            <processName>/Utilities/ACSDBLogger/SendDBLog.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:inputBindings>
            <ns13:InsertNeuronEventLog>
                <ns13:ServiceId>
                    <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:EventMsg/pfx19:ServiceID"/>
                </ns13:ServiceId>
                <ns13:Consumer>
                    <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:EventMsg/pfx19:Consumer"/>
                </ns13:Consumer>
                <ns13:FILESHA1>
                    <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:EventMsg/pfx19:FileSha1"/>
                </ns13:FILESHA1>
                <ns13:EventId>
                    <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:EventMsg/pfx19:EventStepTypeId"/>
                </ns13:EventId>
                <ns13:TypeId>
                    <xsl:value-of select="9"/>
                </ns13:TypeId>
                <ns13:Log>
                    <xsl:value-of select="&quot;Competed&quot;"/>
                </ns13:Log>
                <ns13:EventKey>
                    <xsl:value-of select="$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody[1]/pfx19:EventMsg/pfx19:EventKey"/>
                </ns13:EventKey>
            </ns13:InsertNeuronEventLog>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>Call Error Handling Process</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Call Error Handling Process</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CharonResult</pd:from>
        <pd:to>Detection branch</pd:to>
        <pd:xpathDescription>Detection Branch</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Parse-XML/ReputatonResult/status="Malicious" and $_globalVariables/ns3:GlobalVariables/ExternalServices/ToFRS/GetCharonFileReputatinRetry/isbranchdetection="true"
and 
$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody/pfx19:Message/pfx19:ACSMessage/pfx19:CASE/pfx19:SR_TYPE !='False Alarm' 
and 
$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody/pfx19:Message/pfx19:ACSMessage/pfx19:CASE/pfx19:SR_TYPE!='Clean Failed'</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Detection branch</pd:from>
        <pd:to>CallEventLogProcessCompeleted</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CharonResult</pd:from>
        <pd:to>ResendFile To Charon</pd:to>
        <pd:xpathDescription>Indeterminable</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Parse-XML/ReputatonResult/status="Indeterminable"</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>ResendFile To Charon</pd:from>
        <pd:to>The End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CharonResult</pd:from>
        <pd:to>InsertFileScanResult_Charon</pd:to>
        <pd:xpathDescription>Normal or Malicious or SolProviding_Auto or Malicious_Migration</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Parse-XML/ReputatonResult/status = "Normal" or
$Parse-XML/ReputatonResult/status = "Malicious" or
$Parse-XML/ReputatonResult/status = "SolProviding_Auto" or
$Parse-XML/ReputatonResult/status = "Malicious_Migration"</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>CharonResult</pd:from>
        <pd:to>isQA</pd:to>
        <pd:xpathDescription>NoDecision</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Parse-XML/ReputatonResult/status = "NoDecision"</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>isQA</pd:from>
        <pd:to>UpdateHashStatus</pd:to>
        <pd:xpathDescription>DR</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>isQA</pd:from>
        <pd:to>InsertFileScanResult_Charon</pd:to>
        <pd:xpathDescription>QA</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$JMS-Queue-Receiver/ns10:ActivityOutput/Body/pfx19:SMF/pfx19:SMFBody/pfx19:Message/pfx19:EventProcessMsg/pfx19:OnFileQueried/pfx19:requestType = "QueryAssessment"</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>The End</pd:from>
        <pd:to>CallEventLogProcessCompeleted</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Requery</pd:from>
        <pd:to>CallEventLogProcessCompeleted</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>CharonResult</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>JMS Queue Receiver</pd:from>
        <pd:to>Parse XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Check isRequery</pd:from>
        <pd:to>Requery</pd:to>
        <pd:xpathDescription>Y</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Check-isRequery/root/isRquery="true"</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Check isRequery</pd:from>
        <pd:to>CallEventLogProcessCompeleted</pd:to>
        <pd:xpathDescription>N</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>InsertFileScanResult_Charon</pd:from>
        <pd:to>UpdateHashStatus</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CharonResult</pd:from>
        <pd:to>UpdateHashStatus</pd:to>
        <pd:xpathDescription>SolProviding_Manual or Indeterminable or Analyzing or Manual_Migration</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>OnTaskCreating</pd:from>
        <pd:to>The End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>UpdateHashStatus</pd:from>
        <pd:to>GetSubmissionType</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetSubmissionType</pd:from>
        <pd:to>Check isRequery</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>JMS Queue Receiver</pd:from>
        <pd:to>CallEventLogProcessStart</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CallEventLogProcessStart</pd:from>
        <pd:to>Parse XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CallEventLogProcessCompeleted</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetSubmissionType</pd:from>
        <pd:to>OnTaskCreating</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>
<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="http://www.tibco.com/pe/EngineTypes" xmlns:TM="java://com.trendmicro.TMBWUtilities" xmlns:ns5="http://www.tibco.com/schemas/ACSService2.1/XSD/Common/Schema.xsd2" xmlns:pfx="http://www.trendmicro.com/ESB/ACS/schemas/SMF" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns2="http://www.trendmicro.com/ESB/FRS/schemas/SMF" xmlns:ns1="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:ns4="http://www.trendmicro.com/ESB/schemas/error" xmlns:ns3="http://tempuri.org/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx2="http://www.tibco.com/pe/WriteToLogActivitySchema">
    <xsd:import namespace="http://www.trendmicro.com/ESB/ACS/schemas/SMF" schemaLocation="/XSD/Common/SMF.xsd"/>
    <xsd:import namespace="http://www.trendmicro.com/ESB/schemas/error" schemaLocation="/XSD/Common/error.xsd"/>
    <pd:name>EventProcess/PSC_G2/FRS/OnFileQuerying.process</pd:name>
    <pd:startName>JMS Queue Receiver</pd:startName>
    <pd:startX>0</pd:startX>
    <pd:startY>0</pd:startY>
    <pd:returnBindings/>
    <pd:starter name="JMS Queue Receiver">
        <pd:type>com.tibco.plugin.jms.JMSQueueEventSource</pd:type>
        <pd:resourceType>ae.activities.JMSQueueEventSource</pd:resourceType>
        <pd:x>65</pd:x>
        <pd:y>99</pd:y>
        <config>
            <PermittedMessageType>XML Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
                <destination>%%EventProcess/OnFileQueryingQueue%%%%EventProcess/version%%</destination>
                <selector>JMSXGroupID='%%EventProcess/PSC_G2/FRS/Consumer%%'</selector>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/Resources/JMS/JMS Connection.sharedjmscon</ConnectionReference>
            <ApplicationProperties>/Resources/JMS/JMS Application Properties.sharedjmsapp</ApplicationProperties>
            <OutDataxsdString ref="pfx:SMF"/>
        </config>
        <pd:inputBindings/>
    </pd:starter>
    <pd:endName>End</pd:endName>
    <pd:endX>790</pd:endX>
    <pd:endY>107</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1384742284115</pd:targetNamespace>
    <pd:activity name="SendGetFileReputationRequest">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>468</pd:x>
        <pd:y>102</pd:y>
        <config>
            <processName>/EventProcess/SubProcess/SendGetFileReputationRequest_Querying.process</processName>
        </config>
        <pd:inputBindings>
            <group>
                <RetryCount>
                    <xsl:value-of select="if (tib:trim(number($JMS-Queue-Receiver/ns1:ActivityOutput/OtherProperties/RetryCount))='NaN') then 0 else $JMS-Queue-Receiver/ns1:ActivityOutput/OtherProperties/RetryCount"/>
                </RetryCount>
                <ErrorRetryCount>
                    <xsl:value-of select="if (tib:trim(number($JMS-Queue-Receiver/ns1:ActivityOutput/OtherProperties/ErrorRetryCount))=&quot;NaN&quot;) then 0 else $JMS-Queue-Receiver/ns1:ActivityOutput/OtherProperties/ErrorRetryCount"/>
                </ErrorRetryCount>
                <MessageKey>
                    <xsl:value-of select="$JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:SMF/pfx:SMFBody[1]/pfx:EventMsg/pfx:EventKey"/>
                </MessageKey>
                <pfx:SMF>
                    <xsl:copy-of select="$JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:SMF/pfx:SMFHeader"/>
                    <pfx:SMFBody>
                        <pfx:Message>
                            <pfx:EventProcessMsg>
                                <xsl:for-each select="$JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:SMF/pfx:SMFBody[1]/pfx:Message/pfx:EventProcessMsg/pfx:OnFileQuerying">
                                    <pfx:OnFileQuerying>
                                        <pfx:serviceId>
                                            <xsl:value-of select="pfx:serviceId"/>
                                        </pfx:serviceId>
                                        <pfx:fileSha1>
                                            <xsl:value-of select="pfx:fileSha1"/>
                                        </pfx:fileSha1>
                                        <pfx:filePath>
                                            <xsl:value-of select="pfx:filePath"/>
                                        </pfx:filePath>
                                        <pfx:fileMd5>
                                            <xsl:value-of select="pfx:fileMd5"/>
                                        </pfx:fileMd5>
                                        <xsl:if test="pfx:fileSha256">
                                            <pfx:fileSha256>
                                                <xsl:value-of select="pfx:fileSha256"/>
                                            </pfx:fileSha256>
                                        </xsl:if>
                                        <pfx:requestType>
                                            <xsl:value-of select="pfx:requestType"/>
                                        </pfx:requestType>
                                        <xsl:choose>
                                            <xsl:when test="tib:trim(current()/pfx:CUST_BRANCH)=&quot;&quot;">
                                                <pfx:CUST_BRANCH>
                                                    <xsl:value-of select="&quot;TREND_ICRC&quot;"/>
                                                </pfx:CUST_BRANCH>
                                            </xsl:when>
                                            <xsl:otherwise>
                                                <xsl:if test="pfx:CUST_BRANCH">
                                                    <pfx:CUST_BRANCH>
                                                        <xsl:value-of select="pfx:CUST_BRANCH"/>
                                                    </pfx:CUST_BRANCH>
                                                </xsl:if>
                                            </xsl:otherwise>
                                        </xsl:choose>
                                        <xsl:if test="pfx:fileType">
                                            <pfx:fileType>
                                                <xsl:value-of select="pfx:fileType"/>
                                            </pfx:fileType>
                                        </xsl:if>
                                        <xsl:if test="pfx:withCompetitorResult">
                                            <pfx:withCompetitorResult>
                                                <xsl:value-of select="pfx:withCompetitorResult"/>
                                            </pfx:withCompetitorResult>
                                        </xsl:if>
                                        <xsl:if test="pfx:SR_TYPE">
                                            <pfx:SR_TYPE>
                                                <xsl:value-of select="pfx:SR_TYPE"/>
                                            </pfx:SR_TYPE>
                                        </xsl:if>
                                    </pfx:OnFileQuerying>
                                </xsl:for-each>
                            </pfx:EventProcessMsg>
                        </pfx:Message>
                        <xsl:if test="$JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:SMF/pfx:SMFBody[1]/pfx:XMLPayload">
                            <pfx:XMLPayload>
                                <xsl:value-of select="$JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:SMF/pfx:SMFBody[1]/pfx:XMLPayload"/>
                            </pfx:XMLPayload>
                        </xsl:if>
                        <xsl:copy-of select="$JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:SMF/pfx:SMFBody/pfx:MessagePayload"/>
                        <pfx:SessionID>
                            <xsl:value-of select="$JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:SMF/pfx:SMFBody[1]/pfx:SessionID"/>
                        </pfx:SessionID>
                        <xsl:copy-of select="$JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:SMF/pfx:SMFBody/pfx:EventMsg"/>
                    </pfx:SMFBody>
                </pfx:SMF>
                <lastCharonResult>
                    <xsl:value-of select="&quot;&quot;"/>
                </lastCharonResult>
            </group>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ACS_Log">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>332</pd:x>
        <pd:y>103</pd:y>
        <config>
            <processName>/Utilities/ACSDBLogger/SendDBLog.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:inputBindings>
            <ns3:InsertFileActivityLogWithRequestType>
                <ns3:serviceID>
                    <xsl:value-of select="$JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:SMF/pfx:SMFBody[1]/pfx:Message/pfx:EventProcessMsg/pfx:OnFileQuerying/pfx:serviceId"/>
                </ns3:serviceID>
                <xsl:if test="$JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:SMF/pfx:SMFBody[1]/pfx:Message/pfx:EventProcessMsg/pfx:OnFileQuerying/pfx:fileSha1">
                    <ns3:fileSHA1>
                        <xsl:value-of select="$JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:SMF/pfx:SMFBody[1]/pfx:Message/pfx:EventProcessMsg/pfx:OnFileQuerying/pfx:fileSha1"/>
                    </ns3:fileSHA1>
                </xsl:if>
                <ns3:stepTypeID>
                    <xsl:value-of select="200"/>
                </ns3:stepTypeID>
                <ns3:message>
                    <xsl:value-of select="&quot;&quot;"/>
                </ns3:message>
                <ns3:MessageKey>
                    <xsl:value-of select="$JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:SMF/pfx:SMFBody[1]/pfx:EventMsg/pfx:EventKey"/>
                </ns3:MessageKey>
                <ns3:RequestType>
                    <xsl:value-of select="&quot;&quot;"/>
                </ns3:RequestType>
            </ns3:InsertFileActivityLogWithRequestType>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>937</pd:x>
        <pd:y>243</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Error Handling Process">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>938</pd:x>
        <pd:y>117</pd:y>
        <config>
            <processName>/Services/SharedServices/Error Handling Process.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:coercions>
            <pd:coercion xpath="$_error/ns:ErrorReport/Data/*" element="ns4:Error"/>
        </pd:coercions>
        <pd:inputBindings>
            <group>
                <pfx:SMF>
                    <xsl:copy-of select="$JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:SMF/pfx:SMFHeader"/>
                    <pfx:SMFBody>
                        <xsl:copy-of select="$JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:SMF/pfx:SMFBody/pfx:Message"/>
                        <xsl:if test="$JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:SMF/pfx:SMFBody[1]/pfx:XMLPayload">
                            <pfx:XMLPayload>
                                <xsl:value-of select="$JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:SMF/pfx:SMFBody[1]/pfx:XMLPayload"/>
                            </pfx:XMLPayload>
                        </xsl:if>
                        <xsl:copy-of select="$JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:SMF/pfx:SMFBody/pfx:MessagePayload"/>
                        <xsl:choose>
                            <xsl:when test="exists($_error/ns:ErrorReport/Data/ns4:Error)">
                                <pfx:Error>
                                    <pfx:src>
                                        <xsl:value-of select="$_error/ns:ErrorReport/Data/ns4:Error/ns4:src"/>
                                    </pfx:src>
                                    <pfx:error_code>
                                        <xsl:value-of select="$_error/ns:ErrorReport/Data/ns4:Error/ns4:error_code"/>
                                    </pfx:error_code>
                                    <pfx:error_message>
                                        <xsl:value-of select="$_error/ns:ErrorReport/Data/ns4:Error/ns4:error_message"/>
                                    </pfx:error_message>
                                    <xsl:if test="$_error/ns:ErrorReport/Data/ns4:Error/ns4:stack_trace">
                                        <pfx:error_detail>
                                            <xsl:value-of select="$_error/ns:ErrorReport/Data/ns4:Error/ns4:stack_trace"/>
                                        </pfx:error_detail>
                                    </xsl:if>
                                </pfx:Error>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx:Error>
                                    <pfx:src>
                                        <xsl:value-of select="$_error/ns:ErrorReport/ProcessStack"/>
                                    </pfx:src>
                                    <pfx:error_code>
                                        <xsl:value-of select="$_error/ns:ErrorReport/MsgCode"/>
                                    </pfx:error_code>
                                    <pfx:error_message>
                                        <xsl:value-of select="$_error/ns:ErrorReport/Msg"/>
                                    </pfx:error_message>
                                    <xsl:if test="$_error/ns:ErrorReport/StackTrace">
                                        <pfx:error_detail>
                                            <xsl:value-of select="$_error/ns:ErrorReport/StackTrace"/>
                                        </pfx:error_detail>
                                    </xsl:if>
                                </pfx:Error>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:if test="$JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:SMF/pfx:SMFBody[1]/pfx:SessionID">
                            <pfx:SessionID>
                                <xsl:value-of select="$JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:SMF/pfx:SMFBody[1]/pfx:SessionID"/>
                            </pfx:SessionID>
                        </xsl:if>
                        <xsl:copy-of select="$JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:SMF/pfx:SMFBody/pfx:EventMsg"/>
                    </pfx:SMFBody>
                </pfx:SMF>
                <ns5:InsertNeuronEventLog>
                    <ns5:ServiceId>
                        <xsl:value-of select="$JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:SMF/pfx:SMFBody[1]/pfx:EventMsg/pfx:ServiceID"/>
                    </ns5:ServiceId>
                    <ns5:Consumer>
                        <xsl:value-of select="$JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:SMF/pfx:SMFBody[1]/pfx:EventMsg/pfx:Consumer"/>
                    </ns5:Consumer>
                    <ns5:FILESHA1>
                        <xsl:value-of select="$JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:SMF/pfx:SMFBody[1]/pfx:EventMsg/pfx:FileSha1"/>
                    </ns5:FILESHA1>
                    <ns5:EventId>
                        <xsl:value-of select="$JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:SMF/pfx:SMFBody[1]/pfx:EventMsg/pfx:EventStepTypeId"/>
                    </ns5:EventId>
                    <ns5:TypeId>
                        <xsl:value-of select="&quot;4&quot;"/>
                    </ns5:TypeId>
                    <ns5:Log>
                        <xsl:value-of select="tib:render-xml($Catch/exceptiondata, true())"/>
                    </ns5:Log>
                    <ns5:EventKey>
                        <xsl:value-of select="$JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:SMF/pfx:SMFBody[1]/pfx:EventMsg/pfx:EventKey"/>
                    </ns5:EventKey>
                </ns5:InsertNeuronEventLog>
                <isESBLog>
                    <xsl:value-of select="false()"/>
                </isESBLog>
            </group>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="CallEventLogProcessEnd">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>611</pd:x>
        <pd:y>102</pd:y>
        <config>
            <processName>/Utilities/ACSDBLogger/SendDBLog.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:inputBindings>
            <ns5:InsertNeuronEventLog>
                <ns5:ServiceId>
                    <xsl:value-of select="$JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:SMF/pfx:SMFBody[1]/pfx:EventMsg/pfx:ServiceID"/>
                </ns5:ServiceId>
                <ns5:Consumer>
                    <xsl:value-of select="$JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:SMF/pfx:SMFBody[1]/pfx:EventMsg/pfx:Consumer"/>
                </ns5:Consumer>
                <ns5:FILESHA1>
                    <xsl:value-of select="&quot;&quot;"/>
                </ns5:FILESHA1>
                <ns5:EventId>
                    <xsl:value-of select="$JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:SMF/pfx:SMFBody[1]/pfx:EventMsg/pfx:EventStepTypeId"/>
                </ns5:EventId>
                <ns5:TypeId>
                    <xsl:value-of select="&quot;9&quot;"/>
                </ns5:TypeId>
                <ns5:Log>
                    <xsl:value-of select="tib:render-xml($JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:SMF, true())"/>
                </ns5:Log>
                <ns5:EventKey>
                    <xsl:value-of select="$JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:SMF/pfx:SMFBody[1]/pfx:EventMsg/pfx:EventKey"/>
                </ns5:EventKey>
            </ns5:InsertNeuronEventLog>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="CallEventLogProcessStart">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>204</pd:x>
        <pd:y>226</pd:y>
        <config>
            <processName>/Utilities/ACSDBLogger/SendDBLog.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:inputBindings>
            <ns5:InsertNeuronEventLog>
                <ns5:ServiceId>
                    <xsl:value-of select="$JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:SMF/pfx:SMFBody[1]/pfx:EventMsg/pfx:ServiceID"/>
                </ns5:ServiceId>
                <ns5:Consumer>
                    <xsl:value-of select="$JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:SMF/pfx:SMFBody[1]/pfx:EventMsg/pfx:Consumer"/>
                </ns5:Consumer>
                <ns5:FILESHA1>
                    <xsl:value-of select="$JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:SMF/pfx:SMFBody[1]/pfx:EventMsg/pfx:FileSha1"/>
                </ns5:FILESHA1>
                <ns5:EventId>
                    <xsl:value-of select="$JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:SMF/pfx:SMFBody[1]/pfx:EventMsg/pfx:EventStepTypeId"/>
                </ns5:EventId>
                <ns5:TypeId>
                    <xsl:value-of select="1"/>
                </ns5:TypeId>
                <ns5:Log>
                    <xsl:value-of select="tib:render-xml($JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:SMF, true())"/>
                </ns5:Log>
                <ns5:EventKey>
                    <xsl:value-of select="$JMS-Queue-Receiver/ns1:ActivityOutput/Body/pfx:SMF/pfx:SMFBody[1]/pfx:EventMsg/pfx:EventKey"/>
                </ns5:EventKey>
            </ns5:InsertNeuronEventLog>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>JMS Queue Receiver</pd:from>
        <pd:to>ACS_Log</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SendGetFileReputationRequest</pd:from>
        <pd:to>CallEventLogProcessEnd</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ACS_Log</pd:from>
        <pd:to>SendGetFileReputationRequest</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>Error Handling Process</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Error Handling Process</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CallEventLogProcessEnd</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>JMS Queue Receiver</pd:from>
        <pd:to>CallEventLogProcessStart</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CallEventLogProcessStart</pd:from>
        <pd:to>ACS_Log</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>